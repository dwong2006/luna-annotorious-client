{"version":3,"file":"luna-annotorious.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte-icons-pack/Icon.svelte","../node_modules/svelte-icons-pack/bs/BsPencil.js","../node_modules/autosize-input/index.js","../src/popup/Transcription.svelte","../node_modules/svelte-helpers/spring-transitions.js","../node_modules/svelte-icons-pack/ri/RiDesignShapeFill.js","../node_modules/svelte-icons-pack/ri/RiEditorText.js","../node_modules/svelte-icons-pack/bi/BiBuildingHouse.js","../src/popup/HUD.svelte","../src/popup/LunaPopup.svelte","../src/LunaPlugin.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\nexport let src;\nexport let size = \"1em\";\nexport let color = undefined;\nexport let title = undefined;\nexport let className = \"\";\n\nlet innerHtml;\nlet attr;\n$: {\n  attr = {};\n  if (color) {\n    if (src.a.stroke !== \"none\") {\n      attr.stroke = color;\n    }\n    if (src.a.fill !== \"none\") {\n      attr.fill = color;\n    }\n  }\n}\n\n$: {\n  innerHtml = (title ? `<title>${title}</title>` : \"\") + src.c;\n}\n</script>\n\n<svg\nwidth={size}\nheight={size}\nstroke-width=\"0\"\nclass={className}\n{...src.a}\n{...attr}\nxmlns=\"http://www.w3.org/2000/svg\">\n{@html innerHtml}\n</svg>\n","// BsPencil\nexport default {\n  a: {\n    fill: 'currentColor',\n    viewBox: '0 0 16 16'\n  },\n  c: '<path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"></path>'\n};","var GHOST_ELEMENT_ID = '__autosizeInputGhost'\n\nvar characterEntities = {\n  ' ': 'nbsp',\n  '<': 'lt',\n  '>': 'gt'\n}\nfunction mapSpecialCharacterToCharacterEntity (specialCharacter) {\n  return '&' + characterEntities[specialCharacter] + ';'\n}\nfunction escapeSpecialCharacters (string) {\n  return string.replace(/\\s|<|>/g, mapSpecialCharacterToCharacterEntity)\n}\n\n// Create `ghostElement`, with inline styles to hide it and ensure that the text is all\n// on a single line.\nfunction createGhostElement () {\n  var ghostElement = document.createElement('div')\n  ghostElement.id = GHOST_ELEMENT_ID\n  ghostElement.style.cssText =\n    'display:inline-block;height:0;overflow:hidden;position:absolute;top:0;visibility:hidden;white-space:nowrap;'\n  document.body.appendChild(ghostElement)\n  return ghostElement\n}\n\nmodule.exports = function (element, options) {\n  var elementStyle = window.getComputedStyle(element)\n  // prettier-ignore\n  var elementCssText = 'box-sizing:' + elementStyle.boxSizing +\n                      ';border-left:' + elementStyle.borderLeftWidth + ' solid red' +\n                      ';border-right:' + elementStyle.borderRightWidth + ' solid red' +\n                      ';font-family:' + elementStyle.fontFamily +\n                      ';font-feature-settings:' + elementStyle.fontFeatureSettings +\n                      ';font-kerning:' + elementStyle.fontKerning +\n                      ';font-size:' + elementStyle.fontSize +\n                      ';font-stretch:' + elementStyle.fontStretch +\n                      ';font-style:' + elementStyle.fontStyle +\n                      ';font-variant:' + elementStyle.fontVariant +\n                      ';font-variant-caps:' + elementStyle.fontVariantCaps +\n                      ';font-variant-ligatures:' + elementStyle.fontVariantLigatures +\n                      ';font-variant-numeric:' + elementStyle.fontVariantNumeric +\n                      ';font-weight:' + elementStyle.fontWeight +\n                      ';letter-spacing:' + elementStyle.letterSpacing +\n                      ';margin-left:' + elementStyle.marginLeft +\n                      ';margin-right:' + elementStyle.marginRight +\n                      ';padding-left:' + elementStyle.paddingLeft +\n                      ';padding-right:' + elementStyle.paddingRight +\n                      ';text-indent:' + elementStyle.textIndent +\n                      ';text-transform:' + elementStyle.textTransform\n\n  // Assigns an appropriate width to the given `element` based on its contents.\n  function setWidth () {\n    var string = element.value || element.getAttribute('placeholder') || ''\n    // Check if the `ghostElement` exists. If no, create it.\n    var ghostElement =\n      document.getElementById(GHOST_ELEMENT_ID) || createGhostElement()\n    // Copy all width-affecting styles to the `ghostElement`.\n    ghostElement.style.cssText += elementCssText\n    ghostElement.innerHTML = escapeSpecialCharacters(string)\n    // Copy the width of `ghostElement` to `element`.\n    var width = window.getComputedStyle(ghostElement).width\n    element.style.width = width\n    return width\n  }\n\n  element.addEventListener('input', setWidth)\n\n  var width = setWidth()\n\n  // Set `min-width` only if `options.minWidth` was set, and only if the initial\n  // width is non-zero.\n  if (options && options.minWidth && width !== '0px') {\n    element.style.minWidth = width\n  }\n\n  // Return a function for unbinding the event listener and removing the `ghostElement`.\n  return function () {\n    element.removeEventListener('input', setWidth)\n    var ghostElement = document.getElementById(GHOST_ELEMENT_ID)\n    if (ghostElement) {\n      ghostElement.parentNode.removeChild(ghostElement)\n    }\n  }\n}\n","<script type=\"ts\">\n  import { tick, createEventDispatcher } from 'svelte';\n  import autosizeInput from 'autosize-input';\n\n  const dispatch = createEventDispatcher();\n\n  export let value: string;\n\n  export let editable: boolean;\n\n  $: {\n    if (editable) {\n      tick().then(() => {\n        autosizeInput(inputEl);\n        inputEl.focus();\n      });\n    }\n  }\n\n  let inputEl: HTMLInputElement;\n\n  const onSave = (evt: Event) => {\n    evt.preventDefault();\n    dispatch('change', inputEl.value);\n  }\n</script>\n\n<div>\n  {#if editable}\n    <form on:submit={onSave}>\n      <input bind:this={inputEl} value={value} spellcheck={false} />\n    </form>\n  {:else}\n    <span class=\"transcription\">{value}</span>\n  {/if}\n</div>\n\n<style>\n  input {\n    font-size: 16px;\n    padding: 2px 3px;\n    outline: none;\n    border: 1px solid #4285f4;\n    border-radius: 2px;\n    background-color: #e0ebff;\n  }\n\n  .transcription {\n    padding: 3px 4px;\n    display: inline-block;\n  }\n</style>","const DEFAULTS = { stiffness: 0.15, damping: 0.8, precision: 0.01 };\n\nconst springToTickValue = (frames, out = false) => t => {\n  t = out ? 1 - t : t;\n  const indexPrecise = t * frames.length;\n  const indexExcess = indexPrecise % 1;\n\n  const index = Math.min(~~indexPrecise, frames.length - 1);\n\n  const a = frames[index];\n  const b = frames[index + 1] == null ? a : frames[index + 1];\n  return indexExcess ? a + (b - a) * indexExcess : a;\n};\n\nexport function springIn(from, to, springOptions){\n  return springToTransition(false, from, to, springOptions);\n}\n\nexport function springOut(from, to, springOptions){\n  return springToTransition(true, from, to, springOptions);\n}\n\nfunction springToTransition(out, from, to, springOptions) {\n  const frames = springFrames(from, to, springOptions)\n  return {\n    duration: (frames.length * 1000) / 60,\n    tickToValue: springToTickValue(frames, out),\n  };\n}\n\nfunction is_date(obj) {\n\treturn Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nexport function springFrames(from, to, opts) {\n  opts = Object.assign({}, DEFAULTS, opts);\n\n  let value = from;\n  let last_val = from;\n  let dt = 1;\n  const values = [from];\n\n  let ctx;\n  do {\n    ctx = {\n      inv_mass: 1,\n      opts,\n      settled: true,\n      dt,\n    };\n\n    const next_value = tick_spring(ctx, last_val, value, to);\n    values.push(next_value);\n    last_val = value;\n    value = next_value;\n  } while (!ctx.settled);\n\n  return values;\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n  if (typeof current_value === \"number\" || is_date(current_value)) {\n    const delta = target_value - current_value;\n\n    const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n    const spring = ctx.opts.stiffness * delta;\n    const damper = ctx.opts.damping * velocity;\n    const acceleration = (spring - damper) * ctx.inv_mass;\n    const d = (velocity + acceleration) * ctx.dt;\n\n    if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n      return target_value; // settled\n    } else {\n      ctx.settled = false; // signal loop to keep ticking\n      return is_date(current_value) ? new Date(current_value.getTime() + d) : current_value + d;\n    }\n  } else if (Array.isArray(current_value)) {\n    return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n  } else if (typeof current_value === \"object\") {\n    const next_value = {};\n    for (const k in current_value) next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n    return next_value;\n  } else {\n    throw new Error(`Cannot spring ${typeof current_value} values`);\n  }\n}\n","// RiDesignShapeFill\nexport default {\n  a: {\n    viewBox: '0 0 24 24'\n  },\n  c: '<g><path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\\n<path d=\"M5 8a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm14 0a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 14a3 3 0 1 1 0-6 3 3 0 0 1 0 6zM5 22a3 3 0 1 1 0-6 3 3 0 0 1 0 6zM9 4h6v2H9V4zm0 14h6v2H9v-2zM4 9h2v6H4V9zm14 0h2v6h-2V9z\"></path></g>'\n};","// RiEditorText\nexport default {\n  a: {\n    viewBox: '0 0 24 24'\n  },\n  c: '<g><path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\\n<path d=\"M13 6v15h-2V6H5V4h14v2z\"></path></g>'\n};","// BiBuildingHouse\nexport default {\n  a: {},\n  c: '<path d=\"M19 2H9c-1.103 0-2 .897-2 2v5.586l-4.707 4.707A1 1 0 0 0 3 16v5a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V4c0-1.103-.897-2-2-2zm-8 18H5v-5.586l3-3 3 3V20zm8 0h-6v-4a.999.999 0 0 0 .707-1.707L9 9.586V4h10v16z\"></path><path d=\"M11 6h2v2h-2zm4 0h2v2h-2zm0 4.031h2V12h-2zM15 14h2v2h-2zm-8 1h2v2H7z\"></path>'\n};","<script type=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { springIn, springOut } from 'svelte-helpers/spring-transitions';\n  \n  import Icon from 'svelte-icons-pack/Icon.svelte';\n  import RiDesignShapeFill from 'svelte-icons-pack/ri/RiDesignShapeFill';\n  import RiEditorText from 'svelte-icons-pack/ri/RiEditorText';\n  import BiBuildingHouse from 'svelte-icons-pack/bi/BiBuildingHouse';\n\n  const SPRING_IN = { stiffness: 0.2, damping: 0.3 };\n  const SPRING_OUT = { stiffness: 0.3, damping: 0.8 };\n\n  const dispatch = createEventDispatcher();\n\n  const anim = (from: number, to: number, angle: number, spring: Function, conf: object) => (node: Element) => {\n    const { duration, tickToValue } = spring(from, to, conf);\n\n    return {\n      duration: duration,\n      css: (t: number) => { \n        const dx = - tickToValue(t) * Math.sin(angle);\n        const dy = tickToValue(t) * Math.cos(angle);\n        return `transform: translate(${dx}px, ${dy}px)`;\n      }\n    }\n  }\n\n  const inShape = anim(82, 0, 0, springIn, SPRING_IN);\n  const inTranscription = anim(82, 0, Math.PI / 4, springIn, SPRING_IN);\n  const inType = anim(82, 0, Math.PI / 2, springIn, SPRING_IN);\n\n  const outShape = anim(0, 82, 0, springOut, SPRING_OUT);\n  const outTranscription = anim(0, 82, Math.PI / 4, springOut, SPRING_OUT);\n  const outType = anim(0, 82, Math.PI / 2, springOut, SPRING_OUT);\n</script>\n\n<div class=\"r8s-hover-hud\">\n  <ul>\n    <li>\n      <button \n        class=\"action-button\" \n        id=\"action-edit-shape\" \n        data-tooltip=\"Edit Shape\"\n        on:click={() => dispatch('editShape')}\n        in:inShape \n        out:outShape>\n        <Icon src={RiDesignShapeFill} />\n      </button>\n    </li>\n\n    <li>\n      <button \n        class=\"action-button\" \n        id=\"action-fix-transcription\" \n        data-tooltip=\"Fix Transcription\"\n        on:click={() => dispatch('fixTranscription')}\n        in:inTranscription \n        out:outTranscription>\n        <Icon src={RiEditorText} />\n      </button>\n    </li>\n\n    <li>\n      <button \n        class=\"action-button\" \n        id=\"action-change-type\"\n        data-tooltip=\"Change Feature Type\" \n        on:click={() => dispatch('changeType')}\n        in:inType \n        out:outType>\n        <Icon src={BiBuildingHouse} />\n      </button>\n    </li>\n  </ul>\n  <div class=\"mousetrap\" />\n</div>\n\n<style>\n  .r8s-hover-hud {\n    z-index: 0;\n  }\n\n  ul {\n    list-style-type: none;\n  }\n\n  ul, li {\n    margin: 0;\n    padding: 0;\n  }\n\n  button {\n    outline: none;\n    border: none;\n    border-radius: 50%;\n    background-color: #4285f4;\n    width: 52px;\n    height: 52px;\n    font-size: 24px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    color: #fff;\n    box-shadow:0 0 12px rgba(0, 0, 0, 0.25);\n    position: absolute;\n    cursor: pointer;\n  }\n\n  :global(.r8s-hover-hud button svg) {\n    fill: #fff;\n  }\n\n  button:hover {\n    background-color: #68a1ff;\n  }\n\n  #action-edit-shape {\n    top: -70px;\n    right: 24px;\n  }\n\n  #action-fix-transcription {\n    top: -52px;\n    right: -50px;\n  }\n\n  #action-change-type {\n    top: 12px;\n    right: -65px; \n  }\n\n  .mousetrap {\n    position: absolute;\n    top: -80px;\n    right: -75px;\n    width: 170px;\n    height: 160px;\n    z-index: -1;\n  }\n\n  /* https://svelte.dev/repl/3153faf7584d40bd8ddebecf39f24ac1?version=3.49.0 */\n  :global([data-tooltip]) {\n    position: relative;\n    z-index: 9999;\n    display: block;\n  }\n\n  :global([data-tooltip]:before),\n  :global([data-tooltip]:after) {\n    visibility: hidden;\n    opacity: 0;\n    pointer-events: none;\n    transition: .2s ease-out;\n    transform: translate(-50%, 5px)\n  }\n\n  :global([data-tooltip]:before) {\n    position: absolute;\n    bottom: 100%;\n    left: 50%;\n    margin-bottom: 5px;\n    padding: 7px;\n    min-width: 60px;\n    max-width: 250px;\n    -webkit-border-radius: 3px;\n    -moz-border-radius: 3px;\n    border-radius: 3px;\n    background-color: #000;\n    background-color: hsla(0, 0%, 20%, 0.9);\n    color: #fff;\n    content: attr(data-tooltip);\n    text-align: center;\n    font-size: 14px;\n    line-height: 1.2;\n    transition: .2s ease-out\n  }\n\n  :global([data-tooltip]:after) {\n    position: absolute;\n    bottom: 100%;\n    left: 50%;\n    width: 0;\n    border-top: 5px solid #000;\n    border-top: 5px solid hsla(0, 0%, 20%, 0.9);\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    content: \" \";\n    font-size: 0;\n    line-height: 0;\n  }\n\n  :global([data-tooltip]:hover:before),\n  :global([data-tooltip]:hover:after) {\n    visibility: visible;\n    opacity: 1;\n    transform: translate(-50%, 0)\n  }\n\n  :global([data-tooltip=false]:hover:before),\n  :global([data-tooltip=false]:hover:after) {\n    visibility: hidden;\n    opacity: 0;\n  }\n</style>","<script type=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import Icon from 'svelte-icons-pack/Icon.svelte';\n  import BsPencil from 'svelte-icons-pack/bs/BsPencil';\n  import type { WebAnnotation } from '@annotorious/formats';\n\n  import Transcription from './Transcription.svelte';\n  import HUD from './HUD.svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let annotation: WebAnnotation;\n\n  export let originalEvent: PointerEvent;\n\n  export let viewer: OpenSeadragon.Viewer;\n\n  let isHUDOpen = false;\n\n  let isTranscriptionEditable = false;\n\n  let isShapeEditable = false;\n\n  let transcription: string;\n\n  $: {\n    const bodies = Array.isArray(annotation.body) ? annotation.body : [ annotation. body ];\n    transcription = bodies.find(body => body.purpose === 'transcribing')?.value;\n  }\n\n  const onFixShape = () => {\n    dispatch('editShape', annotation);\n    isShapeEditable = true;\n  }\n\n  const onChangeTranscription = (evt: CustomEvent<string>) => {\n    const bodies = Array.isArray(annotation.body) ? annotation.body : [ annotation.body ];\n\n    const updated = [\n      ...bodies.filter(b => b.purpose !== 'transcribing'),\n      {\n        type: 'TextualBody',\n        purpose: 'transcribing',\n        value: evt.detail,\n        // TODO\n        // creator: user,\n        // created: currentTimeAdjusted()\n      }\n    ];\n\n    annotation = {\n      ...annotation,\n      body: updated\n    };\n    \n    dispatch('transcriptionChanged', annotation);\n\n    isTranscriptionEditable = false;\n  }\n\n    /*\n  onMount(() => {\n    const onUpdateViewport = () => {\n      // Adjust popup position for viewport changes\n      const xy = viewer.viewport.viewportToViewerElementCoordinates(viewportPoint);\n      offsetX = xy.x;\n      offsetY = xy.y;\n    }\n    \n    viewer.addHandler('update-viewport', onUpdateViewport);\n    \n    return () => viewer.removeHandler('update-viewport', onUpdateViewport);\n  });\n  */\n\n</script>\n\n<div class=\"r8s-hover-container\" \n  class:ghost={isShapeEditable}\n  style={`top: ${originalEvent.offsetY}px; left: ${originalEvent.offsetX}px`}>\n  <div class=\"r8s-hover-main\">\n    <div class=\"r8s-hover-content\">\n      <Transcription \n        value={transcription} \n        editable={isTranscriptionEditable}\n        on:change={onChangeTranscription} />\n    </div>\n\n    <div class=\"r8s-hover-actions\">\n      <div class=\"r8s-hover-action r8s-hover-action-improve\">\n        <button id=\"r8s-button-improve\" on:click={() => isHUDOpen = !isHUDOpen}>\n          <Icon src={BsPencil} />\n        </button>\n        <label for=\"r8s-button-improve\">Improve our data</label>\n      </div>\n    </div>\n  </div>\n\n  {#if isHUDOpen}\n    <HUD \n      on:fixTranscription={() => isTranscriptionEditable = true} \n      on:editShape={() => onFixShape()} />\n  {/if}\n\n  <div class=\"mousetrap\" />\n</div>\n\n<style>\n  .r8s-hover-container {\n    font-family: Arial, Helvetica, sans-serif;\n    position: absolute;\n    z-index: 999;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n  }\n\n  .r8s-hover-container.ghost {\n    opacity: 0.4;\n    pointer-events: none;\n  }\n\n  .r8s-hover-main {\n    display: flex;\n    color: #333;\n    min-width: 260px;\n    padding: 14px;\n    border-radius: 3px;\n    background-color: #fff;\n    border: 1px solid #cbccce;\n    box-shadow:0 0 24px rgba(0, 0, 0, 0.1);\n    z-index: 1;\n  }\n\n  .r8s-hover-content {\n    flex-grow: 1;\n  }\n\n  .r8s-hover-actions {\n    flex-basis: 70px;\n    flex-grow: 0;\n    flex-shrink: 0;\n  }\n\n  .r8s-hover-action-improve {\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .r8s-hover-action-improve button {\n    outline: none;\n    border: none;\n    border-radius: 50%;\n    background-color: #4285f4;\n    width: 46px;\n    height: 46px;\n    font-size: 24px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n  }\n\n  .r8s-hover-action-improve button:hover {\n    background-color: #68a1ff;\n  }\n\n  .r8s-hover-action-improve label {\n    padding-top: 5px;\n    color: #4285f4;\n    text-transform: uppercase;\n    font-size: 11px;\n    font-weight: bold;\n  }\n\n  :global(.r8s-hover-action-improve button svg) {\n    fill: #fff;\n  }\n\n  .mousetrap {\n    position: absolute;\n    top: -20px;\n    right: -20px;\n    left: -20px;\n    bottom: -20px;\n    z-index: -1;\n  }\n</style>","import type { Annotorious } from '@annotorious/openseadragon';\nimport type { WebAnnotation } from '@annotorious/formats';\nimport { LunaPopup } from './popup';\n\nexport class LunaPlugin {\n\n  anno: Annotorious;\n\n  viewer: OpenSeadragon.Viewer;\n\n  popup: LunaPopup;\n  \n  constructor(anno: Annotorious, viewer: OpenSeadragon.Viewer) {\n    this.anno = anno;\n    \n    this.viewer = viewer;\n\n    anno.on('mouseEnterAnnotation', (annotation, evt) => {\n      this.showPopup(annotation, evt);\n    });\n\n    anno.on('mouseLeaveAnnotation', () => {\n      this.hidePopup();\n    });\n  }\n\n  showPopup = (annotation: WebAnnotation, originalEvent: PointerEvent) => {\n    this.popup = new LunaPopup({\n      target: document.body,\n      props: { \n        annotation,\n        originalEvent,\n        viewer: this.viewer\n      }\n    });\n\n    this.popup.$on('transcriptionChanged', (evt: CustomEvent<WebAnnotation>) =>\n      this.anno.updateAnnotation(evt.detail.id, evt.detail));\n\n    this.popup.$on('editShape', (evt: CustomEvent<WebAnnotation>) =>\n      this.anno.selectAnnotation(evt.detail.id));\n  }\n\n  hidePopup = () => {\n    this.popup.$destroy();\n    this.popup = null;\n  }\n\n}"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","is_empty","obj","is_client","now","raf","cb","tasks","run_tasks","task","loop","callback","fulfill","append","target","node","get_root_for_style","root","append_empty_stylesheet","style_element","element","append_stylesheet","style","insert","anchor","detach","name","svg_element","text","data","space","listen","event","handler","options","attr","attribute","value","set_svg_attributes","attributes","key","children","set_data","toggle_class","toggle","custom_event","type","detail","bubbles","cancelable","e","managed_styles","active","hash","str","i","create_style_information","doc","info","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","stylesheet","rules","animation","delete_rule","previous","next","anim","deleted","clear_rules","current_component","set_current_component","component","get_current_component","createEventDispatcher","callbacks","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","tick","add_render_callback","seen_callbacks","flushidx","saved_component","update","$$","dirty","promise","wait","dispatch","direction","kind","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","null_transition","create_in_transition","params","config","running","animation_name","cleanup","go","easing","css","start_time","end_time","started","create_out_transition","group","reset","get_spread_update","levels","updates","to_null_out","accounted_for","o","n","create_component","mount_component","customElement","fragment","on_mount","on_destroy","after_update","new_on_destroy","destroy_component","detaching","make_dirty","init","instance","create_fragment","not_equal","props","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","index","$$props","ctx","svg","size","color","title","className","innerHtml","BsPencil","GHOST_ELEMENT_ID","characterEntities","mapSpecialCharacterToCharacterEntity","specialCharacter","escapeSpecialCharacters","string","createGhostElement","ghostElement","autosizeInput","elementStyle","elementCssText","setWidth","width","span","form","input","create_if_block","div","editable","inputEl","onSave","evt","$$value","DEFAULTS","springToTickValue","frames","out","indexPrecise","indexExcess","springIn","from","to","springOptions","springToTransition","springOut","springFrames","is_date","opts","last_val","dt","values","next_value","tick_spring","last_value","current_value","target_value","delta","velocity","spring","damper","acceleration","d","_","RiDesignShapeFill","RiEditorText","BiBuildingHouse","div1","ul","li0","button0","li1","button1","li2","button2","div0","SPRING_IN","SPRING_OUT","angle","conf","tickToValue","dx","dy","inShape","inTranscription","inType","outShape","outTranscription","outType","div5","div5_style_value","div3","div2","button","label","div4","current","annotation","originalEvent","viewer","isHUDOpen","isTranscriptionEditable","isShapeEditable","transcription","onFixShape","$$invalidate","onChangeTranscription","updated","click_handler","fixTranscription_handler","bodies","_a","body","LunaPlugin","anno","LunaPopup"],"mappings":"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"}