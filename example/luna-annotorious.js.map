{"version":3,"file":"luna-annotorious.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/@neodrag/svelte/dist/min/index.js","../node_modules/svelte/easing/index.mjs","../node_modules/svelte/transition/index.mjs","../node_modules/svelte-icons-pack/Icon.svelte","../node_modules/svelte-icons-pack/bs/BsPatchCheckFill.js","../node_modules/svelte-icons-pack/fa/FaSolidRobot.js","../node_modules/timeago.js/esm/lang/en_US.js","../node_modules/timeago.js/esm/lang/zh_CN.js","../node_modules/timeago.js/esm/register.js","../node_modules/timeago.js/esm/utils/date.js","../node_modules/timeago.js/esm/format.js","../node_modules/timeago.js/esm/index.js","../node_modules/autosize-input/index.js","../src/popup/Transcriptions.svelte","../../../recogito/annotorious-3/packages/annotorious/src/shapes/Shape.ts","../../../recogito/annotorious-3/node_modules/object-keys/isArguments.js","../../../recogito/annotorious-3/node_modules/object-keys/implementation.js","../../../recogito/annotorious-3/node_modules/object-keys/index.js","../../../recogito/annotorious-3/node_modules/has-symbols/shams.js","../../../recogito/annotorious-3/node_modules/has-tostringtag/shams.js","../../../recogito/annotorious-3/node_modules/has-symbols/index.js","../../../recogito/annotorious-3/node_modules/function-bind/implementation.js","../../../recogito/annotorious-3/node_modules/function-bind/index.js","../../../recogito/annotorious-3/node_modules/has/src/index.js","../../../recogito/annotorious-3/node_modules/get-intrinsic/index.js","../../../recogito/annotorious-3/node_modules/call-bind/index.js","../../../recogito/annotorious-3/node_modules/call-bind/callBound.js","../../../recogito/annotorious-3/node_modules/is-arguments/index.js","../../../recogito/annotorious-3/node_modules/has-property-descriptors/index.js","../../../recogito/annotorious-3/node_modules/define-properties/index.js","../../../recogito/annotorious-3/node_modules/object-is/implementation.js","../../../recogito/annotorious-3/node_modules/object-is/polyfill.js","../../../recogito/annotorious-3/node_modules/object-is/shim.js","../../../recogito/annotorious-3/node_modules/object-is/index.js","../../../recogito/annotorious-3/node_modules/is-regex/index.js","../../../recogito/annotorious-3/node_modules/functions-have-names/index.js","../../../recogito/annotorious-3/node_modules/regexp.prototype.flags/implementation.js","../../../recogito/annotorious-3/node_modules/regexp.prototype.flags/polyfill.js","../../../recogito/annotorious-3/node_modules/regexp.prototype.flags/shim.js","../../../recogito/annotorious-3/node_modules/regexp.prototype.flags/index.js","../../../recogito/annotorious-3/node_modules/isarray/index.js","../../../recogito/annotorious-3/node_modules/is-date-object/index.js","../../../recogito/annotorious-3/node_modules/is-string/index.js","../../../recogito/annotorious-3/node_modules/is-number-object/index.js","../../../recogito/annotorious-3/node_modules/is-boolean-object/index.js","../../../recogito/annotorious-3/node_modules/is-symbol/index.js","../../../recogito/annotorious-3/node_modules/has-bigints/index.js","../../../recogito/annotorious-3/node_modules/is-bigint/index.js","../../../recogito/annotorious-3/node_modules/which-boxed-primitive/index.js","../../../recogito/annotorious-3/node_modules/is-map/index.js","../../../recogito/annotorious-3/node_modules/is-set/index.js","../../../recogito/annotorious-3/node_modules/is-weakmap/index.js","../../../recogito/annotorious-3/node_modules/is-weakset/index.js","../../../recogito/annotorious-3/node_modules/which-collection/index.js","../../../recogito/annotorious-3/node_modules/es-get-iterator/index.js","../__vite-browser-external","../../../recogito/annotorious-3/node_modules/object-inspect/index.js","../../../recogito/annotorious-3/node_modules/side-channel/index.js","../../../recogito/annotorious-3/node_modules/is-callable/index.js","../../../recogito/annotorious-3/node_modules/for-each/index.js","../../../recogito/annotorious-3/node_modules/available-typed-arrays/index.js","../../../recogito/annotorious-3/node_modules/gopd/index.js","../../../recogito/annotorious-3/node_modules/is-typed-array/index.js","../../../recogito/annotorious-3/node_modules/which-typed-array/index.js","../../../recogito/annotorious-3/node_modules/object.assign/implementation.js","../../../recogito/annotorious-3/node_modules/object.assign/polyfill.js","../../../recogito/annotorious-3/node_modules/object.assign/shim.js","../../../recogito/annotorious-3/node_modules/object.assign/index.js","../../../recogito/annotorious-3/node_modules/deep-equal/index.js","../../../recogito/annotorious-3/packages/annotorious/src/shapes/shapeUtils.ts","../../../recogito/annotorious-3/node_modules/simplify-js/simplify.js","../../../recogito/annotorious-3/packages/annotorious/src/shapes/polygon/polygonUtils.ts","../../../recogito/annotorious-3/packages/annotorious/src/shapes/rectangle/rectangleUtils.ts","../../../recogito/annotorious-3/node_modules/nanoid/index.browser.js","../node_modules/svelte/store/index.mjs","../../../recogito/annotorious-3/node_modules/lib0/map.js","../../../recogito/annotorious-3/node_modules/lib0/set.js","../../../recogito/annotorious-3/node_modules/lib0/array.js","../../../recogito/annotorious-3/node_modules/lib0/observable.js","../../../recogito/annotorious-3/node_modules/lib0/math.js","../../../recogito/annotorious-3/node_modules/lib0/string.js","../../../recogito/annotorious-3/node_modules/lib0/conditions.js","../../../recogito/annotorious-3/node_modules/lib0/storage.js","../../../recogito/annotorious-3/node_modules/lib0/object.js","../../../recogito/annotorious-3/node_modules/lib0/function.js","../../../recogito/annotorious-3/node_modules/lib0/environment.js","../../../recogito/annotorious-3/node_modules/lib0/binary.js","../../../recogito/annotorious-3/node_modules/lib0/number.js","../../../recogito/annotorious-3/node_modules/lib0/buffer.js","../../../recogito/annotorious-3/node_modules/lib0/encoding.js","../../../recogito/annotorious-3/node_modules/isomorphic.js/browser.mjs","../../../recogito/annotorious-3/node_modules/lib0/random.js","../../../recogito/annotorious-3/node_modules/lib0/time.js","../../../recogito/annotorious-3/node_modules/lib0/promise.js","../../../recogito/annotorious-3/node_modules/lib0/error.js","../../../recogito/annotorious-3/node_modules/lib0/symbol.js","../../../recogito/annotorious-3/node_modules/lib0/pair.js","../../../recogito/annotorious-3/node_modules/lib0/dom.js","../../../recogito/annotorious-3/node_modules/lib0/logging.js","../../../recogito/annotorious-3/node_modules/lib0/iterator.js","../../../recogito/annotorious-3/node_modules/yjs/dist/yjs.mjs","../../../recogito/annotorious-3/packages/annotorious/src/state/store/shapeIndex.ts","../../../recogito/annotorious-3/node_modules/quickselect/index.js","../../../recogito/annotorious-3/node_modules/rbush/index.js","../../../recogito/annotorious-3/packages/annotorious/src/state/store/spatialTree.ts","../../../recogito/annotorious-3/packages/annotorious/src/state/store/storeChangeEvent.ts","../../../recogito/annotorious-3/packages/annotorious/src/state/store/store.ts","../../../recogito/annotorious-3/packages/annotorious/src/environment/User.ts","../../../recogito/annotorious-3/packages/annotorious/src/environment/environment.ts","../../../recogito/annotorious-3/packages/annotorious/src/state/derived/selectionState.ts","../src/popup/LunaPopup.svelte","../src/LunaPlugin.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","var t={dragStart:!0},e=(t,e,n)=>Math.min(Math.max(t,e),n),n=t=>\"string\"==typeof t,r=([t,e],n,r)=>{const o=(t,e)=>0===e?0:Math.ceil(t/e)*e;return[o(n,t),o(r,e)]};var o=(t,e)=>t.some((t=>e.some((e=>t.contains(e)))));function i(t,e){if(void 0===t)return;if(s(t))return t.getBoundingClientRect();if(\"object\"==typeof t){const{top:e=0,left:n=0,right:r=0,bottom:o=0}=t;return{top:e,right:window.innerWidth-r,bottom:window.innerHeight-o,left:n}}if(\"parent\"===t)return e.parentNode.getBoundingClientRect();const n=document.querySelector(t);if(null===n)throw new Error(\"The selector provided for bound doesn't exists in the document.\");return n.getBoundingClientRect()}var a=(t,e,n)=>t.style.setProperty(e,n),s=t=>t instanceof HTMLElement,d=(d,l={})=>{let c,u,{bounds:f,axis:g=\"both\",gpuAcceleration:h=!0,legacyTranslate:p=!0,transform:m,applyUserSelectHack:y=!0,disabled:b=!1,ignoreMultitouch:w=!1,recomputeBounds:v=t,grid:x,position:E,cancel:S,handle:A,defaultClass:C=\"neodrag\",defaultClassDragging:N=\"neodrag-dragging\",defaultClassDragged:D=\"neodrag-dragged\",defaultPosition:M={x:0,y:0},onDragStart:B,onDrag:$,onDragEnd:R}=l,H=!1,L=0,P=0,T=0,X=0,Y=0,q=0,{x:k,y:U}=E?{x:E?.x??0,y:E?.y??0}:M;Q(k,U);let W,j,z,F,G,I=\"\",J=!!E;v={...t,...v};const K=document.body.style,O=d.classList;function Q(t=L,e=P){if(!m){if(p){let n=`${+t}px, ${+e}px`;return a(d,\"transform\",h?`translate3d(${n}, 0)`:`translate(${n})`)}return a(d,\"translate\",`${+t}px ${+e}px ${h?\"1px\":\"\"}`)}const r=m({offsetX:t,offsetY:e,rootNode:d});n(r)&&a(d,\"transform\",r)}const V=(t,e)=>{const n={offsetX:L,offsetY:P,rootNode:d,currentNode:G};d.dispatchEvent(new CustomEvent(t,{detail:n})),e?.(n)};const Z=addEventListener;Z(\"pointerdown\",tt,!1),Z(\"pointerup\",et,!1),Z(\"pointermove\",nt,!1),a(d,\"touch-action\",\"none\");const _=()=>{let t=d.offsetWidth/j.width;return isNaN(t)&&(t=1),t};function tt(t){if(b)return;if(2===t.button)return;if(w&&!t.isPrimary)return;if(v.dragStart&&(W=i(f,d)),n(A)&&n(S)&&A===S)throw new Error(\"`handle` selector can't be same as `cancel` selector\");if(O.add(C),z=function(t,e){if(!t)return[e];if(s(t))return[t];if(Array.isArray(t))return t;const n=e.querySelectorAll(t);if(null===n)throw new Error(\"Selector passed for `handle` option should be child of the element on which the action is applied\");return Array.from(n.values())}(A,d),F=function(t,e){if(!t)return[];if(s(t))return[t];if(Array.isArray(t))return t;const n=e.querySelectorAll(t);if(null===n)throw new Error(\"Selector passed for `cancel` option should be child of the element on which the action is applied\");return Array.from(n.values())}(S,d),c=/(both|x)/.test(g),u=/(both|y)/.test(g),o(F,z))throw new Error(\"Element being dragged can't be a child of the element on which `cancel` is applied\");const e=t.composedPath()[0];if(!z.some((t=>t.contains(e)||t.shadowRoot?.contains(e)))||o(F,[e]))return;G=1===z.length?d:z.find((t=>t.contains(e))),H=!0,j=d.getBoundingClientRect(),y&&(I=K.userSelect,K.userSelect=\"none\"),V(\"neodrag:start\",B);const{clientX:r,clientY:a}=t,l=_();c&&(T=r-k/l),u&&(X=a-U/l),W&&(Y=r-j.left,q=a-j.top)}function et(){H&&(v.dragEnd&&(W=i(f,d)),O.remove(N),O.add(D),y&&(K.userSelect=I),V(\"neodrag:end\",R),c&&(T=L),u&&(X=P),H=!1)}function nt(t){if(!H)return;v.drag&&(W=i(f,d)),O.add(N),t.preventDefault(),j=d.getBoundingClientRect();let n=t.clientX,o=t.clientY;const a=_();if(W){const t={left:W.left+Y,top:W.top+q,right:W.right+Y-j.width,bottom:W.bottom+q-j.height};n=e(n,t.left,t.right),o=e(o,t.top,t.bottom)}if(Array.isArray(x)){let[t,e]=x;if(isNaN(+t)||t<0)throw new Error(\"1st argument of `grid` must be a valid positive number\");if(isNaN(+e)||e<0)throw new Error(\"2nd argument of `grid` must be a valid positive number\");let i=n-T,s=o-X;[i,s]=r([t/a,e/a],i,s),n=T+i,o=X+s}c&&(L=Math.round((n-T)*a)),u&&(P=Math.round((o-X)*a)),k=L,U=P,V(\"neodrag\",$),Q()}return{destroy:()=>{const t=removeEventListener;t(\"pointerdown\",tt,!1),t(\"pointerup\",et,!1),t(\"pointermove\",nt,!1)},update:e=>{g=e.axis||\"both\",b=e.disabled??!1,w=e.ignoreMultitouch??!1,A=e.handle,f=e.bounds,v=e.recomputeBounds??t,S=e.cancel,y=e.applyUserSelectHack??!0,x=e.grid,h=e.gpuAcceleration??!0,p=e.legacyTranslate??!0,m=e.transform;const n=O.contains(D);O.remove(C,D),C=e.defaultClass??\"neodrag\",N=e.defaultClassDragging??\"neodrag-dragging\",D=e.defaultClassDragged??\"neodrag-dragged\",O.add(C),n&&O.add(D),J&&(k=L=e.position?.x??L,U=P=e.position?.y??P,Q())}}};export{d as draggable};","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\nexport let src;\nexport let size = \"1em\";\nexport let color = undefined;\nexport let title = undefined;\nexport let className = \"\";\n\nlet innerHtml;\nlet attr;\n$: {\n  attr = {};\n  if (color) {\n    if (src.a.stroke !== \"none\") {\n      attr.stroke = color;\n    }\n    if (src.a.fill !== \"none\") {\n      attr.fill = color;\n    }\n  }\n}\n\n$: {\n  innerHtml = (title ? `<title>${title}</title>` : \"\") + src.c;\n}\n</script>\n\n<svg\nwidth={size}\nheight={size}\nstroke-width=\"0\"\nclass={className}\n{...src.a}\n{...attr}\nxmlns=\"http://www.w3.org/2000/svg\">\n{@html innerHtml}\n</svg>\n","// BsPatchCheckFill\nexport default {\n  a: {\n    fill: 'currentColor',\n    viewBox: '0 0 16 16'\n  },\n  c: '<path d=\"M10.067.87a2.89 2.89 0 0 0-4.134 0l-.622.638-.89-.011a2.89 2.89 0 0 0-2.924 2.924l.01.89-.636.622a2.89 2.89 0 0 0 0 4.134l.637.622-.011.89a2.89 2.89 0 0 0 2.924 2.924l.89-.01.622.636a2.89 2.89 0 0 0 4.134 0l.622-.637.89.011a2.89 2.89 0 0 0 2.924-2.924l-.01-.89.636-.622a2.89 2.89 0 0 0 0-4.134l-.637-.622.011-.89a2.89 2.89 0 0 0-2.924-2.924l-.89.01-.622-.636zm.287 5.984-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708.708z\"></path>'\n};","// FaSolidRobot\nexport default {\n  a: {\n    viewBox: '0 0 640 512'\n  },\n  c: '<path d=\"M32,224H64V416H32A31.96166,31.96166,0,0,1,0,384V256A31.96166,31.96166,0,0,1,32,224Zm512-48V448a64.06328,64.06328,0,0,1-64,64H160a64.06328,64.06328,0,0,1-64-64V176a79.974,79.974,0,0,1,80-80H288V32a32,32,0,0,1,64,0V96H464A79.974,79.974,0,0,1,544,176ZM264,256a40,40,0,1,0-40,40A39.997,39.997,0,0,0,264,256Zm-8,128H192v32h64Zm96,0H288v32h64ZM456,256a40,40,0,1,0-40,40A39.997,39.997,0,0,0,456,256Zm-8,128H384v32h64ZM640,256V384a31.96166,31.96166,0,0,1-32,32H576V224h32A31.96166,31.96166,0,0,1,640,256Z\"></path>'\n};","var EN_US = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['just now', 'right now'];\n    var unit = EN_US[Math.floor(idx / 2)];\n    if (diff > 1)\n        unit += 's';\n    return [diff + \" \" + unit + \" ago\", \"in \" + diff + \" \" + unit];\n}\n//# sourceMappingURL=en_US.js.map","var ZH_CN = ['秒', '分钟', '小时', '天', '周', '个月', '年'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['刚刚', '片刻后'];\n    var unit = ZH_CN[~~(idx / 2)];\n    return [diff + \" \" + unit + \"\\u524D\", diff + \" \" + unit + \"\\u540E\"];\n}\n//# sourceMappingURL=zh_CN.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n/**\n * All supported locales\n */\nvar Locales = {};\n/**\n * register a locale\n * @param locale\n * @param func\n */\nexport var register = function (locale, func) {\n    Locales[locale] = func;\n};\n/**\n * get a locale, default is en_US\n * @param locale\n * @returns {*}\n */\nexport var getLocale = function (locale) {\n    return Locales[locale] || Locales['en_US'];\n};\n//# sourceMappingURL=register.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nvar SEC_ARRAY = [\n    60,\n    60,\n    24,\n    7,\n    365 / 7 / 12,\n    12,\n];\n/**\n * format Date / string / timestamp to timestamp\n * @param input\n * @returns {*}\n */\nexport function toDate(input) {\n    if (input instanceof Date)\n        return input;\n    // @ts-ignore\n    if (!isNaN(input) || /^\\d+$/.test(input))\n        return new Date(parseInt(input));\n    input = (input || '')\n        // @ts-ignore\n        .trim()\n        .replace(/\\.\\d+/, '') // remove milliseconds\n        .replace(/-/, '/')\n        .replace(/-/, '/')\n        .replace(/(\\d)T(\\d)/, '$1 $2')\n        .replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC\n        .replace(/([+-]\\d\\d):?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\n    return new Date(input);\n}\n/**\n * format the diff second to *** time ago, with setting locale\n * @param diff\n * @param localeFunc\n * @returns\n */\nexport function formatDiff(diff, localeFunc) {\n    /**\n     * if locale is not exist, use defaultLocale.\n     * if defaultLocale is not exist, use build-in `en`.\n     * be sure of no error when locale is not exist.\n     *\n     * If `time in`, then 1\n     * If `time ago`, then 0\n     */\n    var agoIn = diff < 0 ? 1 : 0;\n    /**\n     * Get absolute value of number (|diff| is non-negative) value of x\n     * |diff| = diff if diff is positive\n     * |diff| = -diff if diff is negative\n     * |0| = 0\n     */\n    diff = Math.abs(diff);\n    /**\n     * Time in seconds\n     */\n    var totalSec = diff;\n    /**\n     * Unit of time\n     */\n    var idx = 0;\n    for (; diff >= SEC_ARRAY[idx] && idx < SEC_ARRAY.length; idx++) {\n        diff /= SEC_ARRAY[idx];\n    }\n    /**\n     * Math.floor() is alternative of ~~\n     *\n     * The differences and bugs:\n     * Math.floor(3.7) -> 4 but ~~3.7 -> 3\n     * Math.floor(1559125440000.6) -> 1559125440000 but ~~1559125440000.6 -> 52311552\n     *\n     * More information about the performance of algebraic:\n     * https://www.youtube.com/watch?v=65-RbBwZQdU\n     */\n    diff = Math.floor(diff);\n    idx *= 2;\n    if (diff > (idx === 0 ? 9 : 1))\n        idx += 1;\n    return localeFunc(diff, idx, totalSec)[agoIn].replace('%s', diff.toString());\n}\n/**\n * calculate the diff second between date to be formatted an now date.\n * @param date\n * @param relativeDate\n * @returns {number}\n */\nexport function diffSec(date, relativeDate) {\n    var relDate = relativeDate ? toDate(relativeDate) : new Date();\n    return (+relDate - +toDate(date)) / 1000;\n}\n/**\n * nextInterval: calculate the next interval time.\n * - diff: the diff sec between now and date to be formatted.\n *\n * What's the meaning?\n * diff = 61 then return 59\n * diff = 3601 (an hour + 1 second), then return 3599\n * make the interval with high performance.\n **/\nexport function nextInterval(diff) {\n    var rst = 1, i = 0, d = Math.abs(diff);\n    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {\n        diff /= SEC_ARRAY[i];\n        rst *= SEC_ARRAY[i];\n    }\n    d = d % rst;\n    d = d ? rst - d : rst;\n    return Math.ceil(d);\n}\n//# sourceMappingURL=date.js.map","import { formatDiff, diffSec } from './utils/date';\nimport { getLocale } from './register';\n/**\n * format a TDate into string\n * @param date\n * @param locale\n * @param opts\n */\nexport var format = function (date, locale, opts) {\n    // diff seconds\n    var sec = diffSec(date, opts && opts.relativeDate);\n    // format it with locale\n    return formatDiff(sec, getLocale(locale));\n};\n//# sourceMappingURL=format.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nimport en_US from './lang/en_US';\nimport zh_CN from './lang/zh_CN';\nimport { register } from './register';\nregister('en_US', en_US);\nregister('zh_CN', zh_CN);\nexport { format } from './format';\nexport { render, cancel } from './realtime';\nexport { register };\n//# sourceMappingURL=index.js.map","var GHOST_ELEMENT_ID = '__autosizeInputGhost'\n\nvar characterEntities = {\n  ' ': 'nbsp',\n  '<': 'lt',\n  '>': 'gt'\n}\nfunction mapSpecialCharacterToCharacterEntity (specialCharacter) {\n  return '&' + characterEntities[specialCharacter] + ';'\n}\nfunction escapeSpecialCharacters (string) {\n  return string.replace(/\\s|<|>/g, mapSpecialCharacterToCharacterEntity)\n}\n\n// Create `ghostElement`, with inline styles to hide it and ensure that the text is all\n// on a single line.\nfunction createGhostElement () {\n  var ghostElement = document.createElement('div')\n  ghostElement.id = GHOST_ELEMENT_ID\n  ghostElement.style.cssText =\n    'display:inline-block;height:0;overflow:hidden;position:absolute;top:0;visibility:hidden;white-space:nowrap;'\n  document.body.appendChild(ghostElement)\n  return ghostElement\n}\n\nmodule.exports = function (element, options) {\n  var elementStyle = window.getComputedStyle(element)\n  // prettier-ignore\n  var elementCssText = 'box-sizing:' + elementStyle.boxSizing +\n                      ';border-left:' + elementStyle.borderLeftWidth + ' solid red' +\n                      ';border-right:' + elementStyle.borderRightWidth + ' solid red' +\n                      ';font-family:' + elementStyle.fontFamily +\n                      ';font-feature-settings:' + elementStyle.fontFeatureSettings +\n                      ';font-kerning:' + elementStyle.fontKerning +\n                      ';font-size:' + elementStyle.fontSize +\n                      ';font-stretch:' + elementStyle.fontStretch +\n                      ';font-style:' + elementStyle.fontStyle +\n                      ';font-variant:' + elementStyle.fontVariant +\n                      ';font-variant-caps:' + elementStyle.fontVariantCaps +\n                      ';font-variant-ligatures:' + elementStyle.fontVariantLigatures +\n                      ';font-variant-numeric:' + elementStyle.fontVariantNumeric +\n                      ';font-weight:' + elementStyle.fontWeight +\n                      ';letter-spacing:' + elementStyle.letterSpacing +\n                      ';margin-left:' + elementStyle.marginLeft +\n                      ';margin-right:' + elementStyle.marginRight +\n                      ';padding-left:' + elementStyle.paddingLeft +\n                      ';padding-right:' + elementStyle.paddingRight +\n                      ';text-indent:' + elementStyle.textIndent +\n                      ';text-transform:' + elementStyle.textTransform\n\n  // Assigns an appropriate width to the given `element` based on its contents.\n  function setWidth () {\n    var string = element.value || element.getAttribute('placeholder') || ''\n    // Check if the `ghostElement` exists. If no, create it.\n    var ghostElement =\n      document.getElementById(GHOST_ELEMENT_ID) || createGhostElement()\n    // Copy all width-affecting styles to the `ghostElement`.\n    ghostElement.style.cssText += elementCssText\n    ghostElement.innerHTML = escapeSpecialCharacters(string)\n    // Copy the width of `ghostElement` to `element`.\n    var width = window.getComputedStyle(ghostElement).width\n    element.style.width = width\n    return width\n  }\n\n  element.addEventListener('input', setWidth)\n\n  var width = setWidth()\n\n  // Set `min-width` only if `options.minWidth` was set, and only if the initial\n  // width is non-zero.\n  if (options && options.minWidth && width !== '0px') {\n    element.style.minWidth = width\n  }\n\n  // Return a function for unbinding the event listener and removing the `ghostElement`.\n  return function () {\n    element.removeEventListener('input', setWidth)\n    var ghostElement = document.getElementById(GHOST_ELEMENT_ID)\n    if (ghostElement) {\n      ghostElement.parentNode.removeChild(ghostElement)\n    }\n  }\n}\n","<script>\n  import { tick, createEventDispatcher } from 'svelte';\n  import { slide } from 'svelte/transition';\n  import Icon from 'svelte-icons-pack/Icon.svelte';\n  import BsPatchCheckFill from 'svelte-icons-pack/bs/BsPatchCheckFill';\n  import FaSolidRobot from 'svelte-icons-pack/fa/FaSolidRobot';\n  import * as timeago from 'timeago.js';\n  import autosizeInput from 'autosize-input';\n\n  const dispatch = createEventDispatcher();\n\n  export let data;\n\n  let sorted;\n\n  let inputEl;\n\n  let editable = false;\n\n  let best;\n\n  let isOCR;\n\n  let showAllTranscriptions = false;\n\n  $: {\n    // The best transcription is the most recent one from a Person. If there\n    // is no transcription from a Person, we'll fall back to the original \n    // mapKurator one (type 'Software', name 'mapKurator:ocr'). If there is none,\n    // we'll fall back to the first in the list.\n\n    // Sort by timestamp\n    sorted = data.slice().sort((a, b) => a.created < b.created ? 1 : -1);\n\n    const byPerson = sorted.filter(body => body.creator?.type === 'Person'); \n    if (byPerson.length > 0) {\n      best = byPerson[0];\n    } else {\n      const byMK = sorted.find(body => body.creator?.type === 'Software' && body.creator?.name === 'mapKurator:ocr');\n      if (byMK) {\n        best = byMK;\n        isOCR = true;\n      } else {\n        best = sorted.length > 0 ? sorted[0] : null;\n      }\n    }\n  }\n\n  $: {\n    if (editable) {\n      tick().then(() => {\n        autosizeInput(inputEl);\n        inputEl.focus();\n      });\n    }\n  }\n\n  const onKeyDown = evt => {\n    if (evt.key === 'Enter') {\n      const { value } = inputEl;\n\n      if (value !== best?.value)\n        dispatch('addTranscription', inputEl.value);\n\n      editable = false;\n    } else if (evt.key === 'Escape') {\n      editable = false;\n    }\n  }\n</script>\n\n<div class=\"transcription-container\">\n  {#if editable}\n    <input \n      bind:this={inputEl} \n      value={best?.value} \n      spellcheck={false} \n      on:keydown={onKeyDown}/>\n  {:else}\n    <span on:click={() => showAllTranscriptions = !showAllTranscriptions} class=\"transcription\">{best?.value}</span> \n\n    {#if best?.creator?.type === 'Person'}\n      <Icon className=\"verified-transcription\" src={BsPatchCheckFill} />\n    {/if}\n  {/if}\n\n  {#if data.length > 1}\n    <p class=\"transcription-details transcription-count\">\n      <button \n        class=\"show-all\" \n        on:click={() => showAllTranscriptions = !showAllTranscriptions}>\n        + {data.length - 1} more transcriptions \n      </button> · [ <button on:click={() => editable = true} class=\"add-transcription\">Edit</button> ]\n    </p>\n\n    {#if showAllTranscriptions}\n      <ul class=\"all-transcriptions\" transition:slide={{ duration: 120 }}>\n        {#each sorted as body}\n          <li>\n            {body.value} <span class=\"transcribed-by\">{timeago.format(body.created)} by {#if body.creator?.type === 'Software'}\n              <Icon src={FaSolidRobot} /> mapKurator {:else} {body.creator.name} {/if}</span>\n          </li>\n        {/each}\n      </ul>\n    {/if}\n\n  {:else}\n    <p class=\"transcription-details transcribed-by\">\n      Transcribed by {#if isOCR} <Icon src={FaSolidRobot} /> mapKurator {:else} \n        {best?.creator?.name} \n      {/if}  · [ <button class=\"add-transcription\" on:click={() => editable = true}>Edit</button> ]\n    </p>\n  {/if}\n</div>\n\n<style>\n  input {\n    font-size: 16px;\n    padding: 2px 4px;\n    outline: none;\n    border: 1px solid #4285f4;\n    border-radius: 2px;\n    background-color: #e0ebff;\n    margin-bottom: 4px;\n  }\n\n  .transcription {\n    font-size: 1.15em;\n  }\n\n  :global(svg) {\n    fill: #7a7a7a;\n  }\n\n  :global(.verified-transcription) {\n    fill: green;\n    vertical-align: text-top;\n  }\n\n  .transcription-details {\n    color: #7a7a7a;\n    padding: 0;\n    margin: 0;\n    font-size: 13px;\n  }\n\n  .transcribed-by {\n    color: #7a7a7a;\n    font-size: 13px;\n  }\n\n  :global(.transcribed-by svg) {\n    font-size: 1.2em;\n    vertical-align: text-top;\n    position: relative;\n    top: -1px;\n    padding: 0 1px;\n  }\n\n  .transcription-count button,\n  .transcription-details button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    outline: none;\n    background: none;\n    color: #7a7a7a;\n    cursor: pointer;\n    font-size: 13px;\n  }\n\n  .transcription-count button.add-transcription,\n  .transcription-details button.add-transcription {\n    color: #3165b9;\n  }\n\n\n  ul.all-transcriptions {\n    padding: 10px 0 0 0;\n    margin: 0;\n    list-style-type: none;\n    font-size: 13px;\n  }\n\n  li {\n    padding: 3px 0;\n  }\n</style>","import type { AnonymousLocalUser } from '../state/users';\n\nexport interface Shape {\n  id: string;\n\n  type: ShapeType;\n\n  creator?: string | typeof AnonymousLocalUser;\n\n  created?: Date;\n\n  data?: any;\n\n  geometry: Geometry;\n\n  state: ShapeState;\n}\n\nexport enum ShapeType {\n  POLYGON = 'POLYGON',\n\n  RECTANGLE = 'RECTANGLE'\n}\n\nexport interface Geometry {\n  bounds: Bounds;\n}\n\nexport interface Bounds {\n  minX: number;\n\n  minY: number;\n\n  maxX: number;\n\n  maxY: number;\n}\n\nexport interface ShapeState {\n  isHoveredBy?: string[];\n\n  isSelectedBy?: string;\n\n  props?: Object;\n}\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar supportsDescriptors = origDefineProperty && hasPropertyDescriptors;\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value; // eslint-disable-line no-param-reassign\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar has;\nvar $exec;\nvar isRegexMarker;\nvar badStringifier;\n\nif (hasToStringTag) {\n\thas = callBound('Object.prototype.hasOwnProperty');\n\t$exec = callBound('RegExp.prototype.exec');\n\tisRegexMarker = {};\n\n\tvar throwRegexMarker = function () {\n\t\tthrow isRegexMarker;\n\t};\n\tbadStringifier = {\n\t\ttoString: throwRegexMarker,\n\t\tvalueOf: throwRegexMarker\n\t};\n\n\tif (typeof Symbol.toPrimitive === 'symbol') {\n\t\tbadStringifier[Symbol.toPrimitive] = throwRegexMarker;\n\t}\n}\n\nvar $toString = callBound('Object.prototype.toString');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar regexClass = '[object RegExp]';\n\nmodule.exports = hasToStringTag\n\t// eslint-disable-next-line consistent-return\n\t? function isRegex(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar descriptor = gOPD(value, 'lastIndex');\n\t\tvar hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\t\tif (!hasLastIndexDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\t$exec(value, badStringifier);\n\t\t} catch (e) {\n\t\t\treturn e === isRegexMarker;\n\t\t}\n\t}\n\t: function isRegex(value) {\n\t\t// In older browsers, typeof regex incorrectly returns 'function'\n\t\tif (!value || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $toString(value) === regexClass;\n\t};\n","'use strict';\n\nvar functionsHaveNames = function functionsHaveNames() {\n\treturn typeof function f() {}.name === 'string';\n};\n\nvar gOPD = Object.getOwnPropertyDescriptor;\nif (gOPD) {\n\ttry {\n\t\tgOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\tgOPD = null;\n\t}\n}\n\nfunctionsHaveNames.functionsHaveConfigurableNames = function functionsHaveConfigurableNames() {\n\tif (!functionsHaveNames() || !gOPD) {\n\t\treturn false;\n\t}\n\tvar desc = gOPD(function () {}, 'name');\n\treturn !!desc && !!desc.configurable;\n};\n\nvar $bind = Function.prototype.bind;\n\nfunctionsHaveNames.boundFunctionsHaveNames = function boundFunctionsHaveNames() {\n\treturn functionsHaveNames() && typeof $bind === 'function' && function f() {}.bind().name !== '';\n};\n\nmodule.exports = functionsHaveNames;\n","'use strict';\n\nvar functionsHaveConfigurableNames = require('functions-have-names').functionsHaveConfigurableNames();\n\nvar $Object = Object;\nvar $TypeError = TypeError;\n\nmodule.exports = function flags() {\n\tif (this != null && this !== $Object(this)) {\n\t\tthrow new $TypeError('RegExp.prototype.flags getter called on non-object');\n\t}\n\tvar result = '';\n\tif (this.hasIndices) {\n\t\tresult += 'd';\n\t}\n\tif (this.global) {\n\t\tresult += 'g';\n\t}\n\tif (this.ignoreCase) {\n\t\tresult += 'i';\n\t}\n\tif (this.multiline) {\n\t\tresult += 'm';\n\t}\n\tif (this.dotAll) {\n\t\tresult += 's';\n\t}\n\tif (this.unicode) {\n\t\tresult += 'u';\n\t}\n\tif (this.sticky) {\n\t\tresult += 'y';\n\t}\n\treturn result;\n};\n\nif (functionsHaveConfigurableNames && Object.defineProperty) {\n\tObject.defineProperty(module.exports, 'name', { value: 'get flags' });\n}\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar supportsDescriptors = require('define-properties').supportsDescriptors;\nvar $gOPD = Object.getOwnPropertyDescriptor;\n\nmodule.exports = function getPolyfill() {\n\tif (supportsDescriptors && (/a/mig).flags === 'gim') {\n\t\tvar descriptor = $gOPD(RegExp.prototype, 'flags');\n\t\tif (\n\t\t\tdescriptor\n\t\t\t&& typeof descriptor.get === 'function'\n\t\t\t&& typeof RegExp.prototype.dotAll === 'boolean'\n\t\t\t&& typeof RegExp.prototype.hasIndices === 'boolean'\n\t\t) {\n\t\t\t/* eslint getter-return: 0 */\n\t\t\tvar calls = '';\n\t\t\tvar o = {};\n\t\t\tObject.defineProperty(o, 'hasIndices', {\n\t\t\t\tget: function () {\n\t\t\t\t\tcalls += 'd';\n\t\t\t\t}\n\t\t\t});\n\t\t\tObject.defineProperty(o, 'sticky', {\n\t\t\t\tget: function () {\n\t\t\t\t\tcalls += 'y';\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (calls === 'dy') {\n\t\t\t\treturn descriptor.get;\n\t\t\t}\n\t\t}\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar supportsDescriptors = require('define-properties').supportsDescriptors;\nvar getPolyfill = require('./polyfill');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar defineProperty = Object.defineProperty;\nvar TypeErr = TypeError;\nvar getProto = Object.getPrototypeOf;\nvar regex = /a/;\n\nmodule.exports = function shimFlags() {\n\tif (!supportsDescriptors || !getProto) {\n\t\tthrow new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');\n\t}\n\tvar polyfill = getPolyfill();\n\tvar proto = getProto(regex);\n\tvar descriptor = gOPD(proto, 'flags');\n\tif (!descriptor || descriptor.get !== polyfill) {\n\t\tdefineProperty(proto, 'flags', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tget: polyfill\n\t\t});\n\t}\n\treturn polyfill;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar flagsBound = callBind(getPolyfill());\n\ndefine(flagsBound, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = flagsBound;\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nvar getDay = Date.prototype.getDay;\nvar tryDateObject = function tryDateGetDayCall(value) {\n\ttry {\n\t\tgetDay.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar toStr = Object.prototype.toString;\nvar dateClass = '[object Date]';\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nmodule.exports = function isDateObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n};\n","'use strict';\n\nvar strValue = String.prototype.valueOf;\nvar tryStringObject = function tryStringObject(value) {\n\ttry {\n\t\tstrValue.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar strClass = '[object String]';\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nmodule.exports = function isString(value) {\n\tif (typeof value === 'string') {\n\t\treturn true;\n\t}\n\tif (typeof value !== 'object') {\n\t\treturn false;\n\t}\n\treturn hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;\n};\n","'use strict';\n\nvar numToStr = Number.prototype.toString;\nvar tryNumberObject = function tryNumberObject(value) {\n\ttry {\n\t\tnumToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar numClass = '[object Number]';\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nmodule.exports = function isNumberObject(value) {\n\tif (typeof value === 'number') {\n\t\treturn true;\n\t}\n\tif (typeof value !== 'object') {\n\t\treturn false;\n\t}\n\treturn hasToStringTag ? tryNumberObject(value) : toStr.call(value) === numClass;\n};\n","'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar $boolToStr = callBound('Boolean.prototype.toString');\nvar $toString = callBound('Object.prototype.toString');\n\nvar tryBooleanObject = function booleanBrandCheck(value) {\n\ttry {\n\t\t$boolToStr(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar boolClass = '[object Boolean]';\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nmodule.exports = function isBoolean(value) {\n\tif (typeof value === 'boolean') {\n\t\treturn true;\n\t}\n\tif (value === null || typeof value !== 'object') {\n\t\treturn false;\n\t}\n\treturn hasToStringTag && Symbol.toStringTag in value ? tryBooleanObject(value) : $toString(value) === boolClass;\n};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isRealSymbolObject(value) {\n\t\tif (typeof value.valueOf() !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\n\tmodule.exports = function isSymbol(value) {\n\t\tif (typeof value === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false && value;\n\t};\n}\n","'use strict';\n\nvar $BigInt = typeof BigInt !== 'undefined' && BigInt;\n\nmodule.exports = function hasNativeBigInts() {\n\treturn typeof $BigInt === 'function'\n\t\t&& typeof BigInt === 'function'\n\t\t&& typeof $BigInt(42) === 'bigint' // eslint-disable-line no-magic-numbers\n\t\t&& typeof BigInt(42) === 'bigint'; // eslint-disable-line no-magic-numbers\n};\n","'use strict';\n\nvar hasBigInts = require('has-bigints')();\n\nif (hasBigInts) {\n\tvar bigIntValueOf = BigInt.prototype.valueOf;\n\tvar tryBigInt = function tryBigIntObject(value) {\n\t\ttry {\n\t\t\tbigIntValueOf.call(value);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t}\n\t\treturn false;\n\t};\n\n\tmodule.exports = function isBigInt(value) {\n\t\tif (\n\t\t\tvalue === null\n\t\t\t|| typeof value === 'undefined'\n\t\t\t|| typeof value === 'boolean'\n\t\t\t|| typeof value === 'string'\n\t\t\t|| typeof value === 'number'\n\t\t\t|| typeof value === 'symbol'\n\t\t\t|| typeof value === 'function'\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof value === 'bigint') {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn tryBigInt(value);\n\t};\n} else {\n\tmodule.exports = function isBigInt(value) {\n\t\treturn false && value;\n\t};\n}\n","'use strict';\n\nvar isString = require('is-string');\nvar isNumber = require('is-number-object');\nvar isBoolean = require('is-boolean-object');\nvar isSymbol = require('is-symbol');\nvar isBigInt = require('is-bigint');\n\n// eslint-disable-next-line consistent-return\nmodule.exports = function whichBoxedPrimitive(value) {\n\t// eslint-disable-next-line eqeqeq\n\tif (value == null || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\treturn null;\n\t}\n\tif (isString(value)) {\n\t\treturn 'String';\n\t}\n\tif (isNumber(value)) {\n\t\treturn 'Number';\n\t}\n\tif (isBoolean(value)) {\n\t\treturn 'Boolean';\n\t}\n\tif (isSymbol(value)) {\n\t\treturn 'Symbol';\n\t}\n\tif (isBigInt(value)) {\n\t\treturn 'BigInt';\n\t}\n};\n","'use strict';\n\nvar $Map = typeof Map === 'function' && Map.prototype ? Map : null;\nvar $Set = typeof Set === 'function' && Set.prototype ? Set : null;\n\nvar exported;\n\nif (!$Map) {\n\t// eslint-disable-next-line no-unused-vars\n\texported = function isMap(x) {\n\t\t// `Map` is not present in this environment.\n\t\treturn false;\n\t};\n}\n\nvar $mapHas = $Map ? Map.prototype.has : null;\nvar $setHas = $Set ? Set.prototype.has : null;\nif (!exported && !$mapHas) {\n\t// eslint-disable-next-line no-unused-vars\n\texported = function isMap(x) {\n\t\t// `Map` does not have a `has` method\n\t\treturn false;\n\t};\n}\n\nmodule.exports = exported || function isMap(x) {\n\tif (!x || typeof x !== 'object') {\n\t\treturn false;\n\t}\n\ttry {\n\t\t$mapHas.call(x);\n\t\tif ($setHas) {\n\t\t\ttry {\n\t\t\t\t$setHas.call(x);\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn x instanceof $Map; // core-js workaround, pre-v2.5.0\n\t} catch (e) {}\n\treturn false;\n};\n","'use strict';\n\nvar $Map = typeof Map === 'function' && Map.prototype ? Map : null;\nvar $Set = typeof Set === 'function' && Set.prototype ? Set : null;\n\nvar exported;\n\nif (!$Set) {\n\t// eslint-disable-next-line no-unused-vars\n\texported = function isSet(x) {\n\t\t// `Set` is not present in this environment.\n\t\treturn false;\n\t};\n}\n\nvar $mapHas = $Map ? Map.prototype.has : null;\nvar $setHas = $Set ? Set.prototype.has : null;\nif (!exported && !$setHas) {\n\t// eslint-disable-next-line no-unused-vars\n\texported = function isSet(x) {\n\t\t// `Set` does not have a `has` method\n\t\treturn false;\n\t};\n}\n\nmodule.exports = exported || function isSet(x) {\n\tif (!x || typeof x !== 'object') {\n\t\treturn false;\n\t}\n\ttry {\n\t\t$setHas.call(x);\n\t\tif ($mapHas) {\n\t\t\ttry {\n\t\t\t\t$mapHas.call(x);\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn x instanceof $Set; // core-js workaround, pre-v2.5.0\n\t} catch (e) {}\n\treturn false;\n};\n","'use strict';\n\nvar $WeakMap = typeof WeakMap === 'function' && WeakMap.prototype ? WeakMap : null;\nvar $WeakSet = typeof WeakSet === 'function' && WeakSet.prototype ? WeakSet : null;\n\nvar exported;\n\nif (!$WeakMap) {\n\t// eslint-disable-next-line no-unused-vars\n\texported = function isWeakMap(x) {\n\t\t// `WeakMap` is not present in this environment.\n\t\treturn false;\n\t};\n}\n\nvar $mapHas = $WeakMap ? $WeakMap.prototype.has : null;\nvar $setHas = $WeakSet ? $WeakSet.prototype.has : null;\nif (!exported && !$mapHas) {\n\t// eslint-disable-next-line no-unused-vars\n\texported = function isWeakMap(x) {\n\t\t// `WeakMap` does not have a `has` method\n\t\treturn false;\n\t};\n}\n\nmodule.exports = exported || function isWeakMap(x) {\n\tif (!x || typeof x !== 'object') {\n\t\treturn false;\n\t}\n\ttry {\n\t\t$mapHas.call(x, $mapHas);\n\t\tif ($setHas) {\n\t\t\ttry {\n\t\t\t\t$setHas.call(x, $setHas);\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn x instanceof $WeakMap; // core-js workaround, pre-v3\n\t} catch (e) {}\n\treturn false;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\n\nvar $WeakSet = GetIntrinsic('%WeakSet%', true);\n\nvar $setHas = callBound('WeakSet.prototype.has', true);\n\nif ($setHas) {\n\tvar $mapHas = callBound('WeakMap.prototype.has', true);\n\n\tmodule.exports = function isWeakSet(x) {\n\t\tif (!x || typeof x !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\t$setHas(x, $setHas);\n\t\t\tif ($mapHas) {\n\t\t\t\ttry {\n\t\t\t\t\t$mapHas(x, $mapHas);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x instanceof $WeakSet; // core-js workaround, pre-v3\n\t\t} catch (e) {}\n\t\treturn false;\n\t};\n} else {\n\t// eslint-disable-next-line no-unused-vars\n\tmodule.exports = function isWeakSet(x) {\n\t\t// `WeakSet` does not exist, or does not have a `has` method\n\t\treturn false;\n\t};\n}\n","'use strict';\n\nvar isMap = require('is-map');\nvar isSet = require('is-set');\nvar isWeakMap = require('is-weakmap');\nvar isWeakSet = require('is-weakset');\n\nmodule.exports = function whichCollection(value) {\n\tif (value && typeof value === 'object') {\n\t\tif (isMap(value)) {\n\t\t\treturn 'Map';\n\t\t}\n\t\tif (isSet(value)) {\n\t\t\treturn 'Set';\n\t\t}\n\t\tif (isWeakMap(value)) {\n\t\t\treturn 'WeakMap';\n\t\t}\n\t\tif (isWeakSet(value)) {\n\t\t\treturn 'WeakSet';\n\t\t}\n\t}\n\treturn false;\n};\n","'use strict';\n\n/* eslint global-require: 0 */\n// the code is structured this way so that bundlers can\n// alias out `has-symbols` to `() => true` or `() => false` if your target\n// environments' Symbol capabilities are known, and then use\n// dead code elimination on the rest of this module.\n//\n// Similarly, `isarray` can be aliased to `Array.isArray` if\n// available in all target environments.\n\nvar isArguments = require('is-arguments');\n\nif (require('has-symbols')() || require('has-symbols/shams')()) {\n\tvar $iterator = Symbol.iterator;\n\t// Symbol is available natively or shammed\n\t// natively:\n\t//  - Chrome >= 38\n\t//  - Edge 12-14?, Edge >= 15 for sure\n\t//  - FF >= 36\n\t//  - Safari >= 9\n\t//  - node >= 0.12\n\tmodule.exports = function getIterator(iterable) {\n\t\t// alternatively, `iterable[$iterator]?.()`\n\t\tif (iterable != null && typeof iterable[$iterator] !== 'undefined') {\n\t\t\treturn iterable[$iterator]();\n\t\t}\n\t\tif (isArguments(iterable)) {\n\t\t\t// arguments objects lack Symbol.iterator\n\t\t\t// - node 0.12\n\t\t\treturn Array.prototype[$iterator].call(iterable);\n\t\t}\n\t};\n} else {\n\t// Symbol is not available, native or shammed\n\tvar isArray = require('isarray');\n\tvar isString = require('is-string');\n\tvar GetIntrinsic = require('get-intrinsic');\n\tvar $Map = GetIntrinsic('%Map%', true);\n\tvar $Set = GetIntrinsic('%Set%', true);\n\tvar callBound = require('call-bind/callBound');\n\tvar $arrayPush = callBound('Array.prototype.push');\n\tvar $charCodeAt = callBound('String.prototype.charCodeAt');\n\tvar $stringSlice = callBound('String.prototype.slice');\n\n\tvar advanceStringIndex = function advanceStringIndex(S, index) {\n\t\tvar length = S.length;\n\t\tif ((index + 1) >= length) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\tvar first = $charCodeAt(S, index);\n\t\tif (first < 0xD800 || first > 0xDBFF) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\tvar second = $charCodeAt(S, index + 1);\n\t\tif (second < 0xDC00 || second > 0xDFFF) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\treturn index + 2;\n\t};\n\n\tvar getArrayIterator = function getArrayIterator(arraylike) {\n\t\tvar i = 0;\n\t\treturn {\n\t\t\tnext: function next() {\n\t\t\t\tvar done = i >= arraylike.length;\n\t\t\t\tvar value;\n\t\t\t\tif (!done) {\n\t\t\t\t\tvalue = arraylike[i];\n\t\t\t\t\ti += 1;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tdone: done,\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t};\n\n\tvar getNonCollectionIterator = function getNonCollectionIterator(iterable, noPrimordialCollections) {\n\t\tif (isArray(iterable) || isArguments(iterable)) {\n\t\t\treturn getArrayIterator(iterable);\n\t\t}\n\t\tif (isString(iterable)) {\n\t\t\tvar i = 0;\n\t\t\treturn {\n\t\t\t\tnext: function next() {\n\t\t\t\t\tvar nextIndex = advanceStringIndex(iterable, i);\n\t\t\t\t\tvar value = $stringSlice(iterable, i, nextIndex);\n\t\t\t\t\ti = nextIndex;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: nextIndex > iterable.length,\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// es6-shim and es-shims' es-map use a string \"_es6-shim iterator_\" property on different iterables, such as MapIterator.\n\t\tif (noPrimordialCollections && typeof iterable['_es6-shim iterator_'] !== 'undefined') {\n\t\t\treturn iterable['_es6-shim iterator_']();\n\t\t}\n\t};\n\n\tif (!$Map && !$Set) {\n\t\t// the only language iterables are Array, String, arguments\n\t\t// - Safari <= 6.0\n\t\t// - Chrome < 38\n\t\t// - node < 0.12\n\t\t// - FF < 13\n\t\t// - IE < 11\n\t\t// - Edge < 11\n\n\t\tmodule.exports = function getIterator(iterable) {\n\t\t\tif (iterable != null) {\n\t\t\t\treturn getNonCollectionIterator(iterable, true);\n\t\t\t}\n\t\t};\n\t} else {\n\t\t// either Map or Set are available, but Symbol is not\n\t\t// - es6-shim on an ES5 browser\n\t\t// - Safari 6.2 (maybe 6.1?)\n\t\t// - FF v[13, 36)\n\t\t// - IE 11\n\t\t// - Edge 11\n\t\t// - Safari v[6, 9)\n\n\t\tvar isMap = require('is-map');\n\t\tvar isSet = require('is-set');\n\n\t\t// Firefox >= 27, IE 11, Safari 6.2 - 9, Edge 11, es6-shim in older envs, all have forEach\n\t\tvar $mapForEach = callBound('Map.prototype.forEach', true);\n\t\tvar $setForEach = callBound('Set.prototype.forEach', true);\n\t\tif (typeof process === 'undefined' || !process.versions || !process.versions.node) { // \"if is not node\"\n\n\t\t\t// Firefox 17 - 26 has `.iterator()`, whose iterator `.next()` either\n\t\t\t// returns a value, or throws a StopIteration object. These browsers\n\t\t\t// do not have any other mechanism for iteration.\n\t\t\tvar $mapIterator = callBound('Map.prototype.iterator', true);\n\t\t\tvar $setIterator = callBound('Set.prototype.iterator', true);\n\t\t\tvar getStopIterationIterator = function (iterator) {\n\t\t\t\tvar done = false;\n\t\t\t\treturn {\n\t\t\t\t\tnext: function next() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tdone: done,\n\t\t\t\t\t\t\t\tvalue: done ? undefined : iterator.next()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tdone: true,\n\t\t\t\t\t\t\t\tvalue: undefined\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\t\t// Firefox 27-35, and some older es6-shim versions, use a string \"@@iterator\" property\n\t\t// this returns a proper iterator object, so we should use it instead of forEach.\n\t\t// newer es6-shim versions use a string \"_es6-shim iterator_\" property.\n\t\tvar $mapAtAtIterator = callBound('Map.prototype.@@iterator', true) || callBound('Map.prototype._es6-shim iterator_', true);\n\t\tvar $setAtAtIterator = callBound('Set.prototype.@@iterator', true) || callBound('Set.prototype._es6-shim iterator_', true);\n\n\t\tvar getCollectionIterator = function getCollectionIterator(iterable) {\n\t\t\tif (isMap(iterable)) {\n\t\t\t\tif ($mapIterator) {\n\t\t\t\t\treturn getStopIterationIterator($mapIterator(iterable));\n\t\t\t\t}\n\t\t\t\tif ($mapAtAtIterator) {\n\t\t\t\t\treturn $mapAtAtIterator(iterable);\n\t\t\t\t}\n\t\t\t\tif ($mapForEach) {\n\t\t\t\t\tvar entries = [];\n\t\t\t\t\t$mapForEach(iterable, function (v, k) {\n\t\t\t\t\t\t$arrayPush(entries, [k, v]);\n\t\t\t\t\t});\n\t\t\t\t\treturn getArrayIterator(entries);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isSet(iterable)) {\n\t\t\t\tif ($setIterator) {\n\t\t\t\t\treturn getStopIterationIterator($setIterator(iterable));\n\t\t\t\t}\n\t\t\t\tif ($setAtAtIterator) {\n\t\t\t\t\treturn $setAtAtIterator(iterable);\n\t\t\t\t}\n\t\t\t\tif ($setForEach) {\n\t\t\t\t\tvar values = [];\n\t\t\t\t\t$setForEach(iterable, function (v) {\n\t\t\t\t\t\t$arrayPush(values, v);\n\t\t\t\t\t});\n\t\t\t\t\treturn getArrayIterator(values);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tmodule.exports = function getIterator(iterable) {\n\t\t\treturn getCollectionIterator(iterable) || getNonCollectionIterator(iterable);\n\t\t};\n\t}\n}\n","export default {}","var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        mapForEach.call(obj, function (value, key) {\n            mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n        });\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        setForEach.call(obj, function (value) {\n            setParts.push(inspect(value, obj));\n        });\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar gOPD = require('gopd');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\nvar gOPD = require('gopd');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\n// modified from https://github.com/es-shims/es6-shim\nvar objectKeys = require('object-keys');\nvar hasSymbols = require('has-symbols/shams')();\nvar callBound = require('call-bind/callBound');\nvar toObject = Object;\nvar $push = callBound('Array.prototype.push');\nvar $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function assign(target, source1) {\n\tif (target == null) { throw new TypeError('target must be an object'); }\n\tvar to = toObject(target); // step 1\n\tif (arguments.length === 1) {\n\t\treturn to; // step 2\n\t}\n\tfor (var s = 1; s < arguments.length; ++s) {\n\t\tvar from = toObject(arguments[s]); // step 3.a.i\n\n\t\t// step 3.a.ii:\n\t\tvar keys = objectKeys(from);\n\t\tvar getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);\n\t\tif (getSymbols) {\n\t\t\tvar syms = getSymbols(from);\n\t\t\tfor (var j = 0; j < syms.length; ++j) {\n\t\t\t\tvar key = syms[j];\n\t\t\t\tif ($propIsEnumerable(from, key)) {\n\t\t\t\t\t$push(keys, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// step 3.a.iii:\n\t\tfor (var i = 0; i < keys.length; ++i) {\n\t\t\tvar nextKey = keys[i];\n\t\t\tif ($propIsEnumerable(from, nextKey)) { // step 3.a.iii.2\n\t\t\t\tvar propValue = from[nextKey]; // step 3.a.iii.2.a\n\t\t\t\tto[nextKey] = propValue; // step 3.a.iii.2.b\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to; // step 4\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar lacksProperEnumerationOrder = function () {\n\tif (!Object.assign) {\n\t\treturn false;\n\t}\n\t/*\n\t * v8, specifically in node 4.x, has a bug with incorrect property enumeration order\n\t * note: this does not detect the bug unless there's 20 characters\n\t */\n\tvar str = 'abcdefghijklmnopqrst';\n\tvar letters = str.split('');\n\tvar map = {};\n\tfor (var i = 0; i < letters.length; ++i) {\n\t\tmap[letters[i]] = letters[i];\n\t}\n\tvar obj = Object.assign({}, map);\n\tvar actual = '';\n\tfor (var k in obj) {\n\t\tactual += k;\n\t}\n\treturn str !== actual;\n};\n\nvar assignHasPendingExceptions = function () {\n\tif (!Object.assign || !Object.preventExtensions) {\n\t\treturn false;\n\t}\n\t/*\n\t * Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n\t * which is 72% slower than our shim, and Firefox 40's native implementation.\n\t */\n\tvar thrower = Object.preventExtensions({ 1: 2 });\n\ttry {\n\t\tObject.assign(thrower, 'xy');\n\t} catch (e) {\n\t\treturn thrower[1] === 'y';\n\t}\n\treturn false;\n};\n\nmodule.exports = function getPolyfill() {\n\tif (!Object.assign) {\n\t\treturn implementation;\n\t}\n\tif (lacksProperEnumerationOrder()) {\n\t\treturn implementation;\n\t}\n\tif (assignHasPendingExceptions()) {\n\t\treturn implementation;\n\t}\n\treturn Object.assign;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimAssign() {\n\tvar polyfill = getPolyfill();\n\tdefine(\n\t\tObject,\n\t\t{ assign: polyfill },\n\t\t{ assign: function () { return Object.assign !== polyfill; } }\n\t);\n\treturn polyfill;\n};\n","'use strict';\n\nvar defineProperties = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind.apply(getPolyfill());\n// eslint-disable-next-line no-unused-vars\nvar bound = function assign(target, source1) {\n\treturn polyfill(Object, arguments);\n};\n\ndefineProperties(bound, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = bound;\n","'use strict';\n\nvar objectKeys = require('object-keys');\nvar isArguments = require('is-arguments');\nvar is = require('object-is');\nvar isRegex = require('is-regex');\nvar flags = require('regexp.prototype.flags');\nvar isArray = require('isarray');\nvar isDate = require('is-date-object');\nvar whichBoxedPrimitive = require('which-boxed-primitive');\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar whichCollection = require('which-collection');\nvar getIterator = require('es-get-iterator');\nvar getSideChannel = require('side-channel');\nvar whichTypedArray = require('which-typed-array');\nvar assign = require('object.assign');\n\n// TODO: use extracted package\nvar byteLength = callBound('ArrayBuffer.prototype.byteLength', true);\nfunction isArrayBuffer(buffer) {\n  if (!buffer || typeof buffer !== 'object' || !byteLength) {\n    return false;\n  }\n  try {\n    byteLength(buffer);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar $getTime = callBound('Date.prototype.getTime');\nvar gPO = Object.getPrototypeOf;\nvar $objToString = callBound('Object.prototype.toString');\n\nvar $Set = GetIntrinsic('%Set%', true);\nvar $mapHas = callBound('Map.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSize = callBound('Map.prototype.size', true);\nvar $setAdd = callBound('Set.prototype.add', true);\nvar $setDelete = callBound('Set.prototype.delete', true);\nvar $setHas = callBound('Set.prototype.has', true);\nvar $setSize = callBound('Set.prototype.size', true);\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L401-L414\nfunction setHasEqualElement(set, val1, opts, channel) {\n  var i = getIterator(set);\n  var result;\n  while ((result = i.next()) && !result.done) {\n    if (internalDeepEqual(val1, result.value, opts, channel)) { // eslint-disable-line no-use-before-define\n      // Remove the matching element to make sure we do not check that again.\n      $setDelete(set, result.value);\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L416-L439\nfunction findLooseMatchingPrimitives(prim) {\n  if (typeof prim === 'undefined') {\n    return null;\n  }\n  if (typeof prim === 'object') { // Only pass in null as object!\n    return void 0;\n  }\n  if (typeof prim === 'symbol') {\n    return false;\n  }\n  if (typeof prim === 'string' || typeof prim === 'number') {\n    // Loose equal entries exist only if the string is possible to convert to a regular number and not NaN.\n    return +prim === +prim; // eslint-disable-line no-implicit-coercion\n  }\n  return true;\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L449-L460\nfunction mapMightHaveLoosePrim(a, b, prim, item, opts, channel) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n  var curB = $mapGet(b, altValue);\n  var looseOpts = assign({}, opts, { strict: false });\n  if (\n    (typeof curB === 'undefined' && !$mapHas(b, altValue))\n    // eslint-disable-next-line no-use-before-define\n    || !internalDeepEqual(item, curB, looseOpts, channel)\n  ) {\n    return false;\n  }\n  // eslint-disable-next-line no-use-before-define\n  return !$mapHas(a, altValue) && internalDeepEqual(item, curB, looseOpts, channel);\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L441-L447\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n\n  return $setHas(b, altValue) && !$setHas(a, altValue);\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L518-L533\nfunction mapHasEqualEntry(set, map, key1, item1, opts, channel) {\n  var i = getIterator(set);\n  var result;\n  var key2;\n  while ((result = i.next()) && !result.done) {\n    key2 = result.value;\n    if (\n      // eslint-disable-next-line no-use-before-define\n      internalDeepEqual(key1, key2, opts, channel)\n      // eslint-disable-next-line no-use-before-define\n      && internalDeepEqual(item1, $mapGet(map, key2), opts, channel)\n    ) {\n      $setDelete(set, key2);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction internalDeepEqual(actual, expected, options, channel) {\n  var opts = options || {};\n\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (opts.strict ? is(actual, expected) : actual === expected) {\n    return true;\n  }\n\n  var actualBoxed = whichBoxedPrimitive(actual);\n  var expectedBoxed = whichBoxedPrimitive(expected);\n  if (actualBoxed !== expectedBoxed) {\n    return false;\n  }\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.\n  if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {\n    return opts.strict ? is(actual, expected) : actual == expected; // eslint-disable-line eqeqeq\n  }\n\n  /*\n   * 7.4. For all other Object pairs, including Array objects, equivalence is\n   * determined by having the same number of owned properties (as verified\n   * with Object.prototype.hasOwnProperty.call), the same set of keys\n   * (although not necessarily the same order), equivalent values for every\n   * corresponding key, and an identical 'prototype' property. Note: this\n   * accounts for both named and indexed properties on Arrays.\n   */\n  // see https://github.com/nodejs/node/commit/d3aafd02efd3a403d646a3044adcf14e63a88d32 for memos/channel inspiration\n\n  var hasActual = channel.has(actual);\n  var hasExpected = channel.has(expected);\n  var sentinel;\n  if (hasActual && hasExpected) {\n    if (channel.get(actual) === channel.get(expected)) {\n      return true;\n    }\n  } else {\n    sentinel = {};\n  }\n  if (!hasActual) { channel.set(actual, sentinel); }\n  if (!hasExpected) { channel.set(expected, sentinel); }\n\n  // eslint-disable-next-line no-use-before-define\n  return objEquiv(actual, expected, opts, channel);\n}\n\nfunction isBuffer(x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') {\n    return false;\n  }\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') {\n    return false;\n  }\n\n  return !!(x.constructor && x.constructor.isBuffer && x.constructor.isBuffer(x));\n}\n\nfunction setEquiv(a, b, opts, channel) {\n  if ($setSize(a) !== $setSize(b)) {\n    return false;\n  }\n  var iA = getIterator(a);\n  var iB = getIterator(b);\n  var resultA;\n  var resultB;\n  var set;\n  while ((resultA = iA.next()) && !resultA.done) {\n    if (resultA.value && typeof resultA.value === 'object') {\n      if (!set) { set = new $Set(); }\n      $setAdd(set, resultA.value);\n    } else if (!$setHas(b, resultA.value)) {\n      if (opts.strict) { return false; }\n      if (!setMightHaveLoosePrim(a, b, resultA.value)) {\n        return false;\n      }\n      if (!set) { set = new $Set(); }\n      $setAdd(set, resultA.value);\n    }\n  }\n  if (set) {\n    while ((resultB = iB.next()) && !resultB.done) {\n      // We have to check if a primitive value is already matching and only if it's not, go hunting for it.\n      if (resultB.value && typeof resultB.value === 'object') {\n        if (!setHasEqualElement(set, resultB.value, opts.strict, channel)) {\n          return false;\n        }\n      } else if (\n        !opts.strict\n        && !$setHas(a, resultB.value)\n        && !setHasEqualElement(set, resultB.value, opts.strict, channel)\n      ) {\n        return false;\n      }\n    }\n    return $setSize(set) === 0;\n  }\n  return true;\n}\n\nfunction mapEquiv(a, b, opts, channel) {\n  if ($mapSize(a) !== $mapSize(b)) {\n    return false;\n  }\n  var iA = getIterator(a);\n  var iB = getIterator(b);\n  var resultA;\n  var resultB;\n  var set;\n  var key;\n  var item1;\n  var item2;\n  while ((resultA = iA.next()) && !resultA.done) {\n    key = resultA.value[0];\n    item1 = resultA.value[1];\n    if (key && typeof key === 'object') {\n      if (!set) { set = new $Set(); }\n      $setAdd(set, key);\n    } else {\n      item2 = $mapGet(b, key);\n      if ((typeof item2 === 'undefined' && !$mapHas(b, key)) || !internalDeepEqual(item1, item2, opts, channel)) {\n        if (opts.strict) {\n          return false;\n        }\n        if (!mapMightHaveLoosePrim(a, b, key, item1, opts, channel)) {\n          return false;\n        }\n        if (!set) { set = new $Set(); }\n        $setAdd(set, key);\n      }\n    }\n  }\n\n  if (set) {\n    while ((resultB = iB.next()) && !resultB.done) {\n      key = resultB.value[0];\n      item2 = resultB.value[1];\n      if (key && typeof key === 'object') {\n        if (!mapHasEqualEntry(set, a, key, item2, opts, channel)) {\n          return false;\n        }\n      } else if (\n        !opts.strict\n        && (!a.has(key) || !internalDeepEqual($mapGet(a, key), item2, opts, channel))\n        && !mapHasEqualEntry(set, a, key, item2, assign({}, opts, { strict: false }), channel)\n      ) {\n        return false;\n      }\n    }\n    return $setSize(set) === 0;\n  }\n  return true;\n}\n\nfunction objEquiv(a, b, opts, channel) {\n  /* eslint max-statements: [2, 100], max-lines-per-function: [2, 120], max-depth: [2, 5], max-lines: [2, 400] */\n  var i, key;\n\n  if (typeof a !== typeof b) { return false; }\n  if (a == null || b == null) { return false; }\n\n  if ($objToString(a) !== $objToString(b)) { return false; }\n\n  if (isArguments(a) !== isArguments(b)) { return false; }\n\n  var aIsArray = isArray(a);\n  var bIsArray = isArray(b);\n  if (aIsArray !== bIsArray) { return false; }\n\n  // TODO: replace when a cross-realm brand check is available\n  var aIsError = a instanceof Error;\n  var bIsError = b instanceof Error;\n  if (aIsError !== bIsError) { return false; }\n  if (aIsError || bIsError) {\n    if (a.name !== b.name || a.message !== b.message) { return false; }\n  }\n\n  var aIsRegex = isRegex(a);\n  var bIsRegex = isRegex(b);\n  if (aIsRegex !== bIsRegex) { return false; }\n  if ((aIsRegex || bIsRegex) && (a.source !== b.source || flags(a) !== flags(b))) {\n    return false;\n  }\n\n  var aIsDate = isDate(a);\n  var bIsDate = isDate(b);\n  if (aIsDate !== bIsDate) { return false; }\n  if (aIsDate || bIsDate) { // && would work too, because both are true or both false here\n    if ($getTime(a) !== $getTime(b)) { return false; }\n  }\n  if (opts.strict && gPO && gPO(a) !== gPO(b)) { return false; }\n\n  if (whichTypedArray(a) !== whichTypedArray(b)) {\n    return false;\n  }\n\n  var aIsBuffer = isBuffer(a);\n  var bIsBuffer = isBuffer(b);\n  if (aIsBuffer !== bIsBuffer) { return false; }\n  if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here\n    if (a.length !== b.length) { return false; }\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) { return false; }\n    }\n    return true;\n  }\n\n  var aIsArrayBuffer = isArrayBuffer(a);\n  var bIsArrayBuffer = isArrayBuffer(b);\n  if (aIsArrayBuffer !== bIsArrayBuffer) { return false; }\n  if (aIsArrayBuffer || bIsArrayBuffer) { // && would work too, because both are true or both false here\n    if (byteLength(a) !== byteLength(b)) { return false; }\n    /* global Uint8Array */\n    return typeof Uint8Array === 'function' && internalDeepEqual(new Uint8Array(a), new Uint8Array(b), opts, channel);\n  }\n\n  if (typeof a !== typeof b) { return false; }\n\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  // having the same number of owned properties (keys incorporates hasOwnProperty)\n  if (ka.length !== kb.length) { return false; }\n\n  // the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  // ~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i]) { return false; } // eslint-disable-line eqeqeq\n  }\n\n  // equivalent values for every corresponding key, and ~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!internalDeepEqual(a[key], b[key], opts, channel)) { return false; }\n  }\n\n  var aCollection = whichCollection(a);\n  var bCollection = whichCollection(b);\n  if (aCollection !== bCollection) {\n    return false;\n  }\n  if (aCollection === 'Set' || bCollection === 'Set') { // aCollection === bCollection\n    return setEquiv(a, b, opts, channel);\n  }\n  if (aCollection === 'Map') { // aCollection === bCollection\n    return mapEquiv(a, b, opts, channel);\n  }\n\n  return true;\n}\n\nmodule.exports = function deepEqual(a, b, opts) {\n  return internalDeepEqual(a, b, opts, getSideChannel());\n};\n","import equal from 'deep-equal';\nimport type { Bounds, Shape, ShapeType } from '.';\n\nexport interface ShapeUtil<T extends Shape> {\n  area: (shape: T) => number;\n\n  intersects: (shape: T, x: number, y: number) => boolean;\n}\n\nconst Utils: { [key: string]: ShapeUtil<any> } = {};\n\n/**\n * Registers a new ShapeUtil for a given shape type.\n * @param type the shape type\n * @param util the ShapeUtil implementation for this shape type\n */\nexport const registerShapeUtil = (type: ShapeType | string, util: ShapeUtil<any>) =>\n  (Utils[type] = util);\n\n/**\n * Computes the area of the given shape. Delegates to the corresponding ShapeUtil.\n * @param shape the shape\n */\nexport const computeArea = (shape: Shape) => Utils[shape.type].area(shape);\n\n/**\n * Tests if the given shape intersects the given point. Delegates to\n * the corresponding ShapeUtil.\n * @param shape the shape\n * @param x point x coord\n * @param y point y coord\n * @returns true if shape and point intersect\n */\nexport const intersects = (shape: Shape, x: number, y: number): boolean =>\n  Utils[shape.type].intersects(shape, x, y);\n\n/**\n * Tests the two shapes for equality.\n * @param a a shape\n * @param b another shape\n * @returns true if both shapes are equal\n */\nexport const equals = (a: Shape, b: Shape): boolean => equal(a, b);\n\n/**\n * Tests two shapes for equality, ignoring their current state. This means\n * shapes that have, for example, different hover or selection states\n * will still test as equal if all other properties are identical.\n * @param a a shape\n * @param b another shape\n * @returns true if both shapes are equal, regardless of their states\n */\nexport const equalsIgnoreState = (a: Shape, b: Shape): boolean => {\n  // Returns the shape object without state\n  const stripState = (shape: Shape) => {\n    const { state, ...rest } = shape;\n    return rest;\n  };\n\n  const statelessA = stripState(a);\n  const statelessB = stripState(b);\n\n  return equal(statelessA, statelessB);\n};\n\n/**\n * Computes Bounds from a given list of points.\n * @param points the points\n * @returns the Bounds\n */\nexport const boundsFromPoints = (points: Array<Array<number>>): Bounds => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n\n  points.forEach(([x, y]) => {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  });\n\n  return { minX, minY, maxX, maxY };\n};\n","/*\n (c) 2017, Vladimir Agafonkin\n Simplify.js, a high-performance JS polyline simplification library\n mourner.github.io/simplify-js\n*/\n\n(function () { 'use strict';\n\n// to suit your point format, run search/replace for '.x' and '.y';\n// for 3D version, see 3d branch (configurability would draw significant performance overhead)\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y;\n\n    return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(p, p1, p2) {\n\n    var x = p1.x,\n        y = p1.y,\n        dx = p2.x - x,\n        dy = p2.y - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((p.x - x) * dx + (p.y - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = p2.x;\n            y = p2.y;\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = p.x - x;\n    dy = p.y - y;\n\n    return dx * dx + dy * dy;\n}\n// rest of the code doesn't care about point format\n\n// basic distance-based simplification\nfunction simplifyRadialDist(points, sqTolerance) {\n\n    var prevPoint = points[0],\n        newPoints = [prevPoint],\n        point;\n\n    for (var i = 1, len = points.length; i < len; i++) {\n        point = points[i];\n\n        if (getSqDist(point, prevPoint) > sqTolerance) {\n            newPoints.push(point);\n            prevPoint = point;\n        }\n    }\n\n    if (prevPoint !== point) newPoints.push(point);\n\n    return newPoints;\n}\n\nfunction simplifyDPStep(points, first, last, sqTolerance, simplified) {\n    var maxSqDist = sqTolerance,\n        index;\n\n    for (var i = first + 1; i < last; i++) {\n        var sqDist = getSqSegDist(points[i], points[first], points[last]);\n\n        if (sqDist > maxSqDist) {\n            index = i;\n            maxSqDist = sqDist;\n        }\n    }\n\n    if (maxSqDist > sqTolerance) {\n        if (index - first > 1) simplifyDPStep(points, first, index, sqTolerance, simplified);\n        simplified.push(points[index]);\n        if (last - index > 1) simplifyDPStep(points, index, last, sqTolerance, simplified);\n    }\n}\n\n// simplification using Ramer-Douglas-Peucker algorithm\nfunction simplifyDouglasPeucker(points, sqTolerance) {\n    var last = points.length - 1;\n\n    var simplified = [points[0]];\n    simplifyDPStep(points, 0, last, sqTolerance, simplified);\n    simplified.push(points[last]);\n\n    return simplified;\n}\n\n// both algorithms combined for awesome performance\nfunction simplify(points, tolerance, highestQuality) {\n\n    if (points.length <= 2) return points;\n\n    var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n\n    points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\n    points = simplifyDouglasPeucker(points, sqTolerance);\n\n    return points;\n}\n\n// export as AMD module / Node module / browser or worker variable\nif (typeof define === 'function' && define.amd) define(function() { return simplify; });\nelse if (typeof module !== 'undefined') {\n    module.exports = simplify;\n    module.exports.default = simplify;\n} else if (typeof self !== 'undefined') self.simplify = simplify;\nelse window.simplify = simplify;\n\n})();\n","import s from 'simplify-js';\nimport { boundsFromPoints, registerShapeUtil, ShapeType } from '..';\nimport type { ShapeUtil } from '..';\nimport type { Polygon } from './Polygon';\n\nconst PolygonUtil: ShapeUtil<Polygon> = {\n  area: (polygon: Polygon): number => {\n    const { points } = polygon.geometry;\n\n    let area = 0;\n    let j = points.length - 1;\n\n    for (let i = 0; i < points.length; i++) {\n      area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n      j = i;\n    }\n\n    return Math.abs(0.5 * area);\n  },\n\n  intersects: (polygon: Polygon, x: number, y: number): boolean => {\n    // Based on https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html/pnpoly.html\n    const { points } = polygon.geometry;\n\n    let inside = false;\n\n    for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\n      const xi = points[i][0],\n        yi = points[i][1];\n      const xj = points[j][0],\n        yj = points[j][1];\n\n      const intersect = yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n};\n\nregisterShapeUtil(ShapeType.POLYGON, PolygonUtil);\n\nexport const simplifyPolygon = (polygon: Polygon): Polygon => {\n  const points = polygon.geometry.points.map(([x, y]) => ({ x, y }));\n  const simplified = s(points, 2.5, true).map(({ x, y }) => [x, y]);\n\n  return {\n    ...polygon,\n    geometry: {\n      points: simplified,\n      bounds: boundsFromPoints(simplified)\n    }\n  };\n};\n","import { registerShapeUtil, ShapeType } from '..';\nimport type { Rectangle, ShapeUtil } from '..';\n\nexport const RectangleUtil: ShapeUtil<Rectangle> = {\n  area: (rect: Rectangle): number => rect.geometry.w * rect.geometry.h,\n\n  intersects: (rect: Rectangle, x: number, y: number): boolean =>\n    x >= rect.geometry.x &&\n    x <= rect.geometry.x + rect.geometry.w &&\n    y >= rect.geometry.y &&\n    y <= rect.geometry.y + rect.geometry.h\n};\n\nregisterShapeUtil(ShapeType.RECTANGLE, RectangleUtil);\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set => {\n  return set.values().next().value || undefined\n}\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => {\n  return new Set(entries)\n}\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {Array<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n *\n * @param {Array<ITEM>} arr\n * @param {function(ITEM, number, Array<ITEM>):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => arr.every(f)\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @param {Array<S>} arr\n * @param {function(S, number, Array<S>):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => arr.some(f)\n\n/**\n * @template ELEM\n *\n * @param {Array<ELEM>} a\n * @param {Array<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\n\nexport const isArray = Array.isArray\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* istanbul ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* istanbul ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* istanbul ignore next */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* istanbul ignore next */\n  utf8TextDecoder = null\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nexport const varStorage = _localStorage\n\n/* istanbul ignore next */\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* istanbul ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release &&\n  /node|io\\.js/.test(process.release.name)\n/* istanbul ignore next */\nexport const isBrowser = typeof window !== 'undefined' && !isNode\n/* istanbul ignore next */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase()])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* istanbul ignore next */\nexport const production = hasConf('production')\n\n/* istanbul ignore next */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* istanbul ignore next */\nexport const supportsColor = !hasParam('no-colors') &&\n  (!isNode || process.stdout.isTTY || forceColor) && (\n  !isNode || hasParam('color') || forceColor ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n)\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\n/**\n * @type {number}\n */\nexport const HIGHEST_INT32 = binary.BITS31\n\n/**\n * @module number\n */\n\n/* istanbul ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* istanbul ignore next */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* istanbul ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* istanbul ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* istanbul ignore else */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* istanbul ignore next */\nexport const writeVarString = (string.utf8TextEncoder && string.utf8TextEncoder.encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (data instanceof Array) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  /* istanbul ignore else */\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/* eslint-env browser */\nexport const performance = typeof window === 'undefined' ? null : (typeof window.performance !== 'undefined' && window.performance) || null\n\nconst isoCrypto = typeof crypto === 'undefined' ? null : crypto\n\n/**\n * @type {function(number):ArrayBuffer}\n */\nexport const cryptoRandomBuffer = isoCrypto !== null\n  ? len => {\n    // browser\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    isoCrypto.getRandomValues(arr)\n    return buf\n  }\n  : len => {\n    // polyfill\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    for (let i = 0; i < len; i++) {\n      arr[i] = Math.ceil((Math.random() * 0xFFFFFFFF) >>> 0)\n    }\n    return buf\n  }\n","\n/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\nimport { cryptoRandomBuffer } from './isomorphic.js'\n\nexport const rand = Math.random\n\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0]\n\nexport const uint53 = () => {\n  const arr = new Uint32Array(cryptoRandomBuffer(8))\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0)\n}\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* istanbul ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */\n\nimport * as time from './time.js'\n\n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */\n\n/**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\n\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */\nexport const createEmpty = f => new Promise(f)\n\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template T\n * @param {Array<Promise<T>>} arrp\n * @return {Promise<Array<T>>}\n */\nexport const all = arrp => Promise.all(arrp)\n\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */\nexport const reject = reason => Promise.reject(reason)\n\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */\nexport const resolve = res => Promise.resolve(res)\n\n/**\n * @template T\n * @param {T} res\n * @return {Promise<T>}\n */\nexport const resolveWith = res => Promise.resolve(res)\n\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\n  const startTime = time.getUnixTime()\n  const hasTimeout = timeout > 0\n  const untilInterval = () => {\n    if (check()) {\n      clearInterval(intervalHandle)\n      resolve()\n    } else if (hasTimeout) {\n      /* istanbul ignore else */\n      if (time.getUnixTime() - startTime > timeout) {\n        clearInterval(intervalHandle)\n        reject(new Error('Timeout'))\n      }\n    }\n  }\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\n})\n\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */\nexport const wait = timeout => create((resolve, reject) => setTimeout(resolve, timeout))\n\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Error}\n */\nexport const create = s => new Error(s)\n\n/* istanbul ignore next */\n/**\n * @throws {Error}\n * @return {never}\n */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/* istanbul ignore next */\n/**\n * @throws {Error}\n * @return {never}\n */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n","/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n","/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* istanbul ignore next */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const createTextNode = text => doc.createTextNode(text)\n\n/* istanbul ignore next */\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\n/* istanbul ignore next */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\n/* istanbul ignore next */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\n/* istanbul ignore next */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\n/* istanbul ignore next */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\n/* istanbul ignore next */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\n/* istanbul ignore next */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\n/* istanbul ignore next */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\n/* istanbul ignore next */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\n/* istanbul ignore next */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n","/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as symbol from './symbol.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as time from './time.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [BOLD]: pair.create('font-weight', 'bold'),\n  [UNBOLD]: pair.create('font-weight', 'normal'),\n  [BLUE]: pair.create('color', 'blue'),\n  [GREEN]: pair.create('color', 'green'),\n  [GREY]: pair.create('color', 'grey'),\n  [RED]: pair.create('color', 'red'),\n  [PURPLE]: pair.create('color', 'purple'),\n  [ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [UNCOLOR]: pair.create('color', 'black')\n}\n\nconst _nodeStyleMap = {\n  [BOLD]: '\\u001b[1m',\n  [UNBOLD]: '\\u001b[2m',\n  [BLUE]: '\\x1b[34m',\n  [GREEN]: '\\x1b[32m',\n  [GREY]: '\\u001b[37m',\n  [RED]: '\\x1b[31m',\n  [PURPLE]: '\\x1b[35m',\n  [ORANGE]: '\\x1b[38;5;208m',\n  [UNCOLOR]: '\\x1b[0m'\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeBrowserLoggingArgs = (args) => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNoColorLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _nodeStyleMap[arg]\n    if (style === undefined) {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg)\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    /* istanbul ignore else */\n    if (!(arg instanceof Symbol)) {\n      if (arg.constructor === Object) {\n        logArgs.push(JSON.stringify(arg))\n      } else {\n        logArgs.push(arg)\n      }\n    }\n  }\n  return logArgs\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNodeLoggingArgs = (args) => {\n  const strBuilder = []\n  const logArgs = []\n\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _nodeStyleMap[arg]\n    if (style !== undefined) {\n      strBuilder.push(style)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg)\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    strBuilder.push('\\x1b[0m')\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    /* istanbul ignore else */\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/* istanbul ignore next */\nconst computeLoggingArgs = env.supportsColor\n  ? (env.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs)\n  : computeNoColorLoggingArgs\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach((vc) => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(ORANGE)\n  vconsoles.forEach((vc) => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Error} err\n */\nexport const printError = (err) => {\n  console.error(err)\n  vconsoles.forEach((vc) => vc.printError(err))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log(\n      '%c                      ',\n      `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`\n    )\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach((vc) => vc.printImg(url, height))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} base64\n * @param {number} height\n */\nexport const printImgBase64 = (base64, height) =>\n  printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach((vc) => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach((vc) => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* istanbul ignore next */\n  vconsoles.forEach((vc) => vc.groupEnd())\n}\n\n/* istanbul ignore next */\n/**\n * @param {function():Node} createNode\n */\nexport const printDom = (createNode) =>\n  vconsoles.forEach((vc) => vc.printDom(createNode()))\n\n/* istanbul ignore next */\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\nexport const printCanvas = (canvas, height) =>\n  printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = new Set()\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\nconst _computeLineSpans = (args) => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [\n          pair.create('style', dom.mapToStyleString(currentStyle))\n        ], [dom.text(arg.toString())])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(\n        dom.element('span', [], [dom.text(/** @type {string} */ (content))])\n      )\n    }\n  }\n  return spans\n}\n\nconst lineStyle =\n  'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* istanbul ignore next */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [\n        pair.create('hidden', collapsed),\n        pair.create('style', 'color:grey;font-size:120%;')\n      ], [dom.text('▼')])\n      const triangleRight = dom.element('span', [\n        pair.create('hidden', !collapsed),\n        pair.create('style', 'color:grey;font-size:125%;')\n      ], [dom.text('▶')])\n      const content = dom.element(\n        'div',\n        [pair.create(\n          'style',\n          `${lineStyle};padding-left:${this.depth * 10}px`\n        )],\n        [triangleDown, triangleRight, dom.text(' ')].concat(\n          _computeLineSpans(args)\n        )\n      )\n      const nextContainer = dom.element('div', [\n        pair.create('hidden', collapsed)\n      ])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', (_event) => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('div', [\n          pair.create(\n            'style',\n            `${lineStyle};padding-left:${this.depth * 10}px`\n          )\n        ], _computeLineSpans(args))\n      ])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([RED, BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('img', [\n          pair.create('src', url),\n          pair.create('height', `${math.round(height * 1.5)}px`)\n        ])\n      ])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @param {Element} dom\n */\nexport const createVConsole = (dom) => new VConsole(dom)\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (moduleName) => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null &&\n    (debugRegexVar === '*' || debugRegexVar === 'true' ||\n      new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n\n  return !doLogging ? func.nop : (...args) => {\n    const timeNow = time.getUnixTime()\n    const timeDiff = timeNow - lastLoggingTime\n    lastLoggingTime = timeNow\n    print(\n      color,\n      moduleName,\n      UNCOLOR,\n      ...args.map((arg) =>\n        (typeof arg === 'string' || typeof arg === 'symbol')\n          ? arg\n          : JSON.stringify(arg)\n      ),\n      color,\n      ' +' + timeDiff + 'ms'\n    )\n  }\n}\n","/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n","import { Observable } from 'lib0/observable';\nimport * as array from 'lib0/array';\nimport * as math from 'lib0/math';\nimport * as map from 'lib0/map';\nimport * as encoding from 'lib0/encoding';\nimport * as decoding from 'lib0/decoding';\nimport * as random from 'lib0/random';\nimport * as promise from 'lib0/promise';\nimport * as buffer from 'lib0/buffer';\nimport * as error from 'lib0/error';\nimport * as binary from 'lib0/binary';\nimport * as f from 'lib0/function';\nimport { callAll } from 'lib0/function';\nimport * as set from 'lib0/set';\nimport * as logging from 'lib0/logging';\nimport * as time from 'lib0/time';\nimport * as iterator from 'lib0/iterator';\nimport * as object from 'lib0/object';\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nclass AbstractConnector extends Observable {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super();\n    this.doc = ydoc;\n    this.awareness = awareness;\n  }\n}\n\nclass DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock;\n    /**\n     * @type {number}\n     */\n    this.len = len;\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nclass DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map();\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid));\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i];\n      iterateStructs(transaction, structs, del.clock, del.len, f);\n    }\n  });\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nconst findIndexDS = (dis, clock) => {\n  let left = 0;\n  let right = dis.length - 1;\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2);\n    const mid = dis[midindex];\n    const midclock = mid.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n  }\n  return null\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client);\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n};\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock);\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j;\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1];\n      const right = dels[i];\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock);\n      } else {\n        if (j < i) {\n          dels[j] = right;\n        }\n        j++;\n      }\n    }\n    dels.length = j;\n  });\n};\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nconst mergeDeleteSets = dss => {\n  const merged = new DeleteSet();\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice();\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || []);\n        }\n        merged.clients.set(client, dels);\n      }\n    });\n  }\n  sortAndMergeDeleteSet(merged);\n  return merged\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nconst addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => []).push(new DeleteItem(clock, length));\n};\n\nconst createDeleteSet = () => new DeleteSet();\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nconst createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet();\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = [];\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i];\n      if (struct.deleted) {\n        const clock = struct.id.clock;\n        let len = struct.length;\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length;\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len));\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems);\n    }\n  });\n  return ds\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size);\n  ds.clients.forEach((dsitems, client) => {\n    encoder.resetDsCurVal();\n    encoding.writeVarUint(encoder.restEncoder, client);\n    const len = dsitems.length;\n    encoding.writeVarUint(encoder.restEncoder, len);\n    for (let i = 0; i < len; i++) {\n      const item = dsitems[i];\n      encoder.writeDsClock(item.clock);\n      encoder.writeDsLen(item.len);\n    }\n  });\n};\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nconst readDeleteSet = decoder => {\n  const ds = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => []);\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()));\n      }\n    }\n  }\n  return ds\n};\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nconst readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    const structs = store.clients.get(client) || [];\n    const state = getState(store, client);\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock();\n      const clockEnd = clock + decoder.readDsLen();\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state);\n        }\n        let index = findIndexSS(structs, clock);\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index];\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n          index++; // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++];\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock));\n              }\n              struct.delete(transaction);\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock);\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2();\n    encoding.writeVarUint(ds.restEncoder, 0); // encode 0 structs\n    writeDeleteSet(ds, unappliedDS);\n    return ds.toUint8Array()\n  }\n  return null\n};\n\n/**\n * @module Y\n */\n\nconst generateNewClientId = random.uint32;\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {string | null} [DocOpts.collectionid] Associate this document with a collection. This only plays a role if your provider has a concept of collection.\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n * @property {boolean} [DocOpts.shouldLoad] Whether the document should be synced by the provider now. This is toggled to true when you call ydoc.load()\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nclass Doc extends Observable {\n  /**\n   * @param {DocOpts} [opts] configuration\n   */\n  constructor ({ guid = random.uuidv4(), collectionid = null, gc = true, gcFilter = () => true, meta = null, autoLoad = false, shouldLoad = true } = {}) {\n    super();\n    this.gc = gc;\n    this.gcFilter = gcFilter;\n    this.clientID = generateNewClientId();\n    this.guid = guid;\n    this.collectionid = collectionid;\n    /**\n     * @type {Map<string, AbstractType<YEvent<any>>>}\n     */\n    this.share = new Map();\n    this.store = new StructStore();\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null;\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = [];\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set();\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null;\n    this.shouldLoad = shouldLoad;\n    this.autoLoad = autoLoad;\n    this.meta = meta;\n    this.isLoaded = false;\n    this.whenLoaded = promise.create(resolve => {\n      this.on('load', () => {\n        this.isLoaded = true;\n        resolve(this);\n      });\n    });\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item;\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this);\n      }, null, true);\n    }\n    this.shouldLoad = true;\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(Array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @param {function(Transaction):void} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    transact(this, f, origin);\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor();\n      t._integrate(this, null);\n      return t\n    });\n    const Constr = type.constructor;\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor();\n        t._map = type._map;\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t;\n          }\n        });\n        t._start = type._start;\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t;\n        }\n        t._length = type._length;\n        this.share.set(name, t);\n        t._integrate(this, null);\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {};\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON();\n    });\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy());\n    const item = this._item;\n    if (item !== null) {\n      this._item = null;\n      const content = /** @type {ContentDoc} */ (item.content);\n      content.doc = new Doc({ guid: this.guid, ...content.opts, shouldLoad: false });\n      content.doc._item = item;\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        const doc = content.doc;\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(doc);\n        }\n        transaction.subdocsRemoved.add(this);\n      }, null, true);\n    }\n    this.emit('destroyed', [true]);\n    this.emit('destroy', [this]);\n    super.destroy();\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f);\n  }\n}\n\nclass DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nclass UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nclass DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0;\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder);\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1;\n    this.dsCurrVal += diff;\n    return diff\n  }\n}\n\nclass UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder);\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = [];\n    decoding.readVarUint(decoder); // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder));\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read();\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read();\n      this.keys.push(key);\n      return key\n    }\n  }\n}\n\nclass DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder();\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n}\n\nclass UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed));\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key);\n  }\n}\n\nclass DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder(); // encodes all the rest / non-optimized\n    this.dsCurrVal = 0;\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal;\n    this.dsCurrVal = clock;\n    encoding.writeVarUint(this.restEncoder, diff);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase();\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1);\n    this.dsCurrVal += len;\n  }\n}\n\nclass UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super();\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map();\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0;\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.clientEncoder = new encoding.UintOptRleEncoder();\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.stringEncoder = new encoding.StringEncoder();\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.typeRefEncoder = new encoding.UintOptRleEncoder();\n    this.lenEncoder = new encoding.UintOptRleEncoder();\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder();\n    encoding.writeVarUint(encoder, 0); // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder));\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder));\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array());\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder));\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client);\n    this.leftClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client);\n    this.rightClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed);\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key);\n    if (clock === undefined) {\n      /**\n       * @todo uncomment to introduce this feature finally\n       *\n       * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n       * Furthermore, I forgot to set the keyclock. So everything was working fine.\n       *\n       * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n       *\n       * I don't know yet how to reintroduce this feature..\n       *\n       * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n       *\n       */\n      // this.keyMap.set(key, this.keyClock)\n      this.keyClockEncoder.write(this.keyClock++);\n      this.stringEncoder.write(key);\n    } else {\n      this.keyClockEncoder.write(clock);\n    }\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock); // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock);\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs);\n  encoder.writeClient(client);\n  encoding.writeVarUint(encoder.restEncoder, clock);\n  const firstStruct = structs[startNewStructs];\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock);\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0);\n  }\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nconst writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map();\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock);\n    }\n  });\n  getStateVector(store).forEach((clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0);\n    }\n  });\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size);\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  Array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    // @ts-ignore\n    writeStructs(encoder, store.clients.get(client), client, clock);\n  });\n};\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nconst readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create();\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs });\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen();\n          refs[i] = new GC(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder);\n          refs[i] = new Skip(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          );\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct;\n          clock += struct.length;\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n};\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = [];\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = Array.from(clientsStructRefs.keys()).sort((a, b) => a - b);\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop();\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  };\n  let curStructsTarget = getNextStructTarget();\n  if (curStructsTarget === null && stack.length === 0) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore();\n  const missingSV = new Map();\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client);\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock);\n    }\n  };\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++];\n  // caching the state because it is used very often\n  const state = new Map();\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client;\n      const unapplicableItems = clientsStructRefs.get(client);\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--;\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i));\n        clientsStructRefs.delete(client);\n        unapplicableItems.i = 0;\n        unapplicableItems.refs = [];\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item]);\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client);\n    }\n    stack.length = 0;\n  };\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client));\n      const offset = localClock - stackHead.id.clock;\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead);\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1);\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS();\n      } else {\n        const missing = stackHead.getMissing(transaction, store);\n        if (missing !== null) {\n          stack.push(stackHead);\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 };\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing));\n            addStackToRestSS();\n          } else {\n            stackHead = structRefs.refs[structRefs.i++];\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset);\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length);\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop());\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n    } else {\n      curStructsTarget = getNextStructTarget();\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2();\n    writeClientsStructs(encoder, restStructs, new Map());\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0); // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nconst writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nconst readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false;\n    let retry = false;\n    const doc = transaction.doc;\n    const store = doc.store;\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc);\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss);\n    const pending = store.pendingStructs;\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true;\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client);\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock);\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update]);\n      }\n    } else {\n      store.pendingStructs = restStructs;\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store);\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs));\n      decoding.readVarUint(pendingDSUpdate.restDecoder); // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store);\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2]);\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2;\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest;\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update;\n      store.pendingStructs = null;\n      applyUpdateV2(transaction.doc, update);\n    }\n  }, transactionOrigin, false);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder));\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nconst applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update);\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder));\n};\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1);\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nconst writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector);\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store));\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector);\n  writeStateAsUpdate(encoder, doc, targetStateVector);\n  const updates = [encoder.toUint8Array()];\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs);\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector));\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1());\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst readStateVector = decoder => {\n  const ss = new Map();\n  const ssLength = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const clock = decoding.readVarUint(decoder.restDecoder);\n    ss.set(client, clock);\n  }\n  return ss\n};\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)));\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nconst writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size);\n  Array.from(sv.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    encoding.writeVarUint(encoder.restEncoder, client); // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock);\n  });\n  return encoder\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nconst writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store));\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc);\n  } else {\n    writeDocumentStateVector(encoder, doc);\n  }\n  return encoder.toUint8Array()\n};\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1());\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nclass EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = [];\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nconst createEventHandler = () => new EventHandler();\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nconst addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f);\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nconst removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l;\n  const len = l.length;\n  eventHandler.l = l.filter(g => f !== g);\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.');\n  }\n};\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nconst callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1]);\n\nclass ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client;\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock;\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock);\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nconst createID = (client, clock) => new ID(client, clock);\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nconst writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client);\n  encoding.writeVarUint(encoder, id.clock);\n};\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nconst readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder));\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nconst findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n};\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nconst isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item;\n  }\n  return false\n};\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nconst logType = type => {\n  const res = [];\n  let n = type._start;\n  while (n) {\n    res.push(n);\n    n = n.right;\n  }\n  console.log('Children: ', res);\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content));\n};\n\nclass PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map();\n    this.yusers = storeType;\n    this.doc = doc;\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map();\n    this.dss = dss;\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds');\n      const ids = user.get('ids');\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription);\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]));\n            }\n          });\n        });\n      });\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))));\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      );\n      ids.forEach(addClientId);\n    };\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      );\n    });\n    // add intial data\n    storeType.forEach(initUser);\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} [conf]\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers;\n    let user = users.get(userDescription);\n    if (!user) {\n      user = new YMap();\n      user.set('ids', new YArray());\n      user.set('ds', new YArray());\n      users.set(userDescription, user);\n    }\n    user.get('ids').push([clientid]);\n    users.observe(event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription);\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite;\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid]);\n            }\n          });\n          const encoder = new DSEncoderV1();\n          const ds = this.dss.get(userDescription);\n          if (ds) {\n            writeDeleteSet(encoder, ds);\n            user.get('ds').push([encoder.toUint8Array()]);\n          }\n        }\n      }, 0);\n    });\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds');\n        const ds = transaction.deleteSet;\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1();\n          writeDeleteSet(encoder, ds);\n          yds.push([encoder.toUint8Array()]);\n        }\n      });\n    });\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nclass RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type;\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname;\n    /**\n     * @type {ID | null}\n     */\n    this.item = item;\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nconst relativePositionToJSON = rpos => {\n  const json = {};\n  if (rpos.type) {\n    json.type = rpos.type;\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname;\n  }\n  if (rpos.item) {\n    json.item = rpos.item;\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc;\n  }\n  return json\n};\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc);\n\nclass AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n    /**\n     * @type {number}\n     */\n    this.index = index;\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nconst createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc);\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nconst createRelativePosition = (type, item, assoc) => {\n  let typeid = null;\n  let tname = null;\n  if (type._item === null) {\n    tname = findRootTypeKey(type);\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock);\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n};\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start;\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--;\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length;\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right;\n  }\n  return createRelativePosition(type, null, assoc)\n};\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nconst writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos;\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0);\n    writeID(encoder, item);\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1);\n    encoding.writeVarString(encoder, tname);\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2);\n    writeID(encoder, type);\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc);\n  return encoder\n};\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nconst encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder();\n  writeRelativePosition(encoder, rpos);\n  return encoding.toUint8Array(encoder)\n};\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nconst readRelativePosition = decoder => {\n  let type = null;\n  let tname = null;\n  let itemID = null;\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder);\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder);\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder);\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0;\n  return new RelativePosition(type, tname, itemID, assoc)\n};\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nconst decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array));\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nconst createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store;\n  const rightID = rpos.item;\n  const typeID = rpos.type;\n  const tname = rpos.tname;\n  const assoc = rpos.assoc;\n  let type = null;\n  let index = 0;\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID);\n    const right = res.item;\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent);\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)); // adjust position based on left association if necessary\n      let n = right.left;\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length;\n        }\n        n = n.left;\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname);\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID);\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type;\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length;\n    } else {\n      index = 0;\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n};\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n);\n\nclass Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds;\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv;\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nconst equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients;\n  const ds2 = snap2.ds.clients;\n  const sv1 = snap1.sv;\n  const sv2 = snap2.sv;\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || [];\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i];\n      const dsitem2 = dsitems2[i];\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n};\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nconst encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds);\n  writeStateVector(encoder, snapshot.sv);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nconst encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1());\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nconst decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n};\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nconst decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)));\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nconst createSnapshot = (ds, sm) => new Snapshot(ds, sm);\n\nconst emptySnapshot = createSnapshot(createDeleteSet(), new Map());\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nconst snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store));\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nconst isVisible = (item, snapshot) => snapshot === undefined\n  ? !item.deleted\n  : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id);\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nconst splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create);\n  const store = transaction.doc.store;\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n    });\n    iterateDeletedStructs(transaction, snapshot.ds, item => {});\n    meta.add(snapshot);\n  }\n};\n\n/**\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nconst createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('originDoc must not be garbage collected')\n  }\n  const { sv, ds } = snapshot;\n\n  const encoder = new UpdateEncoderV2();\n  originDoc.transact(transaction => {\n    let size = 0;\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++;\n      }\n    });\n    encoding.writeVarUint(encoder.restEncoder, size);\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n      const structs = originDoc.store.clients.get(client) || [];\n      const lastStructIndex = findIndexSS(structs, clock - 1);\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1);\n      encoder.writeClient(client);\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0);\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0);\n      }\n    }\n    writeDeleteSet(encoder, ds);\n  });\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot');\n  return newDoc\n};\n\nclass StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map();\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null;\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null;\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nconst getStateVector = store => {\n  const sm = new Map();\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1];\n    sm.set(client, struct.id.clock + struct.length);\n  });\n  return sm\n};\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nconst getState = (store, client) => {\n  const structs = store.clients.get(client);\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1];\n  return lastStruct.id.clock + lastStruct.length\n};\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nconst addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client);\n  if (structs === undefined) {\n    structs = [];\n    store.clients.set(struct.id.client, structs);\n  } else {\n    const lastStruct = structs[structs.length - 1];\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct);\n};\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nconst findIndexSS = (structs, clock) => {\n  let left = 0;\n  let right = structs.length - 1;\n  let mid = structs[right];\n  let midclock = mid.id.clock;\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right); // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex];\n    midclock = mid.id.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n    midindex = math.floor((left + right) / 2);\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nconst find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  return structs[findIndexSS(structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nconst getItem = /** @type {function(StructStore,ID):Item} */ (find);\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nconst findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock);\n  const struct = structs[index];\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n    return index + 1\n  }\n  return index\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client));\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  const index = findIndexSS(structs, id.clock);\n  const struct = structs[index];\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1));\n  }\n  return struct\n};\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nconst replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client));\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct;\n};\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len;\n  let index = findIndexCleanStart(transaction, structs, clockStart);\n  let struct;\n  do {\n    struct = structs[index++];\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd);\n    }\n    f(struct);\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n};\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nclass Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet();\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store);\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map();\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent<any>>,Set<String|null>>}\n     */\n    this.changed = new Map();\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>}\n     */\n    this.changedParentTypes = new Map();\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = [];\n    /**\n     * @type {any}\n     */\n    this.origin = origin;\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map();\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local;\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set();\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nconst writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet);\n  writeStructsFromTransaction(encoder, transaction);\n  writeDeleteSet(encoder, transaction.deleteSet);\n  return true\n};\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */\nconst addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item;\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub);\n  }\n};\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n */\nconst tryToMergeWithLeft = (structs, pos) => {\n  const left = structs[pos - 1];\n  const right = structs[pos];\n  if (left.deleted === right.deleted && left.constructor === right.constructor) {\n    if (left.mergeWith(right)) {\n      structs.splice(pos, 1);\n      if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n        /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left));\n      }\n    }\n  }\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len;\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si];\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false);\n        }\n      }\n    }\n  }\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1));\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[--si]\n      ) {\n        tryToMergeWithLeft(structs, si);\n      }\n    }\n  });\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter);\n  tryMergeDeleteSet(ds, store);\n};\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i];\n    const doc = transaction.doc;\n    const store = doc.store;\n    const ds = transaction.deleteSet;\n    const mergeStructs = transaction._mergeStructs;\n    try {\n      sortAndMergeDeleteSet(ds);\n      transaction.afterState = getStateVector(transaction.doc.store);\n      doc._transaction = null;\n      doc.emit('beforeObserverCalls', [transaction, doc]);\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = [];\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs);\n          }\n        })\n      );\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) =>\n          fs.push(() => {\n            // We need to think about the possibility that the user transforms the\n            // Y.Doc in the event.\n            if (type._item === null || !type._item.deleted) {\n              events = events\n                .filter(event =>\n                  event.target._item === null || !event.target._item.deleted\n                );\n              events\n                .forEach(event => {\n                  event.currentTarget = type;\n                });\n              // sort events by path length so that top-level events are fired first.\n              events\n                .sort((event1, event2) => event1.path.length - event2.path.length);\n              // We don't need to check for events.length\n              // because we know it has at least one element\n              callEventHandlerListeners(type._dEH, events, transaction);\n            }\n          })\n        );\n        fs.push(() => doc.emit('afterTransaction', [transaction, doc]));\n      });\n      callAll(fs, []);\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter);\n      }\n      tryMergeDeleteSet(ds, store);\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0;\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1);\n          for (let i = structs.length - 1; i >= firstChangePos; i--) {\n            tryToMergeWithLeft(structs, i);\n          }\n        }\n      });\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = 0; i < mergeStructs.length; i++) {\n        const { client, clock } = mergeStructs[i].id;\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n        const replacedStructPos = findIndexSS(structs, clock);\n        if (replacedStructPos + 1 < structs.length) {\n          tryToMergeWithLeft(structs, replacedStructPos + 1);\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLeft(structs, replacedStructPos);\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.');\n        doc.clientID = generateNewClientId();\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc]);\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction;\n      if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n        subdocsAdded.forEach(subdoc => {\n          subdoc.clientID = doc.clientID;\n          if (subdoc.collectionid == null) {\n            subdoc.collectionid = doc.collectionid;\n          }\n          doc.subdocs.add(subdoc);\n        });\n        subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc));\n        doc.emit('subdocs', [{ loaded: subdocsLoaded, added: subdocsAdded, removed: subdocsRemoved }, doc, transaction]);\n        subdocsRemoved.forEach(subdoc => subdoc.destroy());\n      }\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = [];\n        doc.emit('afterAllTransactions', [doc, transactionCleanups]);\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1);\n      }\n    }\n  }\n};\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @param {Doc} doc\n * @param {function(Transaction):void} f\n * @param {any} [origin=true]\n *\n * @function\n */\nconst transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups;\n  let initialCall = false;\n  if (doc._transaction === null) {\n    initialCall = true;\n    doc._transaction = new Transaction(doc, origin, local);\n    transactionCleanups.push(doc._transaction);\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc]);\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc]);\n  }\n  try {\n    f(doc._transaction);\n  } finally {\n    if (initialCall && transactionCleanups[0] === doc._transaction) {\n      // The first transaction ended, now process observer calls.\n      // Observer call may create new transactions for which we need to call the observers and do cleanup.\n      // We don't want to nest these calls, so we execute these calls one after\n      // another.\n      // Also we need to ensure that all cleanups are called, even if the\n      // observes throw errors.\n      // This file is full of hacky try {} finally {} blocks to ensure that an\n      // event can throw errors and also that the cleanup is called.\n      cleanupTransactions(transactionCleanups, 0);\n    }\n  }\n};\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions;\n    this.deletions = deletions;\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map();\n  }\n}\n/**\n * @param {Transaction} tr\n * @param {UndoManager} um\n * @param {StackItem} stackItem\n */\nconst clearUndoManagerStackItem = (tr, um, stackItem) => {\n  iterateDeletedStructs(tr, stackItem.deletions, item => {\n    if (item instanceof Item && um.scope.some(type => isParentOf(type, item))) {\n      keepItem(item, false);\n    }\n  });\n};\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null;\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null;\n  const doc = undoManager.doc;\n  const scope = undoManager.scope;\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store;\n      const stackItem = /** @type {StackItem} */ (stack.pop());\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set();\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = [];\n      let performedChange = false;\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id);\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff));\n            }\n            struct = item;\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct);\n          }\n        }\n      });\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct);\n        }\n      });\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges) !== null || performedChange;\n      });\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i];\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction);\n          performedChange = true;\n        }\n      }\n      result = performedChange ? stackItem : null;\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0;\n      }\n    });\n    _tr = transaction;\n  }, undoManager);\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes;\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager]);\n  }\n  return result\n};\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Transaction):boolean} [UndoManagerOptions.captureTransaction] Do not capture changes of a Transaction if result false.\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter what an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n * @property {boolean} [ignoreRemoteMapChanges] Experimental. By default, the UndoManager will never overwrite remote changes. Enable this property to enable overwriting remote changes on key-value changes (Y.Map, properties on Y.Xml, etc..).\n * @property {Doc} [doc] The document that this UndoManager operates on. Only needed if typeScope is empty.\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'|'stack-cleared'|'stack-item-updated'>}\n */\nclass UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, {\n    captureTimeout = 500,\n    captureTransaction = tr => true,\n    deleteFilter = () => true,\n    trackedOrigins = new Set([null]),\n    ignoreRemoteMapChanges = false,\n    doc = /** @type {Doc} */ (array.isArray(typeScope) ? typeScope[0].doc : typeScope.doc)\n  } = {}) {\n    super();\n    /**\n     * @type {Array<AbstractType<any>>}\n     */\n    this.scope = [];\n    this.addToScope(typeScope);\n    this.deleteFilter = deleteFilter;\n    trackedOrigins.add(this);\n    this.trackedOrigins = trackedOrigins;\n    this.captureTransaction = captureTransaction;\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = [];\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = [];\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false;\n    this.redoing = false;\n    this.doc = doc;\n    this.lastChange = 0;\n    this.ignoreRemoteMapChanges = ignoreRemoteMapChanges;\n    this.captureTimeout = captureTimeout;\n    /**\n     * @param {Transaction} transaction\n     */\n    this.afterTransactionHandler = transaction => {\n      // Only track certain transactions\n      if (\n        !this.captureTransaction(transaction) ||\n        !this.scope.some(type => transaction.changedParentTypes.has(type)) ||\n        (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))\n      ) {\n        return\n      }\n      const undoing = this.undoing;\n      const redoing = this.redoing;\n      const stack = undoing ? this.redoStack : this.undoStack;\n      if (undoing) {\n        this.stopCapturing(); // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.clear(false, true);\n      }\n      const insertions = new DeleteSet();\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0;\n        const len = endClock - startClock;\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len);\n        }\n      });\n      const now = time.getUnixTime();\n      let didAdd = false;\n      if (this.lastChange > 0 && now - this.lastChange < this.captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1];\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet]);\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions]);\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions));\n        didAdd = true;\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now;\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true);\n        }\n      });\n      const changeEvent = [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this];\n      if (didAdd) {\n        this.emit('stack-item-added', changeEvent);\n      } else {\n        this.emit('stack-item-updated', changeEvent);\n      }\n    };\n    this.doc.on('afterTransaction', this.afterTransactionHandler);\n    this.doc.on('destroy', () => {\n      this.destroy();\n    });\n  }\n\n  /**\n   * @param {Array<AbstractType<any>> | AbstractType<any>} ytypes\n   */\n  addToScope (ytypes) {\n    ytypes = array.isArray(ytypes) ? ytypes : [ytypes];\n    ytypes.forEach(ytype => {\n      if (this.scope.every(yt => yt !== ytype)) {\n        this.scope.push(ytype);\n      }\n    });\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin (origin) {\n    this.trackedOrigins.add(origin);\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin (origin) {\n    this.trackedOrigins.delete(origin);\n  }\n\n  clear (clearUndoStack = true, clearRedoStack = true) {\n    if ((clearUndoStack && this.canUndo()) || (clearRedoStack && this.canRedo())) {\n      this.doc.transact(tr => {\n        if (clearUndoStack) {\n          this.undoStack.forEach(item => clearUndoManagerStackItem(tr, this, item));\n          this.undoStack = [];\n        }\n        if (clearRedoStack) {\n          this.redoStack.forEach(item => clearUndoManagerStackItem(tr, this, item));\n          this.redoStack = [];\n        }\n        this.emit('stack-cleared', [{ undoStackCleared: clearUndoStack, redoStackCleared: clearRedoStack }]);\n      });\n    }\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0;\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.undoStack, 'undo');\n    } finally {\n      this.undoing = false;\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.redoStack, 'redo');\n    } finally {\n      this.redoing = false;\n    }\n    return res\n  }\n\n  /**\n   * Are undo steps available?\n   *\n   * @return {boolean} `true` if undo is possible\n   */\n  canUndo () {\n    return this.undoStack.length > 0\n  }\n\n  /**\n   * Are redo steps available?\n   *\n   * @return {boolean} `true` if redo is possible\n   */\n  canRedo () {\n    return this.redoStack.length > 0\n  }\n\n  destroy () {\n    this.trackedOrigins.delete(this);\n    this.doc.off('afterTransaction', this.afterTransactionHandler);\n    super.destroy();\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder);\n        yield new Skip(createID(client, clock), len);\n        clock += len;\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        );\n        yield struct;\n        clock += struct.length;\n      } else {\n        const len = decoder.readLen();\n        yield new GC(createID(client, clock), len);\n        clock += len;\n      }\n    }\n  }\n}\n\nclass LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder);\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null;\n    this.done = false;\n    this.filterSkips = filterSkips;\n    this.next();\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null;\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nconst logUpdate = update => logUpdateV2(update, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = [];\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr);\n  }\n  logging.print('Structs: ', structs);\n  const ds = readDeleteSet(updateDecoder);\n  logging.print('DeleteSet: ', ds);\n};\n\n/**\n * @param {Uint8Array} update\n *\n */\nconst decodeUpdate = (update) => decodeUpdateV2(update, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst decodeUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = [];\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr);\n  }\n  return {\n    structs,\n    ds: readDeleteSet(updateDecoder)\n  }\n};\n\nclass LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0;\n    this.startClock = 0;\n    this.written = 0;\n    this.encoder = encoder;\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = [];\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nconst mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let size = 0;\n    let currClient = curr.id.client;\n    let stopCounting = curr.id.clock !== 0; // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length;\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++;\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient);\n          encoding.writeVarUint(encoder.restEncoder, currClock);\n        }\n        currClient = curr.id.client;\n        currClock = 0;\n        stopCounting = curr.id.clock !== 0;\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true;\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length;\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++;\n      encoding.writeVarUint(encoder.restEncoder, currClient);\n      encoding.writeVarUint(encoder.restEncoder, currClock);\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder();\n    encoding.writeVarUint(enc, size);\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder);\n    encoder.restEncoder = enc;\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0);\n    return encoder.toUint8Array()\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map();\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let currClient = curr.id.client;\n    let currClock = curr.id.clock;\n    // write the beginning to `from`\n    from.set(currClient, currClock);\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock);\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock);\n        // update currClient\n        currClient = curr.id.client;\n      }\n      currClock = curr.id.clock + curr.length;\n    }\n    // write the end to `to`\n    to.set(currClient, currClock);\n  }\n  return { from, to }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1);\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id;\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id;\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left);\n    const { client, clock } = leftItem.id;\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n};\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nconst mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)));\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true));\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null;\n\n  const updateEncoder = new YEncoder();\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder);\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null);\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock;\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor\n              ? 0\n              : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    );\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0];\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client;\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr);\n      let iterated = false;\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next();\n        iterated = true;\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n        currWrite = { struct: curr, offset: 0 };\n        currDecoder.next();\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock;\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length;\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff);\n            currWrite = { struct, offset: 0 };\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock;\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff;\n            } else {\n              curr = sliceStruct(curr, diff);\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            currWrite = { struct: curr, offset: 0 };\n            currDecoder.next();\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 };\n      currDecoder.next();\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n      currWrite = { struct: next, offset: 0 };\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n    currWrite = null;\n  }\n  finishLazyStructWriting(lazyStructEncoder);\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder));\n  const ds = mergeDeleteSets(dss);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nconst diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv);\n  const encoder = new YEncoder();\n  const lazyStructWriter = new LazyStructWriter(encoder);\n  const decoder = new YDecoder(decoding.createDecoder(update));\n  const reader = new LazyStructReader(decoder, false);\n  while (reader.curr) {\n    const curr = reader.curr;\n    const currClient = curr.id.client;\n    const svClock = state.get(currClient) || 0;\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next();\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0));\n      reader.next();\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0);\n        reader.next();\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next();\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter);\n  // write ds\n  const ds = readDeleteSet(decoder);\n  writeDeleteSet(encoder, ds);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nconst diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) });\n    lazyWriter.encoder.restEncoder = encoding.createEncoder();\n    lazyWriter.written = 0;\n  }\n};\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter);\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client;\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client);\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset);\n  }\n  struct.write(lazyWriter.encoder, offset);\n  lazyWriter.written++;\n};\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter);\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder;\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length);\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i];\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written);\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder);\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nconst convertUpdateFormat = (update, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  const updateEncoder = new YEncoder();\n  const lazyWriter = new LazyStructWriter(updateEncoder);\n\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, curr, 0);\n  }\n  finishLazyStructWriting(lazyWriter);\n  const ds = readDeleteSet(updateDecoder);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, UpdateDecoderV1, UpdateEncoderV2);\n\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, UpdateDecoderV2, UpdateEncoderV1);\n\n/**\n * @template {AbstractType<any>} T\n * YEvent describes the changes on a YType.\n */\nclass YEvent {\n  /**\n   * @param {T} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {T}\n     */\n    this.target = target;\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target;\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction;\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null;\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null;\n    /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null;\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    // @ts-ignore _item is defined because target is integrated\n    return getPathTo(this.currentTarget, this.target)\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      const keys = new Map();\n      const target = this.target;\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key));\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action;\n          let oldValue;\n          if (this.adds(item)) {\n            let prev = item.left;\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left;\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                action = 'add';\n                oldValue = undefined;\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete';\n              oldValue = array.last(/** @type {Item} */ item.content.getContent());\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue });\n        }\n      });\n      this._keys = keys;\n    }\n    return this._keys\n  }\n\n  /**\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes;\n    if (changes === null) {\n      const target = this.target;\n      const added = set.create();\n      const deleted = set.create();\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = [];\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      };\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null;\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp);\n          }\n        };\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp();\n                lastOp = { delete: 0 };\n              }\n              lastOp.delete += item.length;\n              deleted.add(item);\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp();\n                lastOp = { insert: [] };\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent());\n              added.add(item);\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp();\n                lastOp = { retain: 0 };\n              }\n              lastOp.retain += item.length;\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp();\n        }\n      }\n      this._changes = changes;\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = [];\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub);\n    } else {\n      // parent is array-ish\n      let i = 0;\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start;\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++;\n        }\n        c = c.right;\n      }\n      path.unshift(i);\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent);\n  }\n  return path\n};\n\nconst maxSearchMarker = 80;\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0;\n\nclass ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true;\n    this.p = p;\n    this.index = index;\n    this.timestamp = globalSearchMarkerTimestamp++;\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++; };\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false;\n  marker.p = p;\n  p.marker = true;\n  marker.index = index;\n  marker.timestamp = globalSearchMarkerTimestamp++;\n};\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b);\n    overwriteMarker(marker, p, index);\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index);\n    searchMarker.push(pm);\n    return pm\n  }\n};\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nconst findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b);\n  let p = yarray._start;\n  let pindex = 0;\n  if (marker !== null) {\n    p = marker.p;\n    pindex = marker.index;\n    refreshMarkerTimestamp(marker); // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length;\n    }\n    p = p.right;\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex);\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n};\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nconst updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i];\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p;\n      p.marker = false;\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left;\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length;\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1);\n        continue\n      }\n      m.p = p;\n      p.marker = true;\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len);\n    }\n  }\n};\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nconst getTypeChildren = t => {\n  let s = t._start;\n  const arr = [];\n  while (s) {\n    arr.push(s);\n    s = s.right;\n  }\n  return arr\n};\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nconst callTypeObservers = (type, transaction, event) => {\n  const changedType = type;\n  const changedParentTypes = transaction.changedParentTypes;\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event);\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent);\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction);\n};\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nclass AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null;\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map();\n    /**\n     * @type {Item|null}\n     */\n    this._start = null;\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null;\n    this._length = 0;\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler();\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent<any>>,Transaction>}\n     */\n    this._dEH = createEventHandler();\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null;\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y;\n    this._item = item;\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0;\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start;\n  }\n  if (end < 0) {\n    end = type._length + end;\n  }\n  let len = end - start;\n  const cs = [];\n  let n = type._start;\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      if (c.length <= start) {\n        start -= c.length;\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i]);\n          len--;\n        }\n        start = 0;\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArray = type => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArraySnapshot = (type, snapshot) => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nconst typeListForEach = (type, f) => {\n  let index = 0;\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type);\n      }\n    }\n    n = n.right;\n  }\n};\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nconst typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = [];\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type));\n  });\n  return result\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nconst typeListCreateIterator = type => {\n  let n = type._start;\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null;\n  let currentContentIndex = 0;\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right;\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent();\n        currentContentIndex = 0;\n        n = n.right; // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++];\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null;\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nconst typeListGet = (type, index) => {\n  const marker = findMarker(type, index);\n  let n = type._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length;\n    }\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const store = doc.store;\n  const right = referenceItem === null ? parent._start : referenceItem.right;\n  /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */\n  let jsonContent = [];\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent));\n      left.integrate(transaction, 0);\n      jsonContent = [];\n    }\n  };\n  content.forEach(c => {\n    if (c === null) {\n      jsonContent.push(c);\n    } else {\n      switch (c.constructor) {\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n          jsonContent.push(c);\n          break\n        default:\n          packJsonContent();\n          switch (c.constructor) {\n            case Uint8Array:\n            case ArrayBuffer:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))));\n              left.integrate(transaction, 0);\n              break\n            case Doc:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)));\n              left.integrate(transaction, 0);\n              break\n            default:\n              if (c instanceof AbstractType) {\n                left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c));\n                left.integrate(transaction, 0);\n              } else {\n                throw new Error('Unexpected content type in insert operation')\n              }\n          }\n      }\n    }\n  });\n  packJsonContent();\n};\n\nconst lengthExceeded = error.create('Length exceeded!');\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length);\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev; // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0;\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n        }\n        break\n      }\n      index -= n.length;\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length);\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n};\n\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the serach marker.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListPushGenerics = (transaction, parent, content) => {\n  // Use the marker with the highest index and iterate to the right.\n  const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker) => currMarker.index > maxMarker.index ? currMarker : maxMarker, { index: 0, p: parent._start });\n  let n = marker.p;\n  if (n) {\n    while (n.right) {\n      n = n.right;\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nconst typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index;\n  const startLength = length;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n      }\n      index -= n.length;\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length));\n      }\n      n.delete(transaction);\n      length -= n.length;\n    }\n    n = n.right;\n  }\n  if (length > 0) {\n    throw lengthExceeded\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nconst typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key);\n  if (c !== undefined) {\n    c.delete(transaction);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nconst typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  let content;\n  if (value == null) {\n    content = new ContentAny([value]);\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value]);\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value));\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value));\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value);\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0);\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGet = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nconst typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {};\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1];\n    }\n  });\n  return res\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst typeMapHas = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null;\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left;\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n};\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nconst createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted);\n\n/**\n * @module YArray\n */\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n * @extends YEvent<YArray<T>>\n */\nclass YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction);\n    this._transaction = transaction;\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nclass YArray extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = [];\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = [];\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    const a = new YArray();\n    a.push(items);\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    const arr = new YArray();\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? el.clone() : el\n    ));\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction));\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   *\n   * @todo Use the following implementation in all types.\n   */\n  push (content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListPushGenerics(transaction, this, content);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).push(...content);\n    }\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length);\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function on once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f);\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nconst readYArray = decoder => new YArray();\n\n/**\n * @template T\n * @extends YEvent<YMap<T>>\n * Event that describes the changes on a YMap.\n */\nclass YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction);\n    this.keysChanged = subs;\n  }\n}\n\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<MapType>}\n */\nclass YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super();\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null;\n\n    if (entries === undefined) {\n      this._prelimContent = new Map();\n    } else {\n      this._prelimContent = new Map(entries);\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value);\n    });\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  clone () {\n    const map = new YMap();\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? value.clone() : value);\n    });\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs));\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {};\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1];\n        map[key] = v instanceof AbstractType ? v.toJSON() : v;\n      }\n    });\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<any>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => [v[0], v[1].content.getContent()[v[1].length - 1]])\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this);\n      }\n    });\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key);\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {MapType} value The value of the element to add\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, value);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value);\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (value, key, map) {\n          typeMapDelete(transaction, map, key);\n        });\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear();\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nconst readYMap = decoder => new YMap();\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b));\n\nclass ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left;\n    this.right = right;\n    this.index = index;\n    this.currentAttributes = currentAttributes;\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase();\n    }\n    switch (this.right.content.constructor) {\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content));\n        }\n        break\n      default:\n        if (!this.right.deleted) {\n          this.index += this.right.length;\n        }\n        break\n    }\n    this.left = this.right;\n    this.right = this.right.right;\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content));\n        }\n        break\n      default:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count));\n          }\n          pos.index += pos.right.length;\n          count -= pos.right.length;\n        }\n        break\n    }\n    pos.left = pos.right;\n    pos.right = pos.right.right;\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map();\n  const marker = findMarker(parent, index);\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes);\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes);\n    return findNextPosition(transaction, pos, index)\n  }\n};\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key);\n    }\n    currPos.forward();\n  }\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left;\n    const right = currPos.right;\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n    nextFormat.integrate(transaction, 0);\n    currPos.right = nextFormat;\n    currPos.forward();\n  });\n};\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format;\n  if (value === null) {\n    currentAttributes.delete(key);\n  } else {\n    currentAttributes.set(key, value);\n  }\n};\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) ; else {\n      break\n    }\n    currPos.forward();\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const negatedAttributes = new Map();\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key];\n    const currentVal = currPos.currentAttributes.get(key) || null;\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal);\n      const { left, right } = currPos;\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n      currPos.right.integrate(transaction, 0);\n      currPos.forward();\n    }\n  }\n  return negatedAttributes\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null;\n    }\n  });\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : (text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text));\n  let { left, right, index } = currPos;\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength());\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content);\n  right.integrate(transaction, 0);\n  currPos.right = right;\n  currPos.index = index;\n  currPos.forward();\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n  // eslint-disable-next-line no-labels\n  iterationLoop: while (\n    currPos.right !== null &&\n    (length > 0 ||\n      (\n        negatedAttributes.size > 0 &&\n        (currPos.right.deleted || currPos.right.content.constructor === ContentFormat)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content);\n          const attr = attributes[key];\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key);\n            } else {\n              if (length === 0) {\n                // no need to further extend negatedAttributes\n                // eslint-disable-next-line no-labels\n                break iterationLoop\n              }\n              negatedAttributes.set(key, value);\n            }\n            currPos.right.delete(transaction);\n          } else {\n            currPos.currentAttributes.set(key, value);\n          }\n          break\n        }\n        default:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          break\n      }\n    }\n    currPos.forward();\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = '';\n    for (; length > 0; length--) {\n      newlines += '\\n';\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines));\n    currPos.right.integrate(transaction, 0);\n    currPos.forward();\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes) => {\n  let end = curr;\n  const endAttributes = map.copy(currAttributes);\n  while (end && (!end.countable || end.deleted)) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      updateCurrentAttributes(endAttributes, /** @type {ContentFormat} */ (end.content));\n    }\n    end = end.right;\n  }\n  let cleanups = 0;\n  let reachedEndOfCurr = false;\n  while (start !== end) {\n    if (curr === start) {\n      reachedEndOfCurr = true;\n    }\n    if (!start.deleted) {\n      const content = start.content;\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content);\n          if ((endAttributes.get(key) || null) !== value || (startAttributes.get(key) || null) === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction);\n            cleanups++;\n            if (!reachedEndOfCurr && (currAttributes.get(key) || null) === value && (startAttributes.get(key) || null) !== value) {\n              currAttributes.delete(key);\n            }\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right);\n  }\n  return cleanups\n};\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || !item.right.countable)) {\n    item = item.right;\n  }\n  const attrs = new Set();\n  // iterate back until a content item is found\n  while (item && (item.deleted || !item.countable)) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key;\n      if (attrs.has(key)) {\n        item.delete(transaction);\n      } else {\n        attrs.add(key);\n      }\n    }\n    item = item.left;\n  }\n};\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nconst cleanupYTextFormatting = type => {\n  let res = 0;\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start);\n    let end = type._start;\n    let startAttributes = map.create();\n    const currentAttributes = map.copy(startAttributes);\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content));\n            break\n          default:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes);\n            startAttributes = map.copy(currentAttributes);\n            start = end;\n            break\n        }\n      }\n      end = end.right;\n    }\n  });\n  return res\n};\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length;\n  const startAttrs = map.copy(currPos.currentAttributes);\n  const start = currPos.right;\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentType:\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          currPos.right.delete(transaction);\n          break\n      }\n    }\n    currPos.forward();\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes);\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent);\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length);\n  }\n  return currPos\n};\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @extends YEvent<YText>\n * Event that describes the changes on a YText type.\n */\nclass YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.keysChanged.add(sub);\n      }\n    });\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      };\n      this._changes = changes;\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc);\n      /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = [];\n      transact(y, transaction => {\n        const currentAttributes = new Map(); // saves all current attributes for insert\n        const oldAttributes = new Map();\n        let item = this.target._start;\n        /**\n         * @type {string?}\n         */\n        let action = null;\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}; // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = '';\n        let retain = 0;\n        let deleteLen = 0;\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op;\n            switch (action) {\n              case 'delete':\n                op = { delete: deleteLen };\n                deleteLen = 0;\n                break\n              case 'insert':\n                op = { insert };\n                if (currentAttributes.size > 0) {\n                  op.attributes = {};\n                  currentAttributes.forEach((value, key) => {\n                    if (value !== null) {\n                      op.attributes[key] = value;\n                    }\n                  });\n                }\n                insert = '';\n                break\n              case 'retain':\n                op = { retain };\n                if (Object.keys(attributes).length > 0) {\n                  op.attributes = {};\n                  for (const key in attributes) {\n                    op.attributes[key] = attributes[key];\n                  }\n                }\n                retain = 0;\n                break\n            }\n            delta.push(op);\n            action = null;\n          }\n        };\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentType:\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp();\n                  action = 'insert';\n                  insert = item.content.getContent()[0];\n                  addOp();\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += 1;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += 1;\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp();\n                    action = 'insert';\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str;\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += item.length;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += item.length;\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content);\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null;\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key];\n                    } else {\n                      attributes[key] = value;\n                    }\n                  } else if (value !== null) {\n                    item.delete(transaction);\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value);\n                const curVal = currentAttributes.get(key) || null;\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp();\n                  }\n                  attributes[key] = curVal;\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value);\n                const attr = attributes[key];\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (value === null) {\n                      delete attributes[key];\n                    } else {\n                      attributes[key] = value;\n                    }\n                  } else if (attr !== null) { // this will be cleaned up automatically by the contextless cleanup function\n                    item.delete(transaction);\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp();\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content));\n              }\n              break\n            }\n          }\n          item = item.right;\n        }\n        addOp();\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1];\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop();\n          } else {\n            break\n          }\n        }\n      });\n      this._delta = delta;\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nclass YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super();\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : [];\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = [];\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f());\n    } catch (e) {\n      console.error(e);\n    }\n    this._pending = null;\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    const event = new YTextEvent(this, transaction, parentSubs);\n    const doc = transaction.doc;\n    callTypeObservers(this, transaction, event);\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local) {\n      // check if another formatting item was inserted\n      let foundFormattingItem = false;\n      for (const [client, afterClock] of transaction.afterState.entries()) {\n        const clock = transaction.beforeState.get(client) || 0;\n        if (afterClock === clock) {\n          continue\n        }\n        iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n          if (!item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat) {\n            foundFormattingItem = true;\n          }\n        });\n        if (foundFormattingItem) {\n          break\n        }\n      }\n      if (!foundFormattingItem) {\n        iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n          if (item instanceof GC || foundFormattingItem) {\n            return\n          }\n          if (item.parent === this && item.content.constructor === ContentFormat) {\n            foundFormattingItem = true;\n          }\n        });\n      }\n      transact(doc, (t) => {\n        if (foundFormattingItem) {\n          // If a formatting item was inserted, we simply clean the whole type.\n          // We need to compute currentAttributes for the current position anyway.\n          cleanupYTextFormatting(this);\n        } else {\n          // If no formatting attribute was inserted, we can make due with contextless\n          // formatting cleanups.\n          // Contextless: it is not necessary to compute currentAttributes for the affected position.\n          iterateDeletedStructs(t, t.deleteSet, item => {\n            if (item instanceof GC) {\n              return\n            }\n            if (item.parent === this) {\n              cleanupContextlessFormattingGap(t, item);\n            }\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = '';\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start;\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str;\n      }\n      n = n.right;\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  [opts]\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map());\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i];\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert;\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {});\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {});\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete);\n          }\n        }\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta));\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = [];\n    const currentAttributes = new Map();\n    const doc = /** @type {Doc} */ (this.doc);\n    let str = '';\n    let n = this._start;\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {};\n        let addAttributes = false;\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true;\n          attributes[key] = value;\n        });\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str };\n        if (addAttributes) {\n          op.attributes = attributes;\n        }\n        ops.push(op);\n        str = '';\n      }\n    }\n    // snapshots are merged again after the transaction, so we need to keep the\n    // transalive until we are done\n    transact(doc, transaction => {\n      if (snapshot) {\n        splitSnapshotAffectedStructs(transaction, snapshot);\n      }\n      if (prevSnapshot) {\n        splitSnapshotAffectedStructs(transaction, prevSnapshot);\n      }\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange');\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'removed') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' });\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'added') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' });\n                }\n              } else if (cur !== undefined) {\n                packStr();\n                currentAttributes.delete('ychange');\n              }\n              str += /** @type {ContentString} */ (n.content).str;\n              break\n            }\n            case ContentType:\n            case ContentEmbed: {\n              packStr();\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: n.content.getContent()[0]\n              };\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({});\n                op.attributes = attrs;\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value;\n                });\n              }\n              ops.push(op);\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr();\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content));\n              }\n              break\n          }\n        }\n        n = n.right;\n      }\n      packStr();\n    }, splitSnapshotAffectedStructs);\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        if (!attributes) {\n          attributes = {};\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v; });\n        }\n        insertText(transaction, this, pos, text, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes));\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        insertText(transaction, this, pos, embed, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes));\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index), length);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length));\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes));\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName));\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue));\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nconst readYText = decoder => new YText();\n\n/**\n * @module YXml\n */\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nclass YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f;\n    this._root = root;\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start);\n    this._firstCall = true;\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode;\n    let type = n && n.content && /** @type {any} */ (n.content).type;\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type;\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start;\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right;\n              break\n            } else if (n.parent === this._root) {\n              n = null;\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item;\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false;\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n;\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nclass YXmlFragment extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = [];\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first;\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment();\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query);\n    const next = iterator.next();\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    return Array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction));\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment();\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this);\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null);\n    });\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref;\n        typeListInsertGenericsAfter(transaction, this, refItem, content);\n      });\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent);\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1;\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length);\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content);\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Executes a provided function on once on overy child element.\n   *\n   * @param {function(YXmlElement|YXmlText,number, typeof this):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f);\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nconst readYXmlFragment = decoder => new YXmlFragment();\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n */\nclass YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super();\n    this.nodeName = nodeName;\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map();\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value);\n    });\n    this._prelimAttrs = null;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement}\n   */\n  clone () {\n    const el = new YXmlElement(this.nodeName);\n    const attrs = this.getAttributes();\n    for (const key in attrs) {\n      el.setAttribute(key, attrs[key]);\n    }\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes();\n    const stringBuilder = [];\n    const keys = [];\n    for (const key in attrs) {\n      keys.push(key);\n    }\n    keys.sort();\n    const keysLen = keys.length;\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i];\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"');\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase();\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : '';\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName);\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {String} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue);\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {String} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {String} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName);\n    const attrs = this.getAttributes();\n    for (const key in attrs) {\n      dom.setAttribute(key, attrs[key]);\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding));\n    });\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID);\n    encoder.writeKey(this.nodeName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nconst readYXmlElement = decoder => new YXmlElement(decoder.readKey());\n\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nclass YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.attributesChanged.add(sub);\n      }\n    });\n  }\n}\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nclass YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super();\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName);\n    this.forEach((value, key) => {\n      el.set(key, value);\n    });\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName];\n    let dom;\n    if (hook !== undefined) {\n      dom = hook.createDom(this);\n    } else {\n      dom = document.createElement(this.hookName);\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName);\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID);\n    encoder.writeKey(this.hookName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nconst readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey());\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nclass YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString());\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = [];\n      for (const nodeName in delta.attributes) {\n        const attrs = [];\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] });\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1);\n        nestedNodes.push({ nodeName, attrs });\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1);\n      // now convert to dom string\n      let str = '';\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i];\n        str += `<${node.nodeName}`;\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j];\n          str += ` ${attr.key}=\"${attr.value}\"`;\n        }\n        str += '>';\n      }\n      str += delta.insert;\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`;\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nconst readYXmlText = decoder => new YXmlText();\n\nclass AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id;\n    this.length = length;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n\nconst structGCRefNumber = 0;\n\n/**\n * @private\n */\nclass GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.length -= offset;\n    }\n    addStruct(transaction.doc.store, this);\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber);\n    encoder.writeLen(this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\nclass ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nconst readContentBinary = decoder => new ContentBinary(decoder.readBuf());\n\nclass ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset);\n    this.len = offset;\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len);\n    item.markDeleted();\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nconst readContentDeleted = decoder => new ContentDeleted(decoder.readLen());\n\n/**\n * @param {string} guid\n * @param {Object<string, any>} opts\n */\nconst createDocFromOpts = (guid, opts) => new Doc({ guid, ...opts, shouldLoad: opts.shouldLoad || opts.autoLoad || false });\n\n/**\n * @private\n */\nclass ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.');\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * @type {any}\n     */\n    const opts = {};\n    this.opts = opts;\n    if (!doc.gc) {\n      opts.gc = false;\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true;\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta;\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts))\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item;\n    transaction.subdocsAdded.add(this.doc);\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc);\n    } else {\n      transaction.subdocsRemoved.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid);\n    encoder.writeAny(this.opts);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nconst readContentDoc = decoder => new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()));\n\n/**\n * @private\n */\nclass ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nconst readContentEmbed = decoder => new ContentEmbed(decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentFormat}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    /** @type {AbstractType<any>} */ (item.parent)._searchMarker = null;\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key);\n    encoder.writeJSON(this.value);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nconst readContentFormat = decoder => new ContentFormat(decoder.readKey(), decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c));\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nconst readContentJSON = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString();\n    if (c === 'undefined') {\n      cs.push(undefined);\n    } else {\n      cs.push(JSON.parse(c));\n    }\n  }\n  return new ContentJSON(cs)\n};\n\nclass ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeAny(c);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nconst readContentAny = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny());\n  }\n  return new ContentAny(cs)\n};\n\n/**\n * @private\n */\nclass ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset));\n    this.str = this.str.slice(0, offset);\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1);\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�';\n      // replace right as well\n      right.str = '�' + right.str.slice(1);\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset));\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nconst readContentString = decoder => new ContentString(decoder.readString());\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nconst typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n];\n\nconst YArrayRefID = 0;\nconst YMapRefID = 1;\nconst YTextRefID = 2;\nconst YXmlElementRefID = 3;\nconst YXmlFragmentRefID = 4;\nconst YXmlHookRefID = 5;\nconst YXmlTextRefID = 6;\n\n/**\n * @private\n */\nclass ContentType {\n  /**\n   * @param {AbstractType<any>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start;\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else {\n        // This will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item);\n      }\n      item = item.right;\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else {\n        // same as above\n        transaction._mergeStructs.push(item);\n      }\n    });\n    transaction.changed.delete(this.type);\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start;\n    while (item !== null) {\n      item.gc(store, true);\n      item = item.right;\n    }\n    this.type._start = null;\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true);\n        item = item.left;\n      }\n    });\n    this.type._map = new Map();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nconst readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder));\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nconst followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id;\n  let diff = 0;\n  let item;\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff);\n    }\n    item = getItem(store, nextID);\n    diff = nextID.clock - item.id.clock;\n    nextID = item.redone;\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n};\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nconst keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep;\n    item = /** @type {AbstractType<any>} */ (item.parent)._item;\n  }\n};\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nconst splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id;\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  );\n  if (leftItem.deleted) {\n    rightItem.markDeleted();\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true;\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff);\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem;\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem;\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem);\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem);\n  }\n  leftItem.length = diff;\n  return rightItem\n};\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {DeleteSet} itemsToDelete\n * @param {boolean} ignoreRemoteMapChanges\n *\n * @return {Item|null}\n *\n * @private\n */\nconst redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges) => {\n  const doc = transaction.doc;\n  const store = doc.store;\n  const ownClientID = doc.clientID;\n  const redone = item.redone;\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item;\n  /**\n   * @type {Item|null}\n   */\n  let left = null;\n  /**\n   * @type {Item|null}\n   */\n  let right;\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true) {\n    // try to undo parent if it will be undone anyway\n    if (parentItem.redone === null && (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges) === null)) {\n      return null\n    }\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone);\n    }\n  }\n  const parentType = parentItem === null ? /** @type {AbstractType<any>} */ (item.parent) : /** @type {ContentType} */ (parentItem.content).type;\n\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left;\n    right = item;\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left;\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone);\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace;\n        break\n      }\n      left = left.left;\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right;\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone);\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace;\n        break\n      }\n      right = right.right;\n    }\n  } else {\n    right = null;\n    if (item.right && !ignoreRemoteMapChanges) {\n      left = item;\n      // Iterate right while right is in itemsToDelete\n      // If it is intended to delete right while item is redone, we can expect that item should replace right.\n      while (left !== null && left.right !== null && isDeleted(itemsToDelete, left.right.id)) {\n        left = left.right;\n      }\n      // follow redone\n      // trace redone until parent matches\n      while (left !== null && left.redone !== null) {\n        left = getItemCleanStart(transaction, left.redone);\n      }\n      if (left && left.right !== null) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    } else {\n      left = parentType._map.get(item.parentSub) || null;\n    }\n  }\n  const nextClock = getState(store, ownClientID);\n  const nextId = createID(ownClientID, nextClock);\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentType,\n    item.parentSub,\n    item.content.copy()\n  );\n  item.redone = nextId;\n  keepItem(redoneItem, true);\n  redoneItem.integrate(transaction, 0);\n  return redoneItem\n};\n\n/**\n * Abstract class that represents any content.\n */\nclass Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength());\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin;\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left;\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right;\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin;\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent;\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub;\n    /**\n     * If this type's effect is redone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null;\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content;\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0;\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4;\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1;\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3;\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3;\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin);\n      this.origin = this.left.lastId;\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin);\n      this.rightOrigin = this.right.id;\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null;\n    }\n    // only set parent if this shouldn't be garbage collected\n    if (!this.parent) {\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent;\n        this.parentSub = this.left.parentSub;\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent;\n        this.parentSub = this.right.parentSub;\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent);\n      if (parentItem.constructor === GC) {\n        this.parent = null;\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type;\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1));\n      this.origin = this.left.lastId;\n      this.content = this.content.splice(offset);\n      this.length -= offset;\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left;\n\n        /**\n         * @type {Item|null}\n         */\n        let o;\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right;\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (o !== null && o.left !== null) {\n            o = o.left;\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start;\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set();\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set();\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o);\n          conflictingItems.add(o);\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o;\n              conflictingItems.clear();\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o;\n              conflictingItems.clear();\n            }\n          } else {\n            break\n          }\n          o = o.right;\n        }\n        this.left = left;\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right;\n        this.right = right;\n        this.left.right = this;\n      } else {\n        let r;\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (r !== null && r.left !== null) {\n            r = r.left;\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this;\n        }\n        this.right = r;\n      }\n      if (this.right !== null) {\n        this.right.left = this;\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this);\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction);\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length;\n      }\n      addStruct(transaction.doc.store, this);\n      this.content.integrate(transaction, this);\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub);\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction);\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0);\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left;\n    while (n !== null && n.deleted) {\n      n = n.left;\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker;\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this;\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length;\n            }\n          }\n        });\n      }\n      if (right.keep) {\n        this.keep = true;\n      }\n      this.right = right.right;\n      if (this.right !== null) {\n        this.right.left = this;\n      }\n      this.length += right.length;\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length;\n      }\n      this.markDeleted();\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length);\n      addChangedTypeToTransaction(transaction, parent, this.parentSub);\n      this.content.delete(transaction);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store);\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length));\n    } else {\n      this.content = new ContentDeleted(this.length);\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin;\n    const rightOrigin = this.rightOrigin;\n    const parentSub = this.parentSub;\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6); // parentSub is non-null\n    encoder.writeInfo(info);\n    if (origin !== null) {\n      encoder.writeLeftID(origin);\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin);\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      if (parent._item !== undefined) {\n        const parentItem = parent._item;\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent);\n          encoder.writeParentInfo(true); // write parentYKey\n          encoder.writeString(ykey);\n        } else {\n          encoder.writeParentInfo(false); // write parent id\n          encoder.writeLeftID(parentItem.id);\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true); // write parentYKey\n        encoder.writeString(parent);\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false); // write parent id\n        encoder.writeLeftID(parent);\n      } else {\n        error.unexpectedCase();\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub);\n      }\n    }\n    this.content.write(encoder, offset);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nconst readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder);\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nconst contentRefs = [\n  () => { error.unexpectedCase(); }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase(); } // 10 - Skip is not ItemContent\n];\n\nconst structSkipRefNumber = 10;\n\n/**\n * @private\n */\nclass Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber);\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\n/** eslint-env browser */\n\nconst glo = /** @type {any} */ (typeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof window !== 'undefined'\n    ? window\n    // @ts-ignore\n    : typeof global !== 'undefined' ? global : {});\n\nconst importIdentifier = '__ $YJS$ __';\n\nif (glo[importIdentifier] === true) {\n  /**\n   * Dear reader of this message. Please take this seriously.\n   *\n   * If you see this message, make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   *\n   * https://github.com/yjs/yjs/issues/438\n   */\n  console.error('Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438');\n}\nglo[importIdentifier] = true;\n\nexport { AbsolutePosition, AbstractConnector, AbstractStruct, AbstractType, YArray as Array, ContentAny, ContentBinary, ContentDeleted, ContentEmbed, ContentFormat, ContentJSON, ContentString, ContentType, Doc, GC, ID, Item, YMap as Map, PermanentUserData, RelativePosition, Snapshot, YText as Text, Transaction, UndoManager, UpdateEncoderV1, YXmlElement as XmlElement, YXmlFragment as XmlFragment, YXmlHook as XmlHook, YXmlText as XmlText, YArrayEvent, YEvent, YMapEvent, YTextEvent, YXmlEvent, applyUpdate, applyUpdateV2, cleanupYTextFormatting, compareIDs, compareRelativePositions, convertUpdateFormatV1ToV2, convertUpdateFormatV2ToV1, createAbsolutePositionFromRelativePosition, createDeleteSet, createDeleteSetFromStructStore, createDocFromSnapshot, createID, createRelativePositionFromJSON, createRelativePositionFromTypeIndex, createSnapshot, decodeRelativePosition, decodeSnapshot, decodeSnapshotV2, decodeStateVector, decodeUpdate, decodeUpdateV2, diffUpdate, diffUpdateV2, emptySnapshot, encodeRelativePosition, encodeSnapshot, encodeSnapshotV2, encodeStateAsUpdate, encodeStateAsUpdateV2, encodeStateVector, encodeStateVectorFromUpdate, encodeStateVectorFromUpdateV2, equalSnapshots, findIndexSS, findRootTypeKey, getItem, getState, getTypeChildren, isDeleted, isParentOf, iterateDeletedStructs, logType, logUpdate, logUpdateV2, mergeUpdates, mergeUpdatesV2, parseUpdateMeta, parseUpdateMetaV2, readUpdate, readUpdateV2, relativePositionToJSON, snapshot, transact, tryGc, typeListToArraySnapshot, typeMapGetSnapshot };\n//# sourceMappingURL=yjs.mjs.map\n","import * as Y from 'yjs';\n\nimport type { Shape } from '../../shapes';\n\nexport default class ShapeIndex {\n  doc: Y.Doc;\n\n  map: Y.Map<Shape>;\n\n  constructor() {\n    this.doc = new Y.Doc();\n    this.map = this.doc.getMap();\n  }\n\n  clear = () => {\n    const { size } = this.map;\n\n    if (size === 0) return;\n\n    this.doc.transact(() => this.map.forEach((_, key) => this.map.delete(key)));\n  };\n\n  set = (shapes: Shape[], clear = true) => {\n    if (clear) this.clear();\n\n    this.doc.transact(() => shapes.forEach((shape) => this.map.set(shape.id, shape)));\n  };\n\n  add = (shape: Shape) => this.map.set(shape.id, shape);\n\n  all = () => Array.from(this.map.values());\n\n  update = (previous: Shape | string, shape: Shape) => {\n    const prevId = typeof previous === 'string' ? previous : previous.id;\n\n    if (prevId === shape.id) {\n      this.map.set(shape.id, shape);\n    } else {\n      this.doc.transact(() => {\n        this.map.delete(prevId);\n        this.map.set(shape.id, shape);\n      });\n    }\n  };\n\n  bulkUpsert = (shapes: Shape[]) => {\n    this.doc.transact(() => {\n      shapes.forEach((shape) => {\n        this.map.set(shape.id, shape);\n      });\n    });\n  };\n\n  remove = (shape: Shape | string) => {\n    if (typeof shape === 'string') this.map.delete(shape);\n    else this.map.delete(shape.id);\n  };\n\n  get = (id: string): Shape | null => this.map.get(id);\n\n  size = () => this.map.size;\n\n  observe = (callback: (evt: Y.YMapEvent<Shape>, transaction: Y.Transaction) => void) =>\n    this.map.observe(callback);\n}\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","import RBush from 'rbush';\nimport { type Shape, ShapeType, computeArea, intersects } from '../../shapes';\n\ninterface IndexedShape {\n  minX: number;\n\n  minY: number;\n\n  maxX: number;\n\n  maxY: number;\n\n  shape: Shape;\n}\n\nexport default class SpatialTree {\n  tree: RBush<IndexedShape>;\n\n  constructor() {\n    this.tree = new RBush();\n  }\n\n  all = () => this.tree.all().map((item) => item.shape);\n\n  clear = () => this.tree.clear();\n\n  insert = (shape: Shape) => {\n    const { minX, minY, maxX, maxY } = shape.geometry.bounds;\n    this.tree.insert({ minX, minY, maxX, maxY, shape });\n  };\n\n  remove = (shape: Shape) => {\n    const item = {\n      ...shape.geometry.bounds,\n      shape\n    };\n\n    this.tree.remove(item, (a, b) => a.shape.id === b.shape.id);\n  };\n\n  update = (previous: Shape, shape: Shape) => {\n    this.remove(previous);\n    this.insert(shape);\n  };\n\n  set = (shapes: Shape[], clear: boolean = true) => {\n    if (clear) this.tree.clear();\n\n    this.tree.load(\n      shapes.map((shape) => {\n        const { minX, minY, maxX, maxY } = shape.geometry.bounds;\n        return { minX, minY, maxX, maxY, shape };\n      })\n    );\n  };\n\n  getAt = (x: number, y: number): Shape | null => {\n    const idxHits = this.tree\n      .search({\n        minX: x,\n        minY: y,\n        maxX: x,\n        maxY: y\n      })\n      .map((item) => item.shape);\n\n    // Exact hit test on shape (not needed for rectangles!)\n    const exactHits = idxHits.filter((shape) => {\n      if (shape.type === ShapeType.RECTANGLE) {\n        return true;\n      } else {\n        return intersects(shape, x, y);\n      }\n    });\n\n    // Get smallest shape\n    if (exactHits.length > 0) {\n      exactHits.sort((a, b) => computeArea(a) - computeArea(b));\n      return exactHits[0];\n    }\n  };\n\n  size = () => this.tree.all().length;\n}\n","import equal from 'deep-equal';\nimport type { Shape } from '../../shapes';\n\nexport default class StoreChangeEvent {\n  added: Shape[];\n\n  deleted: Shape[];\n\n  updated: { oldValue: Shape; newValue: Shape }[];\n\n  constructor(\n    added: Shape[],\n    deleted: Shape[],\n    updated: {\n      oldValue: Shape;\n      newValue: Shape;\n    }[]\n  ) {\n    this.added = added;\n    this.deleted = deleted;\n    this.updated = updated;\n  }\n\n  isEmpty = (): boolean => this.added.length + this.deleted.length + this.updated.length === 0;\n\n  removeStateChanges = (propsToRemove: string[] = []): StoreChangeEvent => {\n    const { added, deleted, updated } = this;\n\n    // Returns the shape object, without state\n    const stripState = (shape: Shape) => {\n      const { state, ...rest } = shape;\n\n      if (propsToRemove.length === 0) {\n        // Remove all state\n        return rest;\n      } else {\n        // Remove specific state props only\n        propsToRemove.forEach((prop) => {\n          delete state[prop];\n        });\n\n        return { ...rest, state };\n      }\n    };\n\n    const updatesWithoutStateChanges = updated.filter(({ oldValue, newValue }) => {\n      const a = stripState(oldValue);\n      const b = stripState(newValue);\n      return !equal(a, b);\n    });\n\n    return new StoreChangeEvent(added, deleted, updatesWithoutStateChanges);\n  };\n}\n","import type { Shape } from '../../shapes';\nimport ShapeIndex from './shapeIndex';\nimport SpatialTree from './spatialTree';\nimport StoreChangeEvent from './storeChangeEvent';\n\n/**\n * A common facade across the spatial tree and the YJS shape index.\n * Provides access to underlying query methods and keeps data in sync.^\n */\nconst Store = () => {\n  const tree = new SpatialTree();\n\n  const index = new ShapeIndex();\n\n  const observers: { callback: Function; ignoreHoverStateChanges: boolean }[] = [];\n\n  index.observe((evt) => {\n    const { keys } = evt.changes;\n\n    const added: Shape[] = [];\n\n    const deleted: Shape[] = [];\n\n    const updated: Array<{ oldValue: Shape; newValue: Shape }> = [];\n\n    for (const [key, value] of keys.entries()) {\n      const { action, oldValue } = value;\n\n      if (action === 'add') {\n        added.push(index.get(key));\n      } else if (action === 'update') {\n        updated.push({ oldValue, newValue: index.get(key) });\n      } else if (action === 'delete') {\n        deleted.push(oldValue);\n      }\n    }\n\n    // Update the spatial tree\n    tree.set(added, false);\n    deleted.forEach((shape) => tree.remove(shape));\n    updated.forEach(({ oldValue, newValue }) => tree.update(oldValue, newValue));\n\n    const event = new StoreChangeEvent(added, deleted, updated);\n\n    // Forward event to subscribed observers\n    observers.forEach(({ callback, ignoreHoverStateChanges }) => {\n      if (ignoreHoverStateChanges) {\n        // Don't fire the callback if this event has only state changes\n        const withoutStateChanges = event.removeStateChanges(['isHovered']);\n        if (!withoutStateChanges.isEmpty()) callback(event);\n      } else {\n        callback(event);\n      }\n    });\n  });\n\n  const add = (shape: Shape) => index.add(shape);\n\n  const all = (): Shape[] => index.all();\n\n  const clear = () => index.clear();\n\n  const get = (id: string): Shape | null => index.get(id);\n\n  const getAt = (x: number, y: number): Shape | null => tree.getAt(x, y);\n\n  const observe = (\n    callback: (evt: StoreChangeEvent) => void,\n    ignoreHoverStateChanges: boolean = false\n  ) => observers.push({ callback, ignoreHoverStateChanges });\n\n  const remove = (shape: Shape | string) => index.remove(shape);\n\n  const set = (shapes: Shape[], clear = true) => index.set(shapes, clear);\n\n  const setState = (id: string, diff: Object) => {\n    const shape = index.get(id);\n\n    if (shape) {\n      const updated = {\n        ...shape,\n        state: {\n          ...shape.state,\n          ...diff\n        }\n      };\n\n      index.add(updated);\n    }\n  };\n\n  const update = (previous: Shape | string, shape: Shape) => {\n    const previousShape = typeof previous === 'string' ? index.get(previous) : previous;\n    index.update(previousShape, shape);\n  };\n\n  const bulkUpsert = (shapes: Shape[]) => index.bulkUpsert(shapes);\n\n  return {\n    add,\n    all,\n    bulkUpsert,\n    clear,\n    get,\n    getAt,\n    observe,\n    remove,\n    set,\n    setState,\n    update,\n    doc: index.doc\n  };\n};\n\nexport default Store();\n","/**\n * Auth info can be an actual user, or an\n * anonymous guest. The still need IDs to\n * make things work in multiplayer.\n */\nexport enum UserType {\n  GUEST,\n  USER\n}\n\nexport interface Guest {\n  type: UserType.GUEST;\n\n  id: string;\n}\n\nexport interface User {\n  type: UserType.USER;\n\n  id: string;\n\n  displayName?: string;\n\n  email?: string;\n\n  avatarUrl?: string;\n}\n","import { nanoid } from 'nanoid';\nimport { type Guest, type User, UserType } from './User';\n\nconst AnonymousLocalUser = { type: UserType.GUEST, id: nanoid() };\n\nconst createEnvironment = () => {\n  /**\n   * Difference between server time and client time, in milliseconds\n   */\n  let serverTimeDifference: number;\n\n  /**\n   * Current user\n   */\n  let currentUser: Guest | User = AnonymousLocalUser;\n\n  return {\n    get currentUser() {\n      return currentUser;\n    },\n\n    set currentUser(user: Guest | User | undefined) {\n      if (user) currentUser = user;\n      else currentUser = AnonymousLocalUser;\n    },\n\n    /**\n     * Sets a server time, so we can correct browser time error.\n     * Note for the super-picky: client-server latency will introduce\n     * an error we don't account for.\n     */\n    setServerTime: (serverNow) => {\n      const browserNow = Date.now();\n      serverTimeDifference = serverNow - browserNow;\n    },\n\n    /**\n     * Returns the current 'server time', i.e. browser time\n     * adjusted by the serverTimeDifference value, in ISO format\n     */\n    getCurrentTimeAdjusted: () =>\n      serverTimeDifference ? new Date(Date.now() + serverTimeDifference).toISOString() : new Date().toISOString(),\n\n    /** Re-adjusts the given server ISO timestamp to browser time (MS) **/\n    toClientTime: (serverTime) => Date.parse(serverTime) - serverTimeDifference\n  };\n};\n\nexport const Env = createEnvironment();\n","import { writable } from 'svelte/store';\nimport Store from '../store/store';\nimport { Env } from '../../environment';\nimport type { Shape } from '../../shapes';\nimport store from '../store/store';\n\nconst Selection = () => {\n  const { subscribe, update } = writable<Shape[]>([]);\n\n  Store.observe(({ added, deleted, updated }) => {\n    // State changes\n    const withChangedState: Shape[] = updated\n      .filter(\n        ({ oldValue, newValue }) => oldValue.state.isSelectedBy !== newValue.state.isSelectedBy\n      )\n      .map(({ newValue }) => newValue);\n\n    // Added in selected state?\n    const newSelections = added.filter((shape) => shape.state.isSelectedBy);\n\n    if (withChangedState.length + deleted.length + newSelections.length > 0) {\n      update((currentSelection: Shape[]) => {\n        // Shapes that have changed to 'selected' in this update\n        const selected = [\n          ...withChangedState.filter(\n            (newValue) => newValue.state.isSelectedBy === Env.currentUser.id\n          ),\n          ...newSelections\n        ];\n\n        // IDs for the shapes that were 'deselected' in this update...\n        const deselectedIds = new Set([\n          //...because their status changed\n          ...withChangedState.filter((newValue) => !newValue.state.isSelectedBy).map((s) => s.id),\n\n          // ...because they were deleted while selected\n          ...deleted\n            .filter((shape) => currentSelection.find((s) => s.id === shape.id))\n            .map((s) => s.id)\n        ]);\n\n        if (selected.length + deselectedIds.size > 0) {\n          const updatedSelection = [\n            // Remove shapes that were disabled in this update\n            ...currentSelection.filter((shape) => !deselectedIds.has(shape.id)),\n\n            // Add shapes that were enabled in this update\n            ...selected\n          ];\n\n          // We're all immutable here. The position of the actual shapes in the store\n          // might have changed, therefore the selection 'copies' may need updating.\n          // This could possibly be optimized.\n          return updatedSelection.map(s => store.get(s.id));\n        } else {\n          return currentSelection.map(s => Store.get(s.id));\n        }\n      });\n    }\n  }, true);\n\n  // For convenience\n  const select = (arg: Shape | string) => {\n    const id = typeof arg === 'string' ? arg : arg.id;\n    Store.setState(id, { isSelectedBy: Env.currentUser.id });\n  };\n\n  const deselect = (arg: Shape | string) => {\n    const id = typeof arg === 'string' ? arg : arg.id;\n    Store.setState(id, { isSelectedBy: undefined });\n  };\n\n  return { subscribe, select, deselect };\n};\n\nexport default Selection();\n","<script type=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { draggable } from '@neodrag/svelte';\n  import Transcriptions from './Transcriptions.svelte';\n  import { Env } from '@annotorious/annotorious';\n  import type { WebAnnotation } from '@annotorious/formats';\n\n  const dispatch = createEventDispatcher();\n\n  export let annotation: WebAnnotation;\n\n  export let originalEvent: PointerEvent;\n\n  let transcriptions = [];\n\n  $: {\n    const bodies = annotation.body ? \n      Array.isArray(annotation.body) ? annotation.body : [ annotation.body ] : [];\n      \n    transcriptions = bodies.filter(body => \n      (!body.purpose || body.purpose === 'transcribing') && body.creator?.name !== 'mapKurator:post-ocr');\n  }\n\n  const onAddTranscription = (evt: CustomEvent<string>) => {\n    const bodies = Array.isArray(annotation.body) ? annotation.body : [ annotation.body ];\n\n    const updated = [\n      ...bodies,\n      {\n        type: 'TextualBody',\n        purpose: 'transcribing',\n        value: evt.detail,\n        creator: {\n          type: 'Person',\n          name: Env.currentUser.id\n        },\n        created: Env.getCurrentTimeAdjusted()\n      }\n    ];\n\n    annotation = {\n      ...annotation,\n      body: updated\n    };\n    \n    dispatch('transcriptionChanged', annotation);\n  }\n</script>\n\n<div \n  class=\"r8s-hover-container\" \n  style={`top: ${originalEvent.offsetY}px; left: ${originalEvent.offsetX}px`}>\n\n  <div class=\"r8s-hover-main\" use:draggable>\n    <div class=\"r8s-hover-content\">\n      <Transcriptions\n        data={transcriptions} \n        on:addTranscription={onAddTranscription} />\n    </div>\n  </div>\n\n  <div class=\"mousetrap\" />\n</div>\n\n<style>\n  .r8s-hover-container {\n    font-family: Arial, Helvetica, sans-serif;\n    position: absolute;\n    z-index: 999;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    min-width: 240px;\n    max-width: 460px;\n  }\n\n  .r8s-hover-main {\n    display: flex;\n    color: #333;\n    padding: 14px;\n    border-radius: 3px;\n    background-color: #fff;\n    border: 1px solid #cbccce;\n    box-shadow:0 0 24px rgba(0, 0, 0, 0.1);\n    z-index: 1;\n    width: 100%;\n    cursor: move;\n  }\n\n  .r8s-hover-content {\n    flex-grow: 1;\n  }\n\n  .mousetrap {\n    position: absolute;\n    top: -20px;\n    right: -20px;\n    left: -20px;\n    bottom: -20px;\n    z-index: -1;\n  }\n</style>","import type Annotorious from '@annotorious/openseadragon';\nimport type { WebAnnotation } from '@annotorious/formats';\nimport { LunaPopup } from './popup';\n\nexport class LunaPlugin {\n\n  anno: Annotorious;\n\n  viewer: OpenSeadragon.Viewer;\n\n  popup: LunaPopup;\n  \n  constructor(anno: Annotorious, viewer: OpenSeadragon.Viewer) {\n    this.anno = anno;\n    \n    this.viewer = viewer;\n\n    anno.on('mouseEnterAnnotation', (annotation, evt) => {\n      this.showPopup(annotation, evt);\n    });\n\n    anno.on('mouseLeaveAnnotation', () => {\n      this.hidePopup();\n    });\n  }\n\n  showPopup = (annotation: WebAnnotation, originalEvent: PointerEvent) => {\n    this.popup = new LunaPopup({\n      target: document.body,\n      props: { \n        annotation,\n        originalEvent,\n        // viewer: this.viewer\n      }\n    });\n\n    this.popup.$on('transcriptionChanged', (evt: CustomEvent<WebAnnotation>) =>\n      this.anno.updateAnnotation(evt.detail.id, evt.detail));\n\n    this.popup.$on('editShape', (evt: CustomEvent<WebAnnotation>) =>\n      this.anno.selectAnnotation(evt.detail.id));\n  }\n\n  hidePopup = () => {\n    this.popup.$destroy();\n    this.popup = null;\n  }\n\n}"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","is_empty","obj","action_destroyer","action_result","is_client","now","raf","cb","tasks","run_tasks","task","loop","callback","fulfill","append","target","node","get_root_for_style","root","append_empty_stylesheet","style_element","element","append_stylesheet","style","insert","anchor","detach","destroy_each","iterations","detaching","i","name","svg_element","text","data","space","empty","listen","event","handler","options","attr","attribute","value","set_svg_attributes","attributes","key","children","set_data","custom_event","type","detail","bubbles","cancelable","e","managed_styles","active","hash","str","create_style_information","doc","info","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","stylesheet","rules","animation","delete_rule","previous","next","anim","deleted","clear_rules","current_component","set_current_component","component","get_current_component","createEventDispatcher","callbacks","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","tick","add_render_callback","seen_callbacks","flushidx","saved_component","update","$$","dirty","promise","wait","dispatch","direction","kind","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","go","easing","css","get_spread_update","levels","updates","to_null_out","accounted_for","o","n","create_component","mount_component","customElement","fragment","on_mount","on_destroy","after_update","new_on_destroy","destroy_component","make_dirty","instance","create_fragment","not_equal","props","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","index","$$props","r","s","d","l","c","u","f","g","h","m","y","w","v","E","S","A","C","N","D","M","B","$","R","H","L","P","T","X","Y","q","U","_a","_b","Q","W","j","z","F","G","I","J","K","O","V","Z","tt","et","nt","_","_c","_d","_e","_f","_g","_h","_i","_k","_j","_m","_l","cubicOut","slide","opacity","height","padding_top","padding_bottom","margin_top","margin_bottom","border_top_width","border_bottom_width","ctx","svg","size","color","title","className","innerHtml","BsPatchCheckFill","FaSolidRobot","EN_US","en_US","diff","idx","unit","ZH_CN","zh_CN","Locales","register","locale","func","getLocale","SEC_ARRAY","toDate","input","formatDiff","localeFunc","agoIn","totalSec","diffSec","date","relativeDate","relDate","format","opts","sec","GHOST_ELEMENT_ID","characterEntities","mapSpecialCharacterToCharacterEntity","specialCharacter","escapeSpecialCharacters","string","createGhostElement","ghostElement","autosizeInput","elementStyle","elementCssText","setWidth","width","t0_value","if_block","create_if_block_5","span","current","t0","input_value_value","button","create_if_block_1","button0","button1","t1","t1_value","t_value","ul","each_blocks","ul_transition","t2_value","timeago.format","li","t2","div","sorted","inputEl","editable","best","isOCR","showAllTranscriptions","onKeyDown","evt","$$invalidate","$$value","click_handler","click_handler_1","click_handler_2","click_handler_3","byPerson","body","byMK","ShapeType","toStr","isArguments","isArgs","keysShim","has","require$$0","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","hasAutomationEqualityBug","equalsConstructorPrototypeIfNotBuggy","object","isObject","isFunction","isString","theKeys","skipProto","skipConstructor","implementation","slice","origKeys","require$$1","originalKeys","keysWorksWithArguments","args","objectKeys","shams","sym","symObj","symVal","syms","descriptor","hasSymbols","origSymbol","hasSymbolSham","ERROR_MESSAGE","funcType","that","bound","binder","result","boundLength","boundArgs","Empty","functionBind","bind","undefined","$SyntaxError","$Function","$TypeError","getEvalledConstructor","expressionSyntax","$gOPD","throwTypeError","ThrowTypeError","getProto","needsEval","TypedArray","INTRINSICS","doEval","gen","LEGACY_ALIASES","hasOwn","require$$2","$concat","$spliceApply","$replace","$strSlice","$exec","rePropName","reEscapeChar","stringToPath","first","last","match","number","quote","subString","getBaseIntrinsic","allowMissing","intrinsicName","alias","getIntrinsic","parts","intrinsicBaseName","intrinsic","intrinsicRealName","skipFurtherCaching","isOwn","part","desc","GetIntrinsic","$apply","$call","$reflectApply","$defineProperty","$max","module","originalFunction","applyBind","callBind","$indexOf","callBound","hasToStringTag","$toString","isStandardArguments","isLegacyArguments","supportsStandardArguments","hasPropertyDescriptors","hasPropertyDescriptors_1","keys","concat","origDefineProperty","supportsDescriptors","defineProperty","predicate","defineProperties","map","predicates","defineProperties_1","numberIsNaN","polyfill","getPolyfill","define","shim","require$$3","require$$4","define$2","objectIs","isRegexMarker","badStringifier","throwRegexMarker","gOPD","regexClass","isRegex","hasLastIndexDataProperty","functionsHaveNames","$bind","functionsHaveNames_1","functionsHaveConfigurableNames","$Object","calls","TypeErr","regex","proto","flagsBound","define$1","regexp_prototype_flags","toString","isarray","arr","getDay","tryDateObject","dateClass","isDateObject","strValue","tryStringObject","strClass","numToStr","tryNumberObject","numClass","isNumberObject","$boolToStr","tryBooleanObject","boolClass","isBooleanObject","symToStr","symStringRegex","isSymbolObject","isSymbolModule","$BigInt","hasBigints","hasBigInts","bigIntValueOf","tryBigInt","isBigintModule","isNumber","isBoolean","isSymbol","isBigInt","whichBoxedPrimitive","$Map","$Set","exported","$mapHas","$setHas","isMap","isSet","$WeakMap","$WeakSet","isWeakmap","isWeaksetModule","isWeakMap","isWeakSet","whichCollection","$iterator","esGetIteratorModule","iterable","isArray","require$$5","require$$6","$arrayPush","$charCodeAt","$stringSlice","advanceStringIndex","length","second","getArrayIterator","arraylike","done","getNonCollectionIterator","noPrimordialCollections","nextIndex","require$$7","require$$8","$mapForEach","$setForEach","$mapIterator","$setIterator","getStopIterationIterator","iterator","$mapAtAtIterator","$setAtAtIterator","getCollectionIterator","entries","values","hasMap","mapSizeDescriptor","mapSize","mapForEach","hasSet","setSizeDescriptor","setSize","setForEach","hasWeakMap","weakMapHas","hasWeakSet","weakSetHas","hasWeakRef","weakRefDeref","booleanValueOf","objectToString","functionToString","$match","$slice","$toUpperCase","$toLowerCase","$test","$join","$arrSlice","$floor","gOPS","symToString","hasShammedSymbols","toStringTag","gPO","addNumericSeparator","num","sepRegex","int","intStr","dec","utilInspect","inspectCustom","inspectSymbol","objectInspect","inspect_","depth","seen","customInspect","numericSeparator","inspectString","bigIntStr","maxDepth","indent","getIndent","indexOf","inspect","from","noIndent","newOpts","isRegExp","nameOf","arrObjKeys","symString","markBoxed","isElement","attrs","wrapQuotes","xs","singleLineValues","indentedJoin","isError","mapParts","collectionOf","setParts","weakCollectionOf","isWeakRef","isDate","ys","isPlainObject","protoTag","stringTag","constructorTag","tag","defaultStyle","quoteChar","remaining","trailer","lowbyte","joinedEntries","baseIndent","lineJoiner","isArr","symMap","$weakMapGet","$weakMapSet","$weakMapHas","$mapGet","$mapSet","listGetNode","list","prev","curr","listGet","objects","listSet","listHas","sideChannel","$wm","$m","$o","channel","fnToStr","reflectApply","badArrayLike","isCallableMarker","constructorRegex","isES6ClassFn","fnStr","tryFunctionObject","objectClass","fnClass","genClass","ddaClass","ddaClass2","ddaClass3","isIE68","isDDA","all","isCallable","hasOwnProperty","forEachArray","array","receiver","len","forEachString","forEachObject","forEach","thisArg","forEach_1","possibleNames","global","availableTypedArrays","out","gopd","typedArrays","toStrTags","getPrototypeOf","typedArray","superProto","tryTypedArrays","anyTrue","getter","isTypedArray","foundName","whichTypedArray","toObject","$push","$propIsEnumerable","originalGetSymbols","source1","to","getSymbols","nextKey","propValue","lacksProperEnumerationOrder","letters","actual","assignHasPendingExceptions","thrower","object_assign","is","flags","require$$9","require$$10","getIterator","require$$11","getSideChannel","require$$12","require$$13","require$$14","byteLength","isArrayBuffer","buffer","$getTime","$objToString","$mapSize","$setAdd","$setDelete","$setSize","setHasEqualElement","set","val1","internalDeepEqual","findLooseMatchingPrimitives","prim","mapMightHaveLoosePrim","item","altValue","curB","looseOpts","setMightHaveLoosePrim","mapHasEqualEntry","key1","item1","key2","expected","actualBoxed","expectedBoxed","hasActual","hasExpected","sentinel","objEquiv","isBuffer","setEquiv","iA","iB","resultA","resultB","mapEquiv","item2","aIsArray","bIsArray","aIsError","bIsError","aIsRegex","bIsRegex","aIsDate","bIsDate","aIsBuffer","bIsBuffer","aIsArrayBuffer","bIsArrayBuffer","ka","kb","aCollection","bCollection","deepEqual","Utils","registerShapeUtil","util","computeArea","shape","intersects","getSqDist","p1","p2","dx","dy","getSqSegDist","simplifyRadialDist","points","sqTolerance","prevPoint","newPoints","point","simplifyDPStep","simplified","maxSqDist","sqDist","simplifyDouglasPeucker","simplify","tolerance","highestQuality","PolygonUtil","polygon","area","inside","xi","yi","xj","yj","RectangleUtil","rect","nanoid","id","byte","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","subscribe","invalidate","create","copy","setIfUndefined","createT","res","any","appendTo","dest","Observable","map.create","map.setIfUndefined","set.create","observers","array.from","floor","abs","min","max","isNegativeZero","toLowerCase","trimLeftRegex","trimLeft","fromCamelCaseRegex","fromCamelCase","separator","_encodeUtf8Polyfill","encodedString","buf","utf8TextEncoder","encodeUtf8","utf8TextDecoder","undefinedToNull","VarStoragePolyfill","newValue","_localStorage","usePolyfill","varStorage","every","hasProperty","equalFlat","val","callAll","fs","isOneOf","isNode","computeParams","pargs","currParamName","parg","kv","string.fromCamelCase","hasParam","getVariable","conditions.undefinedToNull","storage.varStorage","forceColor","f.isOneOf","supportsColor","BIT1","BIT2","BIT3","BIT4","BIT6","BIT7","BIT8","BITS5","BITS6","BITS7","BITS31","isInteger","math.floor","createUint8ArrayViewFromArrayBuffer","byteOffset","Encoder","createEncoder","encoder","toUint8Array","uint8arr","curPos","buffer.createUint8ArrayViewFromArrayBuffer","verifyLen","bufferLen","math.max","write","writeUint8","writeVarUint","binary.BITS7","binary.BIT8","writeVarInt","isNegative","math.isNegativeZero","binary.BITS6","binary.BIT7","_strBuffer","_maxStrBSize","_writeVarStringNative","written","string.utf8TextEncoder","writeVarUint8Array","string.encodeUtf8","_writeVarStringPolyfill","writeVarString","writeUint8Array","uint8Array","cpos","leftCopyLen","math.min","rightCopyLen","writeOnDataView","dview","writeFloat32","writeFloat64","writeBigInt64","floatTestBed","isFloat32","writeAny","number.isInteger","math.abs","binary.BITS31","RleEncoder","writer","flushUintOptRleEncoder","UintOptRleEncoder","flushIntDiffOptRleEncoder","encodedDiff","IntDiffOptRleEncoder","StringEncoder","isoCrypto","cryptoRandomBuffer","uint32","uuidv4Template","uuidv4","getUnixTime","methodUnimplemented","unexpectedCase","Pair","left","right","mapToStyleString","map.map","BOLD","symbol.create","UNBOLD","BLUE","GREY","GREEN","RED","PURPLE","ORANGE","UNCOLOR","_browserStyleMap","pair.create","_nodeStyleMap","computeLoggingArgs","env.supportsColor","env.isNode","strBuilder","logArgs","arg","styles","currentStyle","dom.mapToStyleString","print","vconsoles","vc","createIterator","iteratorFilter","filter","iteratorMap","fmap","AbstractConnector","ydoc","awareness","DeleteItem","clock","DeleteSet","iterateDeletedStructs","transaction","ds","deletes","clientid","structs","del","iterateStructs","findIndexDS","dis","midindex","mid","midclock","isDeleted","sortAndMergeDeleteSet","dels","mergeDeleteSets","dss","merged","dssI","delsLeft","client","array.appendTo","addToDeleteSet","createDeleteSet","writeDeleteSet","encoding.writeVarUint","dsitems","generateNewClientId","random.uint32","Doc","guid","random.uuidv4","collectionid","gc","gcFilter","meta","autoLoad","shouldLoad","StructStore","promise.create","resolve","transact","origin","TypeConstructor","AbstractType","Constr","YArray","YText","YMap","YXmlFragment","subdoc","content","eventName","DSEncoderV1","encoding.createEncoder","encoding.toUint8Array","UpdateEncoderV1","encoding.writeUint8","encoding.writeVarString","isYKey","encoding.writeAny","encoding.writeVarUint8Array","embed","DSEncoderV2","error.unexpectedCase","UpdateEncoderV2","encoding.IntDiffOptRleEncoder","encoding.UintOptRleEncoder","encoding.RleEncoder","encoding.StringEncoder","encoding.writeUint8Array","writeStructs","startNewStructs","findIndexSS","firstStruct","writeClientsStructs","store","_sm","sm","getState","getStateVector","writeStructsFromTransaction","EventHandler","createEventHandler","addEventHandlerListener","eventHandler","removeEventHandlerListener","callEventHandlerListeners","arg0","arg1","f.callAll","ID","compareIDs","createID","findRootTypeKey","isParentOf","parent","child","Snapshot","sv","isVisible","snapshot","splitSnapshotAffectedStructs","getItemCleanStart","struct","lastStruct","addStruct","getItem","findIndexCleanStart","Item","splitItem","getItemCleanEnd","GC","replaceStruct","newStruct","clockStart","clockEnd","Transaction","writeUpdateMessageFromTransaction","map.any","addChangedTypeToTransaction","parentSub","tryToMergeWithLeft","pos","tryGcDeleteSet","deleteItems","di","deleteItem","endDeleteItemClock","si","tryMergeDeleteSet","mostRightIndexToCheck","cleanupTransactions","transactionCleanups","mergeStructs","subs","itemtype","events","event1","event2","beforeClock","firstChangePos","replacedStructPos","logging.print","logging.ORANGE","logging.BOLD","logging.UNBOLD","logging.RED","subdocsAdded","subdocsLoaded","subdocsRemoved","initialCall","StackItem","deletions","insertions","clearUndoManagerStackItem","tr","um","stackItem","keepItem","popStackItem","undoManager","stack","eventType","_tr","scope","itemsToRedo","itemsToDelete","performedChange","followRedone","redoItem","subProps","changedParentTypes","UndoManager","typeScope","captureTimeout","captureTransaction","deleteFilter","trackedOrigins","ignoreRemoteMapChanges","array.isArray","undoing","redoing","endClock","startClock","time.getUnixTime","didAdd","lastOp","changeEvent","ytypes","ytype","yt","clearUndoStack","clearRedoStack","YEvent","getPathTo","action","oldValue","array.last","changes","added","delta","packOp","path","maxSearchMarker","globalSearchMarkerTimestamp","ArraySearchMarker","refreshMarkerTimestamp","marker","overwriteMarker","markPosition","searchMarker","pm","findMarker","yarray","pindex","updateMarkerChanges","callTypeObservers","changedType","error.methodUnimplemented","parentSubs","typeListSlice","end","cs","typeListToArray","typeListForEach","typeListMap","typeListCreateIterator","currentContent","currentContentIndex","typeListGet","typeListInsertGenericsAfter","referenceItem","ownClientId","jsonContent","packJsonContent","ContentAny","ContentBinary","ContentDoc","ContentType","lengthExceeded","error.create","typeListInsertGenerics","startIndex","typeListPushGenerics","maxMarker","currMarker","typeListDelete","startLength","typeMapDelete","typeMapSet","typeMapGet","typeMapGetAll","typeMapHas","createMapIterator","iterator.iteratorFilter","entry","YArrayEvent","items","el","YArrayRefID","YMapEvent","ymap","iterator.iteratorMap","YMapRefID","equalAttrs","object.equalFlat","ItemTextListPosition","currentAttributes","ContentFormat","updateCurrentAttributes","findNextPosition","count","findPosition","insertNegatedAttributes","currPos","negatedAttributes","nextFormat","minimizeAttributeChanges","insertAttributes","currentVal","insertText","ContentString","ContentEmbed","formatText","iterationLoop","newlines","cleanupFormattingGap","startAttributes","currAttributes","endAttributes","map.copy","cleanups","reachedEndOfCurr","cleanupContextlessFormattingGap","cleanupYTextFormatting","deleteText","startAttrs","YTextEvent","ytext","sub","oldAttributes","retain","deleteLen","addOp","op","curVal","foundFormattingItem","afterClock","sanitize","ins","prevSnapshot","computeYChange","ops","packStr","addAttributes","cur","attributeName","attributeValue","YTextRefID","YXmlTreeWalker","YXmlElement","query","YXmlEvent","xml","_document","hooks","binding","xmlType","ref","refItem","pc","YXmlFragmentRefID","nodeName","stringBuilder","keysLen","attrsString","dom","yxml","YXmlElementRefID","AbstractStruct","offset","encodingRef","structGCRefNumber","ContentDeleted","createDocFromOpts","firstCharCode","nextID","keep","leftItem","rightItem","redoitems","ownClientID","redone","parentItem","parentType","leftTrace","rightTrace","nextClock","nextId","redoneItem","rightOrigin","binary.BIT2","isMarked","binary.BIT4","binary.BIT1","doKeep","binary.BIT3","doDelete","conflictingItems","itemsBeforeOrigin","parentGCd","binary.BITS5","binary.BIT6","ykey","glo","importIdentifier","ShapeIndex","shapes","clear","prevId","Y.Doc","quickselect","compare","quickselectStep","defaultCompare","sd","newLeft","newRight","swap","tmp","RBush","maxEntries","bbox","toBBox","nodesToSearch","childBBox","contains","tmpNode","createNode","equalsFn","indexes","goingUp","findItem","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","insertPath","extend","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","minX","minY","maxX","maxY","SpatialTree","exactHits","StoreChangeEvent","updated","propsToRemove","stripState","state","prop","updatesWithoutStateChanges","equal","Store$1","tree","ignoreHoverStateChanges","previousShape","UserType","UserType2","AnonymousLocalUser","Env","serverTimeDifference","currentUser","user","serverNow","browserNow","serverTime","Store","withChangedState","newSelections","currentSelection","selected","deselectedIds","div3","div3_style_value","div1","div0","div2","annotation","originalEvent","transcriptions","onAddTranscription","bodies","LunaPlugin","anno","viewer","LunaPopup"],"mappings":"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"}